{"classifications":{"Innocuous method call added":{"index":"InnocuousMethodCallAdd","weight":5},"Method call deleted":{"index":"MethodCallDelete","weight":5},"Block added":{"index":"BlockAdd","weight":5},"Return replaced":{"index":"ReturnReplace","weight":5},"Return deleted":{"index":"ReturnDelete","weight":5},"Block replaced":{"index":"BlockReplace","weight":5},"Field assignment replaced":{"index":"FieldAssignmentReplace","weight":5},"Innocuous method replaced":{"index":"InnocuousMethodCallReplace","weight":5},"Transplant is var declaration. Parent has delete.":{"index":"LocalVarDeclaration","weight":1},"Return added":{"index":"ReturnAdd","weight":5},"Fake sosies (TP == Transplant)":{"index":"Fake","weight":1},"Innocuous method call deleted":{"index":"InnocuousMethodCallDelete","weight":5},"Block deleted":{"index":"BlockDelete","weight":5},"Exceptions substituted by another exception":{"index":"ExceptionByException","weight":1},"Method call added":{"index":"MethodCallAdd","weight":5},"Method call replaced":{"index":"MethodCallReplace","weight":5},"Field assignment deleted":{"index":"FieldAssignmentDelete","weight":5},"Field assignment added":{"index":"FieldAssignmentAdd","weight":5}},"transformationClass":[46,"MethodCallReplace","replaceRandom",46,"LocalVarDeclaration","replaceRandom",112,"MethodCallDelete","delete",240,"MethodCallReplace","replaceRandom",240,"LocalVarDeclaration","replaceRandom",347,"MethodCallReplace","replaceRandom",347,"LocalVarDeclaration","replaceRandom",789,"MethodCallReplace","replaceRandom",789,"LocalVarDeclaration","replaceRandom",174,"ReturnReplace","replaceRandom",174,"MethodCallReplace","replaceRandom",174,"BlockReplace","replaceRandom",174,"LocalVarDeclaration","replaceRandom",419,"ReturnDelete","delete",419,"MethodCallDelete","delete",419,"BlockDelete","delete",675,"ReturnReplace","replaceRandom",675,"MethodCallReplace","replaceRandom",675,"BlockReplace","replaceRandom",675,"LocalVarDeclaration","replaceRandom",774,"ExceptionByException","replaceRandom",774,"Fake","replaceRandom",114,"ReturnReplace","replaceReaction",114,"MethodCallReplace","replaceReaction",114,"BlockReplace","replaceReaction",454,"MethodCallReplace","replaceRandom",226,"MethodCallReplace","replaceRandom",226,"LocalVarDeclaration","replaceRandom",248,"MethodCallReplace","replaceRandom",248,"LocalVarDeclaration","replaceRandom",296,"MethodCallReplace","replaceRandom",296,"LocalVarDeclaration","replaceRandom",301,"MethodCallReplace","replaceRandom",301,"LocalVarDeclaration","replaceRandom",335,"MethodCallReplace","replace",343,"MethodCallReplace","replaceReaction",369,"MethodCallReplace","replaceRandom",377,"MethodCallReplace","replace",756,"MethodCallDelete","delete",485,"MethodCallReplace","replaceWittgenstein",543,"MethodCallReplace","replaceRandom",98,"MethodCallReplace","replaceRandom",98,"LocalVarDeclaration","replaceRandom",319,"MethodCallDelete","delete",552,"MethodCallReplace","replaceRandom",552,"LocalVarDeclaration","replaceRandom",564,"MethodCallReplace","replace",564,"BlockReplace","replace",573,"MethodCallReplace","replaceRandom",573,"LocalVarDeclaration","replaceRandom",634,"MethodCallReplace","replaceRandom",634,"LocalVarDeclaration","replaceRandom",825,"MethodCallReplace","replaceRandom",825,"LocalVarDeclaration","replaceRandom",528,"MethodCallReplace","replaceRandom",528,"LocalVarDeclaration","replaceRandom",12,"MethodCallReplace","replaceRandom",12,"LocalVarDeclaration","replaceRandom",23,"MethodCallReplace","replaceRandom",23,"LocalVarDeclaration","replaceRandom",73,"MethodCallReplace","replaceRandom",73,"LocalVarDeclaration","replaceRandom",86,"MethodCallDelete","delete",259,"MethodCallReplace","replaceRandom",259,"LocalVarDeclaration","replaceRandom",280,"MethodCallReplace","replace",338,"MethodCallReplace","replaceRandom",338,"LocalVarDeclaration","replaceRandom",667,"MethodCallReplace","replaceRandom",667,"LocalVarDeclaration","replaceRandom",760,"MethodCallReplace","replaceRandom",760,"LocalVarDeclaration","replaceRandom",817,"MethodCallReplace","replaceWittgenstein",817,"LocalVarDeclaration","replaceWittgenstein",55,"ReturnReplace","replaceWittgenstein",55,"MethodCallReplace","replaceWittgenstein",115,"ReturnReplace","replaceWittgenstein",115,"MethodCallReplace","replaceWittgenstein",134,"ReturnReplace","replaceWittgenstein",134,"MethodCallReplace","replaceWittgenstein",265,"ReturnReplace","replaceWittgenstein",265,"MethodCallReplace","replaceWittgenstein",288,"ReturnReplace","replaceWittgenstein",288,"MethodCallReplace","replaceWittgenstein",566,"ReturnReplace","replaceWittgenstein",566,"MethodCallReplace","replaceWittgenstein",678,"ReturnReplace","replaceWittgenstein",678,"MethodCallReplace","replaceWittgenstein",740,"ReturnReplace","replaceWittgenstein",740,"MethodCallReplace","replaceWittgenstein",40,"MethodCallDelete","delete",83,"MethodCallReplace","replaceWittgenstein",83,"LocalVarDeclaration","replaceWittgenstein",160,"MethodCallReplace","replaceWittgenstein",664,"MethodCallReplace","replaceWittgenstein",143,"ReturnReplace","replace",77,"MethodCallReplace","replaceWittgenstein",77,"LocalVarDeclaration","replaceWittgenstein",456,"MethodCallReplace","replaceWittgenstein",776,"MethodCallReplace","replaceWittgenstein",63,"MethodCallReplace","replace",63,"ExceptionByException","replace",87,"MethodCallReplace","replaceReaction",87,"ExceptionByException","replaceReaction",88,"MethodCallReplace","replace",88,"ExceptionByException","replace",120,"MethodCallReplace","replaceReaction",120,"ExceptionByException","replaceReaction",141,"MethodCallReplace","replaceWittgenstein",141,"ExceptionByException","replaceWittgenstein",146,"ReturnReplace","replaceRandom",146,"MethodCallReplace","replaceRandom",175,"MethodCallReplace","replace",175,"ExceptionByException","replace",222,"MethodCallReplace","replace",222,"ExceptionByException","replace",223,"MethodCallReplace","replaceReaction",223,"ExceptionByException","replaceReaction",262,"MethodCallReplace","replaceReaction",262,"ExceptionByException","replaceReaction",283,"MethodCallReplace","replaceWittgenstein",283,"ExceptionByException","replaceWittgenstein",287,"MethodCallReplace","replace",287,"ExceptionByException","replace",314,"MethodCallReplace","replaceReaction",314,"ExceptionByException","replaceReaction",342,"MethodCallReplace","replace",342,"ExceptionByException","replace",368,"MethodCallReplace","replaceReaction",368,"ExceptionByException","replaceReaction",370,"MethodCallReplace","replaceWittgenstein",370,"ExceptionByException","replaceWittgenstein",375,"MethodCallReplace","replaceWittgenstein",375,"ExceptionByException","replaceWittgenstein",385,"MethodCallReplace","replaceReaction",385,"ExceptionByException","replaceReaction",388,"MethodCallReplace","replaceWittgenstein",388,"ExceptionByException","replaceWittgenstein",401,"MethodCallReplace","replaceReaction",401,"ExceptionByException","replaceReaction",612,"ReturnReplace","replaceRandom",612,"MethodCallReplace","replaceRandom",642,"MethodCallReplace","replaceReaction",642,"ExceptionByException","replaceReaction",646,"MethodCallReplace","replaceWittgenstein",646,"ExceptionByException","replaceWittgenstein",715,"MethodCallReplace","replaceReaction",715,"ExceptionByException","replaceReaction",260,"ReturnReplace","replaceRandom",168,"ExceptionByException","replaceWittgenstein",186,"ExceptionByException","replaceWittgenstein",397,"ExceptionByException","replaceWittgenstein",412,"ExceptionByException","replaceWittgenstein",540,"ReturnReplace","replace",544,"ExceptionByException","replace",38,"MethodCallDelete","delete",340,"MethodCallReplace","replaceWittgenstein",340,"LocalVarDeclaration","replaceWittgenstein",232,"MethodCallReplace","replaceRandom",232,"BlockReplace","replaceRandom",232,"Fake","replaceRandom",498,"ReturnReplace","replaceWittgenstein",498,"MethodCallReplace","replaceWittgenstein",509,"ReturnReplace","replaceReaction",509,"MethodCallReplace","replaceReaction",744,"ReturnReplace","replaceRandom",638,"ReturnReplace","replaceWittgenstein",638,"MethodCallReplace","replaceWittgenstein",93,"MethodCallReplace","replaceWittgenstein",427,"MethodCallDelete","delete",823,"MethodCallReplace","replaceWittgenstein",823,"LocalVarDeclaration","replaceWittgenstein",502,"ReturnDelete","delete",502,"BlockDelete","delete",595,"LocalVarDeclaration","replaceRandom",595,"Fake","replaceRandom",194,"ReturnReplace","replace",194,"MethodCallReplace","replace",194,"BlockReplace","replace",325,"LocalVarDeclaration","replaceWittgenstein",213,"MethodCallReplace","replaceWittgenstein",213,"LocalVarDeclaration","replaceWittgenstein",472,"MethodCallDelete","delete",284,"ReturnReplace","replaceWittgenstein",284,"MethodCallReplace","replaceWittgenstein",334,"ReturnReplace","replaceWittgenstein",334,"MethodCallReplace","replaceWittgenstein",633,"ReturnReplace","replaceWittgenstein",633,"MethodCallReplace","replaceWittgenstein",777,"ReturnReplace","replaceWittgenstein",777,"MethodCallReplace","replaceWittgenstein",587,"MethodCallReplace","replaceRandom",587,"BlockReplace","replaceRandom",587,"LocalVarDeclaration","replaceRandom",648,"MethodCallDelete","delete",648,"BlockDelete","delete",35,"MethodCallReplace","replaceRandom",35,"BlockReplace","replaceRandom",35,"LocalVarDeclaration","replaceRandom",43,"MethodCallReplace","replaceRandom",43,"BlockReplace","replaceRandom",43,"LocalVarDeclaration","replaceRandom",49,"MethodCallReplace","replace",49,"BlockReplace","replace",125,"MethodCallReplace","replaceRandom",125,"BlockReplace","replaceRandom",125,"LocalVarDeclaration","replaceRandom",140,"MethodCallReplace","replaceWittgenstein",140,"BlockReplace","replaceWittgenstein",184,"MethodCallReplace","replace",184,"BlockReplace","replace",188,"MethodCallReplace","replaceRandom",188,"BlockReplace","replaceRandom",188,"LocalVarDeclaration","replaceRandom",221,"MethodCallReplace","replaceReaction",221,"BlockReplace","replaceReaction",221,"Fake","replaceReaction",297,"MethodCallDelete","delete",297,"BlockDelete","delete",310,"MethodCallReplace","replace",310,"BlockReplace","replace",635,"MethodCallReplace","replaceWittgenstein",635,"BlockReplace","replaceWittgenstein",650,"MethodCallReplace","replace",650,"BlockReplace","replace",672,"MethodCallReplace","replaceWittgenstein",672,"BlockReplace","replaceWittgenstein",815,"MethodCallReplace","replaceRandom",815,"BlockReplace","replaceRandom",815,"LocalVarDeclaration","replaceRandom",489,"MethodCallDelete","delete",778,"MethodCallReplace","replaceWittgenstein",778,"LocalVarDeclaration","replaceWittgenstein",153,"LocalVarDeclaration","replaceRandom",153,"Fake","replaceRandom",404,"ReturnReplace","replaceRandom",404,"LocalVarDeclaration","replaceRandom",408,"ReturnReplace","replaceRandom",408,"LocalVarDeclaration","replaceRandom",607,"ReturnReplace","replaceRandom",607,"LocalVarDeclaration","replaceRandom",490,"MethodCallReplace","replaceWittgenstein",580,"MethodCallReplace","replaceReaction",580,"BlockReplace","replaceReaction",651,"MethodCallReplace","replaceWittgenstein",145,"MethodCallReplace","replaceRandom",145,"LocalVarDeclaration","replaceRandom",200,"MethodCallDelete","delete",616,"MethodCallReplace","replaceRandom",616,"LocalVarDeclaration","replaceRandom",32,"ReturnReplace","replaceWittgenstein",32,"MethodCallReplace","replaceWittgenstein",113,"ReturnReplace","replaceWittgenstein",113,"MethodCallReplace","replaceWittgenstein",164,"ReturnReplace","replaceWittgenstein",164,"MethodCallReplace","replaceWittgenstein",192,"ReturnReplace","replaceWittgenstein",192,"MethodCallReplace","replaceWittgenstein",230,"ReturnReplace","replaceWittgenstein",230,"MethodCallReplace","replaceWittgenstein",303,"ReturnReplace","replaceWittgenstein",303,"MethodCallReplace","replaceWittgenstein",315,"ReturnReplace","replaceWittgenstein",315,"MethodCallReplace","replaceWittgenstein",469,"ReturnReplace","replace",469,"MethodCallReplace","replace",487,"ReturnReplace","replaceReaction",487,"MethodCallReplace","replaceReaction",516,"ReturnReplace","replaceWittgenstein",516,"MethodCallReplace","replaceWittgenstein",689,"ReturnReplace","replaceWittgenstein",689,"MethodCallReplace","replaceWittgenstein",723,"ReturnReplace","replaceWittgenstein",723,"MethodCallReplace","replaceWittgenstein",727,"ReturnReplace","replaceWittgenstein",727,"MethodCallReplace","replaceWittgenstein",733,"ReturnReplace","replaceWittgenstein",733,"MethodCallReplace","replaceWittgenstein",763,"ReturnReplace","replaceWittgenstein",763,"MethodCallReplace","replaceWittgenstein",769,"ReturnReplace","replaceWittgenstein",769,"MethodCallReplace","replaceWittgenstein",816,"ReturnReplace","replaceWittgenstein",816,"MethodCallReplace","replaceWittgenstein",830,"ReturnReplace","replaceWittgenstein",830,"MethodCallReplace","replaceWittgenstein",840,"ReturnReplace","replaceWittgenstein",840,"MethodCallReplace","replaceWittgenstein",841,"ReturnReplace","replaceWittgenstein",841,"MethodCallReplace","replaceWittgenstein",268,"ReturnReplace","replaceRandom",268,"MethodCallReplace","replaceRandom",268,"Fake","replaceRandom",560,"MethodCallReplace","replaceRandom",560,"Fake","replaceRandom",443,"MethodCallReplace","replace",128,"MethodCallReplace","replace",181,"MethodCallReplace","replaceRandom",181,"LocalVarDeclaration","replaceRandom",190,"MethodCallDelete","delete",302,"MethodCallReplace","replace",415,"MethodCallReplace","replaceReaction",61,"ExceptionByException","replaceWittgenstein",76,"ExceptionByException","replaceWittgenstein",116,"ExceptionByException","replaceWittgenstein",267,"ExceptionByException","replaceWittgenstein",373,"ExceptionByException","replaceWittgenstein",391,"ExceptionByException","replaceWittgenstein",407,"ExceptionByException","replaceWittgenstein",414,"ExceptionByException","replaceWittgenstein",535,"ExceptionByException","replaceWittgenstein",576,"ExceptionByException","replaceWittgenstein",603,"ExceptionByException","replaceWittgenstein",755,"ExceptionByException","replaceWittgenstein",95,"MethodCallReplace","replace",647,"MethodCallReplace","replaceWittgenstein",647,"BlockReplace","replaceWittgenstein",708,"MethodCallReplace","replaceWittgenstein",708,"Fake","replaceWittgenstein",105,"MethodCallReplace","replaceRandom",105,"BlockReplace","replaceRandom",105,"Fake","replaceRandom",706,"MethodCallReplace","replaceReaction",706,"BlockReplace","replaceReaction",706,"LocalVarDeclaration","replaceReaction",762,"MethodCallReplace","replaceRandom",762,"BlockReplace","replaceRandom",762,"LocalVarDeclaration","replaceRandom",801,"MethodCallDelete","delete",801,"BlockDelete","delete",819,"MethodCallReplace","replace",819,"BlockReplace","replace",836,"MethodCallReplace","replaceRandom",836,"BlockReplace","replaceRandom",836,"LocalVarDeclaration","replaceRandom",644,"ReturnReplace","replace",123,"ReturnReplace","replaceWittgenstein",123,"MethodCallReplace","replaceWittgenstein",123,"BlockReplace","replaceWittgenstein",571,"LocalVarDeclaration","replaceRandom",721,"ReturnReplace","replaceRandom",337,"ReturnReplace","replaceWittgenstein",337,"MethodCallReplace","replaceWittgenstein",463,"ReturnReplace","replace",463,"MethodCallReplace","replace",583,"ReturnReplace","replaceWittgenstein",583,"MethodCallReplace","replaceWittgenstein",602,"ReturnReplace","replaceWittgenstein",602,"MethodCallReplace","replaceWittgenstein",346,"ReturnReplace","replaceRandom",346,"MethodCallReplace","replaceRandom",346,"Fake","replaceRandom",643,"ReturnReplace","replaceRandom",1,"MethodCallReplace","replaceWittgenstein",1,"ExceptionByException","replaceWittgenstein",25,"MethodCallReplace","replaceWittgenstein",25,"ExceptionByException","replaceWittgenstein",36,"MethodCallReplace","replaceWittgenstein",36,"ExceptionByException","replaceWittgenstein",103,"MethodCallReplace","replaceWittgenstein",103,"ExceptionByException","replaceWittgenstein",359,"MethodCallReplace","replaceWittgenstein",359,"ExceptionByException","replaceWittgenstein",389,"MethodCallReplace","replaceWittgenstein",389,"ExceptionByException","replaceWittgenstein",400,"MethodCallReplace","replaceWittgenstein",400,"ExceptionByException","replaceWittgenstein",411,"MethodCallReplace","replaceWittgenstein",411,"ExceptionByException","replaceWittgenstein",545,"ReturnReplace","replaceRandom",545,"MethodCallReplace","replaceRandom",599,"MethodCallReplace","replaceWittgenstein",599,"ExceptionByException","replaceWittgenstein",741,"MethodCallReplace","replaceWittgenstein",741,"ExceptionByException","replaceWittgenstein",791,"MethodCallReplace","replaceWittgenstein",791,"ExceptionByException","replaceWittgenstein",829,"MethodCallReplace","replaceWittgenstein",829,"ExceptionByException","replaceWittgenstein",845,"MethodCallReplace","replaceWittgenstein",845,"ExceptionByException","replaceWittgenstein",2,"ReturnReplace","replaceRandom",2,"MethodCallReplace","replaceRandom",71,"ReturnReplace","replaceWittgenstein",71,"MethodCallReplace","replaceWittgenstein",100,"ReturnReplace","replaceReaction",100,"MethodCallReplace","replaceReaction",172,"ReturnReplace","replaceWittgenstein",172,"MethodCallReplace","replaceWittgenstein",292,"ReturnReplace","replace",292,"MethodCallReplace","replace",662,"FieldAssignmentReplace","replace",722,"MethodCallReplace","replaceWittgenstein",241,"ReturnReplace","replaceRandom",241,"Fake","replaceRandom",58,"MethodCallReplace","replaceWittgenstein",58,"ExceptionByException","replaceWittgenstein",89,"MethodCallReplace","replaceWittgenstein",89,"ExceptionByException","replaceWittgenstein",124,"MethodCallReplace","replaceWittgenstein",124,"ExceptionByException","replaceWittgenstein",129,"MethodCallReplace","replaceWittgenstein",129,"ExceptionByException","replaceWittgenstein",215,"MethodCallReplace","replaceWittgenstein",215,"ExceptionByException","replaceWittgenstein",256,"MethodCallReplace","replaceWittgenstein",256,"ExceptionByException","replaceWittgenstein",266,"MethodCallReplace","replaceWittgenstein",266,"ExceptionByException","replaceWittgenstein",293,"MethodCallReplace","replaceWittgenstein",293,"ExceptionByException","replaceWittgenstein",306,"MethodCallReplace","replaceWittgenstein",306,"ExceptionByException","replaceWittgenstein",351,"MethodCallReplace","replaceWittgenstein",351,"ExceptionByException","replaceWittgenstein",449,"MethodCallDelete","delete",471,"MethodCallReplace","replaceRandom",471,"LocalVarDeclaration","replaceRandom",551,"MethodCallReplace","replaceWittgenstein",551,"ExceptionByException","replaceWittgenstein",624,"MethodCallReplace","replaceWittgenstein",624,"ExceptionByException","replaceWittgenstein",665,"MethodCallReplace","replaceWittgenstein",665,"ExceptionByException","replaceWittgenstein",704,"MethodCallReplace","replaceWittgenstein",704,"ExceptionByException","replaceWittgenstein",834,"MethodCallReplace","replaceWittgenstein",834,"ExceptionByException","replaceWittgenstein",653,"MethodCallReplace","replace",653,"LocalVarDeclaration","replace",353,"ReturnReplace","replaceWittgenstein",353,"MethodCallReplace","replaceWittgenstein",376,"ReturnReplace","replace",376,"MethodCallReplace","replace",425,"MethodCallDelete","delete",659,"FieldAssignmentReplace","replaceRandom",659,"Fake","replaceRandom",381,"ReturnReplace","replaceWittgenstein",381,"MethodCallReplace","replaceWittgenstein",381,"BlockReplace","replaceWittgenstein",682,"MethodCallReplace","replaceRandom",682,"LocalVarDeclaration","replaceRandom",682,"Fake","replaceRandom",775,"MethodCallReplace","replaceWittgenstein",69,"MethodCallReplace","replaceRandom",69,"LocalVarDeclaration","replaceRandom",227,"MethodCallReplace","replace",258,"MethodCallReplace","replaceRandom",258,"LocalVarDeclaration","replaceRandom",273,"MethodCallReplace","replace",673,"MethodCallReplace","replaceReaction",683,"MethodCallDelete","delete",395,"ReturnReplace","replaceRandom",395,"Fake","replaceRandom",39,"ReturnReplace","replace",39,"MethodCallReplace","replace",330,"ReturnReplace","replaceWittgenstein",330,"MethodCallReplace","replaceWittgenstein",379,"BlockReplace","replaceWittgenstein",379,"LocalVarDeclaration","replaceWittgenstein",468,"BlockDelete","delete",102,"ExceptionByException","replaceWittgenstein",344,"ExceptionByException","replaceWittgenstein",527,"ExceptionByException","replace",549,"ExceptionByException","replaceWittgenstein",695,"ExceptionByException","replaceWittgenstein",167,"LocalVarDeclaration","replaceWittgenstein",321,"LocalVarDeclaration","replaceWittgenstein",800,"LocalVarDeclaration","replaceWittgenstein",453,"ReturnDelete","delete",473,"ReturnReplace","replaceWittgenstein",473,"Fake","replaceWittgenstein",713,"ReturnReplace","replace",713,"Fake","replace",92,"MethodCallReplace","replaceWittgenstein",270,"MethodCallReplace","replaceWittgenstein",707,"MethodCallReplace","replaceWittgenstein",3,"ReturnReplace","replaceWittgenstein",3,"MethodCallReplace","replaceWittgenstein",48,"ReturnReplace","replaceWittgenstein",48,"MethodCallReplace","replaceWittgenstein",75,"ReturnReplace","replaceWittgenstein",75,"MethodCallReplace","replaceWittgenstein",108,"ReturnReplace","replaceWittgenstein",108,"MethodCallReplace","replaceWittgenstein",131,"ReturnReplace","replaceWittgenstein",131,"MethodCallReplace","replaceWittgenstein",161,"ReturnReplace","replaceWittgenstein",161,"MethodCallReplace","replaceWittgenstein",199,"ReturnReplace","replaceWittgenstein",199,"MethodCallReplace","replaceWittgenstein",237,"ReturnReplace","replaceWittgenstein",237,"MethodCallReplace","replaceWittgenstein",278,"ReturnReplace","replaceWittgenstein",278,"MethodCallReplace","replaceWittgenstein",279,"ReturnReplace","replaceWittgenstein",279,"MethodCallReplace","replaceWittgenstein",300,"ReturnReplace","replaceWittgenstein",300,"MethodCallReplace","replaceWittgenstein",459,"ReturnReplace","replace",459,"MethodCallReplace","replace",465,"ReturnReplace","replace",465,"MethodCallReplace","replace",497,"ReturnReplace","replaceWittgenstein",497,"MethodCallReplace","replaceWittgenstein",596,"ReturnReplace","replaceWittgenstein",596,"MethodCallReplace","replaceWittgenstein",611,"ReturnReplace","replaceWittgenstein",611,"MethodCallReplace","replaceWittgenstein",645,"ReturnReplace","replaceWittgenstein",645,"MethodCallReplace","replaceWittgenstein",681,"ReturnReplace","replaceWittgenstein",681,"MethodCallReplace","replaceWittgenstein",770,"ReturnReplace","replaceWittgenstein",770,"MethodCallReplace","replaceWittgenstein",799,"ReturnReplace","replaceWittgenstein",799,"MethodCallReplace","replaceWittgenstein",155,"ReturnReplace","replaceWittgenstein",155,"MethodCallReplace","replaceWittgenstein",382,"ReturnReplace","replaceWittgenstein",382,"MethodCallReplace","replaceWittgenstein",393,"ReturnReplace","replaceWittgenstein",393,"MethodCallReplace","replaceWittgenstein",403,"ReturnReplace","replaceWittgenstein",403,"MethodCallReplace","replaceWittgenstein",455,"ReturnReplace","replace",455,"MethodCallReplace","replace",539,"ReturnReplace","replace",539,"MethodCallReplace","replace",690,"ReturnReplace","replaceWittgenstein",690,"MethodCallReplace","replaceWittgenstein",724,"ReturnReplace","replaceWittgenstein",724,"MethodCallReplace","replaceWittgenstein",728,"ReturnReplace","replaceWittgenstein",728,"MethodCallReplace","replaceWittgenstein",853,"ReturnReplace","replaceWittgenstein",853,"MethodCallReplace","replaceWittgenstein",582,"ReturnReplace","replaceWittgenstein",700,"ReturnReplace","replaceWittgenstein",180,"LocalVarDeclaration","replaceWittgenstein",249,"ReturnReplace","replaceReaction",249,"MethodCallReplace","replaceReaction",90,"FieldAssignmentDelete","delete",421,"MethodCallReplace","replaceWittgenstein",421,"FieldAssignmentReplace","replaceWittgenstein",668,"FieldAssignmentReplace","replaceRandom",668,"LocalVarDeclaration","replaceRandom",738,"FieldAssignmentReplace","replaceWittgenstein",738,"LocalVarDeclaration","replaceWittgenstein",533,"MethodCallReplace","replace",533,"BlockReplace","replace",474,"ReturnReplace","replaceReaction",225,"MethodCallReplace","replaceWittgenstein",225,"LocalVarDeclaration","replaceWittgenstein",515,"MethodCallDelete","delete",805,"MethodCallReplace","replaceWittgenstein",805,"LocalVarDeclaration","replaceWittgenstein",501,"ReturnReplace","replaceRandom",501,"Fake","replaceRandom",494,"MethodCallReplace","replaceRandom",78,"LocalVarDeclaration","replaceWittgenstein",555,"LocalVarDeclaration","replaceWittgenstein",547,"BlockReplace","replaceReaction",547,"FieldAssignmentReplace","replaceReaction",730,"BlockReplace","replaceWittgenstein",730,"FieldAssignmentReplace","replaceWittgenstein",150,"BlockReplace","replaceReaction",150,"FieldAssignmentReplace","replaceReaction",837,"BlockReplace","replaceReaction",837,"FieldAssignmentReplace","replaceReaction",386,"BlockReplace","replaceRandom",386,"FieldAssignmentReplace","replaceRandom",15,"BlockReplace","replaceWittgenstein",15,"FieldAssignmentReplace","replaceWittgenstein",110,"LocalVarDeclaration","replaceWittgenstein",418,"LocalVarDeclaration","replaceWittgenstein",246,"LocalVarDeclaration","replaceRandom",246,"Fake","replaceRandom",4,"ReturnDelete","delete",4,"MethodCallDelete","delete",4,"BlockDelete","delete",243,"ReturnReplace","replaceRandom",243,"MethodCallReplace","replaceRandom",243,"BlockReplace","replaceRandom",243,"LocalVarDeclaration","replaceRandom",843,"ReturnReplace","replaceRandom",843,"MethodCallReplace","replaceRandom",843,"BlockReplace","replaceRandom",843,"Fake","replaceRandom",193,"ReturnReplace","replaceRandom",193,"Fake","replaceRandom",440,"ReturnReplace","replace",448,"ReturnReplace","replaceRandom",448,"LocalVarDeclaration","replaceRandom",132,"ExceptionByException","replaceRandom",132,"Fake","replaceRandom",159,"ExceptionByException","replaceReaction",264,"ExceptionByException","replaceWittgenstein",354,"ReturnReplace","replaceWittgenstein",517,"ReturnReplace","replaceWittgenstein",517,"Fake","replaceWittgenstein",532,"ReturnDelete","delete",684,"ReturnReplace","replaceWittgenstein",787,"ReturnReplace","replaceWittgenstein",10,"ReturnReplace","replaceWittgenstein",10,"MethodCallReplace","replaceWittgenstein",62,"ReturnReplace","replaceWittgenstein",62,"MethodCallReplace","replaceWittgenstein",157,"ReturnReplace","replaceWittgenstein",157,"MethodCallReplace","replaceWittgenstein",195,"ReturnReplace","replaceWittgenstein",195,"MethodCallReplace","replaceWittgenstein",204,"ReturnReplace","replaceWittgenstein",204,"MethodCallReplace","replaceWittgenstein",252,"ReturnReplace","replaceWittgenstein",252,"MethodCallReplace","replaceWittgenstein",355,"ReturnReplace","replaceWittgenstein",355,"MethodCallReplace","replaceWittgenstein",392,"ReturnReplace","replaceWittgenstein",392,"MethodCallReplace","replaceWittgenstein",405,"ReturnReplace","replaceWittgenstein",405,"MethodCallReplace","replaceWittgenstein",424,"ReturnReplace","replaceReaction",424,"MethodCallReplace","replaceReaction",429,"ReturnReplace","replace",429,"MethodCallReplace","replace",477,"ReturnReplace","replaceWittgenstein",477,"MethodCallReplace","replaceWittgenstein",484,"ReturnReplace","replaceWittgenstein",484,"MethodCallReplace","replaceWittgenstein",518,"ReturnReplace","replaceWittgenstein",518,"MethodCallReplace","replaceWittgenstein",567,"ReturnReplace","replaceWittgenstein",567,"MethodCallReplace","replaceWittgenstein",568,"ReturnReplace","replaceWittgenstein",568,"MethodCallReplace","replaceWittgenstein",598,"ReturnReplace","replaceWittgenstein",598,"MethodCallReplace","replaceWittgenstein",729,"ReturnReplace","replaceWittgenstein",729,"MethodCallReplace","replaceWittgenstein",743,"ReturnReplace","replaceWittgenstein",743,"MethodCallReplace","replaceWittgenstein",808,"ReturnReplace","replaceWittgenstein",808,"MethodCallReplace","replaceWittgenstein",824,"ReturnReplace","replaceWittgenstein",824,"MethodCallReplace","replaceWittgenstein",783,"MethodCallReplace","replaceRandom",783,"ExceptionByException","replaceRandom",783,"Fake","replaceRandom",476,"MethodCallDelete","delete",163,"MethodCallDelete","delete",356,"MethodCallReplace","replaceRandom",356,"LocalVarDeclaration","replaceRandom",109,"MethodCallReplace","replaceRandom",109,"Fake","replaceRandom",183,"ExceptionByException","replaceWittgenstein",406,"ExceptionByException","replaceReaction",432,"ExceptionByException","replaceWittgenstein",439,"ExceptionByException","replaceWittgenstein",606,"ExceptionByException","replaceReaction",329,"ReturnReplace","replaceRandom",329,"MethodCallReplace","replaceRandom",329,"BlockReplace","replaceRandom",814,"ReturnReplace","replaceRandom",814,"MethodCallReplace","replaceRandom",512,"ReturnReplace","replace",512,"MethodCallReplace","replace",578,"ReturnReplace","replaceWittgenstein",578,"MethodCallReplace","replaceWittgenstein",710,"ReturnReplace","replaceWittgenstein",710,"MethodCallReplace","replaceWittgenstein",718,"ReturnReplace","replaceWittgenstein",718,"MethodCallReplace","replaceWittgenstein",5,"MethodCallReplace","replaceWittgenstein",202,"MethodCallReplace","replaceRandom",202,"LocalVarDeclaration","replaceRandom",244,"MethodCallDelete","delete",442,"MethodCallReplace","replaceRandom",442,"LocalVarDeclaration","replaceRandom",593,"MethodCallReplace","replaceWittgenstein",593,"LocalVarDeclaration","replaceWittgenstein",614,"MethodCallReplace","replaceWittgenstein",631,"MethodCallReplace","replaceRandom",631,"LocalVarDeclaration","replaceRandom",14,"ExceptionByException","replaceWittgenstein",27,"ExceptionByException","replaceWittgenstein",185,"ExceptionByException","replaceWittgenstein",209,"ExceptionByException","replaceWittgenstein",350,"ExceptionByException","replaceWittgenstein",365,"ExceptionByException","replaceWittgenstein",367,"ExceptionByException","replaceWittgenstein",519,"ExceptionByException","replace",577,"ExceptionByException","replaceWittgenstein",588,"ExceptionByException","replaceWittgenstein",592,"ExceptionByException","replaceWittgenstein",601,"ExceptionByException","replaceWittgenstein",749,"ExceptionByException","replaceWittgenstein",759,"ExceptionByException","replaceWittgenstein",827,"ExceptionByException","replaceWittgenstein",850,"ExceptionByException","replaceWittgenstein",154,"ReturnReplace","replaceReaction",154,"MethodCallReplace","replaceReaction",154,"BlockReplace","replaceReaction",47,"ReturnReplace","replaceWittgenstein",47,"MethodCallReplace","replaceWittgenstein",99,"ReturnReplace","replaceWittgenstein",99,"MethodCallReplace","replaceWittgenstein",231,"ReturnReplace","replaceWittgenstein",231,"MethodCallReplace","replaceWittgenstein",299,"ReturnReplace","replaceWittgenstein",299,"MethodCallReplace","replaceWittgenstein",322,"ReturnReplace","replaceWittgenstein",322,"MethodCallReplace","replaceWittgenstein",362,"ReturnReplace","replaceWittgenstein",362,"MethodCallReplace","replaceWittgenstein",600,"ReturnReplace","replaceWittgenstein",600,"MethodCallReplace","replaceWittgenstein",691,"ReturnReplace","replaceWittgenstein",691,"MethodCallReplace","replaceWittgenstein",735,"ReturnReplace","replaceWittgenstein",735,"MethodCallReplace","replaceWittgenstein",788,"ReturnReplace","replaceWittgenstein",788,"MethodCallReplace","replaceWittgenstein",831,"ReturnReplace","replaceWittgenstein",831,"MethodCallReplace","replaceWittgenstein",295,"ReturnReplace","replace",295,"MethodCallReplace","replace",295,"BlockReplace","replace",24,"ReturnReplace","replaceWittgenstein",24,"MethodCallReplace","replaceWittgenstein",24,"BlockReplace","replaceWittgenstein",94,"MethodCallReplace","replaceRandom",94,"LocalVarDeclaration","replaceRandom",147,"MethodCallReplace","replaceWittgenstein",147,"LocalVarDeclaration","replaceWittgenstein",821,"MethodCallDelete","delete",833,"MethodCallReplace","replaceRandom",833,"LocalVarDeclaration","replaceRandom",504,"MethodCallReplace","replaceRandom",170,"ReturnReplace","replaceWittgenstein",170,"MethodCallReplace","replaceWittgenstein",238,"ReturnReplace","replaceWittgenstein",238,"MethodCallReplace","replaceWittgenstein",289,"ReturnReplace","replaceWittgenstein",289,"MethodCallReplace","replaceWittgenstein",320,"ReturnReplace","replaceWittgenstein",320,"MethodCallReplace","replaceWittgenstein",538,"ReturnReplace","replace",538,"MethodCallReplace","replace",541,"ReturnReplace","replace",541,"MethodCallReplace","replace",641,"ReturnReplace","replaceWittgenstein",641,"MethodCallReplace","replaceWittgenstein",745,"ReturnReplace","replaceWittgenstein",745,"MethodCallReplace","replaceWittgenstein",839,"ReturnReplace","replaceWittgenstein",839,"MethodCallReplace","replaceWittgenstein",216,"ExceptionByException","replaceReaction",242,"ExceptionByException","replaceReaction",676,"ExceptionByException","replaceRandom",189,"ReturnReplace","replaceWittgenstein",189,"MethodCallReplace","replaceWittgenstein",575,"ReturnReplace","replaceWittgenstein",575,"MethodCallReplace","replaceWittgenstein",339,"ReturnDelete","delete",339,"MethodCallDelete","delete",339,"BlockDelete","delete",669,"ReturnReplace","replaceRandom",669,"MethodCallReplace","replaceRandom",669,"BlockReplace","replaceRandom",669,"LocalVarDeclaration","replaceRandom",499,"MethodCallReplace","replaceRandom",499,"LocalVarDeclaration","replaceRandom",618,"MethodCallReplace","replaceWittgenstein",11,"ExceptionByException","replaceWittgenstein",54,"ExceptionByException","replaceWittgenstein",127,"ExceptionByException","replaceWittgenstein",197,"ExceptionByException","replaceWittgenstein",208,"ExceptionByException","replaceWittgenstein",212,"ExceptionByException","replaceWittgenstein",229,"ExceptionByException","replaceWittgenstein",291,"ExceptionByException","replaceWittgenstein",328,"ExceptionByException","replaceWittgenstein",510,"ExceptionByException","replaceReaction",628,"ExceptionByException","replaceWittgenstein",726,"ExceptionByException","replaceWittgenstein",746,"ExceptionByException","replaceWittgenstein",758,"ExceptionByException","replaceWittgenstein",584,"ReturnReplace","replaceRandom",584,"MethodCallReplace","replaceRandom",657,"ReturnReplace","replaceRandom",657,"MethodCallReplace","replaceRandom",657,"LocalVarDeclaration","replaceRandom",481,"MethodCallDelete","delete",26,"ReturnReplace","replaceReaction",79,"ReturnReplace","replaceRandom",331,"ReturnReplace","replace",380,"ReturnReplace","replaceReaction",570,"ReturnReplace","replaceReaction",660,"ReturnReplace","replaceReaction",751,"ReturnReplace","replace",206,"MethodCallReplace","replaceRandom",206,"Fake","replaceRandom",7,"ReturnReplace","replaceRandom",7,"Fake","replaceRandom",13,"MethodCallReplace","replaceRandom",13,"LocalVarDeclaration","replaceRandom",173,"MethodCallReplace","replaceRandom",173,"LocalVarDeclaration","replaceRandom",332,"MethodCallReplace","replaceRandom",561,"MethodCallReplace","replaceWittgenstein",561,"LocalVarDeclaration","replaceWittgenstein",748,"MethodCallReplace","replaceWittgenstein",748,"LocalVarDeclaration","replaceWittgenstein",773,"MethodCallReplace","replaceRandom",773,"LocalVarDeclaration","replaceRandom",779,"MethodCallDelete","delete",107,"MethodCallReplace","replace",107,"ExceptionByException","replace",107,"Fake","replace",44,"ReturnReplace","replace",44,"MethodCallReplace","replace",44,"BlockReplace","replace",784,"ReturnReplace","replaceRandom",784,"MethodCallReplace","replaceRandom",784,"BlockReplace","replaceRandom",56,"ReturnReplace","replace",56,"MethodCallReplace","replace",56,"BlockReplace","replace",798,"ReturnReplace","replaceRandom",798,"MethodCallReplace","replaceRandom",798,"BlockReplace","replaceRandom",812,"MethodCallReplace","replaceRandom",812,"Fake","replaceRandom",64,"ReturnReplace","replaceReaction",64,"MethodCallReplace","replaceReaction",64,"BlockReplace","replaceReaction",211,"MethodCallReplace","replaceWittgenstein",211,"LocalVarDeclaration","replaceWittgenstein",305,"MethodCallReplace","replaceRandom",622,"MethodCallReplace","replaceRandom",622,"LocalVarDeclaration","replaceRandom",639,"MethodCallReplace","replaceRandom",656,"MethodCallDelete","delete",45,"MethodCallReplace","replaceRandom",45,"LocalVarDeclaration","replaceRandom",757,"MethodCallDelete","delete",565,"MethodCallDelete","delete",851,"MethodCallReplace","replaceRandom",851,"Fake","replaceRandom",179,"MethodCallReplace","replaceRandom",179,"LocalVarDeclaration","replaceRandom",591,"MethodCallReplace","replaceRandom",591,"LocalVarDeclaration","replaceRandom",661,"MethodCallReplace","replaceRandom",661,"LocalVarDeclaration","replaceRandom",670,"MethodCallDelete","delete",725,"MethodCallReplace","replaceRandom",725,"LocalVarDeclaration","replaceRandom",358,"ReturnDelete","delete",358,"FieldAssignmentDelete","delete",621,"ReturnReplace","replaceRandom",621,"FieldAssignmentReplace","replaceRandom",621,"LocalVarDeclaration","replaceRandom",686,"ReturnReplace","replaceRandom",686,"FieldAssignmentReplace","replaceRandom",686,"LocalVarDeclaration","replaceRandom",796,"ReturnReplace","replaceRandom",796,"MethodCallReplace","replaceRandom",796,"FieldAssignmentReplace","replaceRandom",444,"MethodCallReplace","replace",210,"ReturnReplace","replaceWittgenstein",210,"MethodCallReplace","replaceWittgenstein",217,"ReturnReplace","replaceWittgenstein",217,"MethodCallReplace","replaceWittgenstein",261,"ReturnReplace","replaceWittgenstein",261,"MethodCallReplace","replaceWittgenstein",692,"ReturnReplace","replaceWittgenstein",692,"MethodCallReplace","replaceWittgenstein",849,"ReturnReplace","replaceWittgenstein",849,"MethodCallReplace","replaceWittgenstein",255,"MethodCallDelete","delete",450,"MethodCallReplace","replaceRandom",450,"LocalVarDeclaration","replaceRandom",698,"ReturnReplace","replace",698,"MethodCallReplace","replace",422,"MethodCallDelete","delete",31,"ReturnReplace","replaceReaction",31,"BlockReplace","replaceReaction",31,"FieldAssignmentReplace","replaceReaction",122,"ReturnReplace","replaceRandom",122,"LocalVarDeclaration","replaceRandom",701,"ReturnReplace","replaceRandom",701,"MethodCallReplace","replaceRandom",737,"ReturnReplace","replaceRandom",737,"LocalVarDeclaration","replaceRandom",854,"ReturnReplace","replaceReaction",854,"FieldAssignmentReplace","replaceReaction",627,"LocalVarDeclaration","replaceWittgenstein",84,"ReturnReplace","replaceRandom",84,"MethodCallReplace","replaceRandom",84,"Fake","replaceRandom",82,"ReturnReplace","replaceWittgenstein",521,"ReturnReplace","replaceRandom",521,"MethodCallReplace","replaceRandom",556,"ReturnReplace","replaceWittgenstein",8,"MethodCallReplace","replace",317,"MethodCallReplace","replaceRandom",317,"LocalVarDeclaration","replaceRandom",357,"MethodCallReplace","replaceWittgenstein",396,"MethodCallReplace","replaceRandom",396,"LocalVarDeclaration","replaceRandom",630,"MethodCallReplace","replace",720,"MethodCallReplace","replaceWittgenstein",720,"LocalVarDeclaration","replaceWittgenstein",739,"MethodCallDelete","delete",781,"MethodCallReplace","replaceRandom",781,"FieldAssignmentReplace","replaceRandom",832,"MethodCallReplace","replaceRandom",832,"LocalVarDeclaration","replaceRandom",119,"ReturnReplace","replaceWittgenstein",119,"MethodCallReplace","replaceWittgenstein",558,"ReturnReplace","replace",558,"MethodCallReplace","replace",572,"ReturnReplace","replace",572,"MethodCallReplace","replace",794,"ReturnReplace","replaceWittgenstein",794,"MethodCallReplace","replaceWittgenstein",688,"ReturnReplace","replaceRandom",688,"MethodCallReplace","replaceRandom",688,"Fake","replaceRandom",33,"MethodCallReplace","replace",520,"ReturnReplace","replace",520,"BlockReplace","replace",437,"LocalVarDeclaration","replaceRandom",428,"MethodCallReplace","replaceReaction",428,"ExceptionByException","replaceReaction",430,"MethodCallReplace","replace",430,"ExceptionByException","replace",505,"MethodCallReplace","replace",505,"ExceptionByException","replace",214,"LocalVarDeclaration","replaceWittgenstein",271,"LocalVarDeclaration","replaceWittgenstein",426,"MethodCallDelete","delete",22,"MethodCallReplace","replaceRandom",22,"ExceptionByException","replaceRandom",22,"Fake","replaceRandom",434,"ReturnDelete","delete",371,"MethodCallReplace","replaceRandom",371,"LocalVarDeclaration","replaceRandom",790,"MethodCallReplace","replaceRandom",790,"LocalVarDeclaration","replaceRandom",797,"MethodCallDelete","delete",846,"MethodCallReplace","replaceRandom",846,"LocalVarDeclaration","replaceRandom",697,"LocalVarDeclaration","replaceWittgenstein",747,"LocalVarDeclaration","replaceWittgenstein",719,"MethodCallReplace","replaceWittgenstein",719,"BlockReplace","replaceWittgenstein",65,"ReturnReplace","replaceRandom",65,"MethodCallReplace","replaceRandom",65,"BlockReplace","replaceRandom",361,"ReturnReplace","replaceRandom",771,"ReturnReplace","replaceRandom",605,"ReturnReplace","replaceWittgenstein",605,"MethodCallReplace","replaceWittgenstein",126,"ReturnReplace","replaceWittgenstein",126,"MethodCallReplace","replaceWittgenstein",126,"BlockReplace","replaceWittgenstein",349,"ReturnReplace","replaceWittgenstein",349,"MethodCallReplace","replaceWittgenstein",349,"BlockReplace","replaceWittgenstein",446,"ReturnDelete","delete",446,"MethodCallDelete","delete",446,"BlockDelete","delete",536,"ReturnReplace","replace",536,"MethodCallReplace","replace",536,"BlockReplace","replace",754,"ReturnReplace","replaceWittgenstein",754,"MethodCallReplace","replaceWittgenstein",754,"BlockReplace","replaceWittgenstein",589,"LocalVarDeclaration","replaceWittgenstein",597,"ExceptionByException","replaceRandom",597,"Fake","replaceRandom",171,"ReturnReplace","replaceRandom",171,"Fake","replaceRandom",29,"MethodCallReplace","replaceReaction",29,"ExceptionByException","replaceReaction",60,"MethodCallReplace","replaceRandom",60,"ExceptionByException","replaceRandom",60,"Fake","replaceRandom",162,"MethodCallReplace","replace",162,"ExceptionByException","replace",177,"MethodCallReplace","replace",177,"ExceptionByException","replace",224,"MethodCallReplace","replaceWittgenstein",224,"ExceptionByException","replaceWittgenstein",245,"MethodCallReplace","replaceReaction",245,"ExceptionByException","replaceReaction",623,"LocalVarDeclaration","replaceWittgenstein",402,"ReturnReplace","replaceRandom",402,"Fake","replaceRandom",483,"ReturnReplace","replaceRandom",483,"Fake","replaceRandom",523,"ReturnReplace","replaceReaction",620,"ReturnReplace","replaceRandom",620,"Fake","replaceRandom",671,"ReturnReplace","replaceRandom",753,"ReturnReplace","replaceRandom",753,"Fake","replaceRandom",802,"ReturnReplace","replaceRandom",802,"Fake","replaceRandom",807,"ReturnReplace","replaceRandom",807,"Fake","replaceRandom",21,"ReturnReplace","replaceRandom",21,"Fake","replaceRandom",228,"ReturnReplace","replaceRandom",228,"Fake","replaceRandom",341,"ReturnReplace","replaceRandom",341,"Fake","replaceRandom",394,"ReturnReplace","replaceRandom",394,"Fake","replaceRandom",835,"ReturnReplace","replaceRandom",835,"Fake","replaceRandom",542,"LocalVarDeclaration","replaceRandom",752,"ReturnReplace","replaceRandom",752,"Fake","replaceRandom",809,"ReturnReplace","replaceRandom",809,"MethodCallReplace","replaceRandom",809,"Fake","replaceRandom",666,"LocalVarDeclaration","replaceWittgenstein",772,"ReturnReplace","replaceRandom",772,"Fake","replaceRandom",842,"ReturnReplace","replaceRandom",842,"Fake","replaceRandom",828,"ReturnReplace","replaceRandom",828,"Fake","replaceRandom",452,"ReturnReplace","replace",786,"ReturnReplace","replaceWittgenstein",67,"MethodCallReplace","replaceRandom",80,"MethodCallReplace","replaceWittgenstein",80,"ExceptionByException","replaceWittgenstein",239,"MethodCallReplace","replace",239,"ExceptionByException","replace",466,"MethodCallReplace","replace",466,"ExceptionByException","replace",586,"MethodCallReplace","replace",586,"ExceptionByException","replace",764,"MethodCallDelete","delete",852,"MethodCallReplace","replaceRandom",852,"LocalVarDeclaration","replaceRandom",298,"MethodCallReplace","replaceRandom",298,"ExceptionByException","replaceRandom",298,"Fake","replaceRandom",615,"ReturnReplace","replaceRandom",615,"Fake","replaceRandom",617,"ReturnReplace","replaceRandom",68,"ReturnReplace","replaceRandom",68,"Fake","replaceRandom",286,"ReturnReplace","replaceRandom",286,"Fake","replaceRandom",806,"ReturnReplace","replaceRandom",806,"Fake","replaceRandom",257,"ExceptionByException","replaceRandom",257,"Fake","replaceRandom",336,"MethodCallReplace","replace",336,"LocalVarDeclaration","replace",74,"ReturnReplace","replace",74,"MethodCallReplace","replace",352,"ReturnReplace","replace",352,"MethodCallReplace","replace",709,"ReturnReplace","replace",709,"MethodCallReplace","replace",813,"ReturnReplace","replace",813,"MethodCallReplace","replace",848,"ReturnReplace","replaceRandom",848,"MethodCallReplace","replaceRandom",205,"MethodCallReplace","replaceWittgenstein",205,"BlockReplace","replaceWittgenstein",251,"ReturnReplace","replace",251,"MethodCallReplace","replace",326,"ReturnReplace","replaceWittgenstein",326,"MethodCallReplace","replaceWittgenstein",333,"ReturnReplace","replaceReaction",333,"MethodCallReplace","replaceReaction",699,"MethodCallReplace","replaceRandom",699,"LocalVarDeclaration","replaceRandom",699,"Fake","replaceRandom",531,"MethodCallReplace","replaceRandom",569,"MethodCallReplace","replaceWittgenstein",569,"BlockReplace","replaceWittgenstein",782,"MethodCallReplace","replaceReaction",782,"BlockReplace","replaceReaction",433,"MethodCallReplace","replace",433,"ExceptionByException","replace",436,"MethodCallReplace","replace",436,"ExceptionByException","replace",500,"MethodCallDelete","delete",263,"MethodCallReplace","replaceReaction",263,"BlockReplace","replaceReaction",117,"MethodCallReplace","replaceWittgenstein",482,"MethodCallReplace","replace",619,"MethodCallReplace","replaceWittgenstein",118,"MethodCallReplace","replaceRandom",118,"BlockReplace","replaceRandom",118,"LocalVarDeclaration","replaceRandom",220,"MethodCallReplace","replaceWittgenstein",220,"BlockReplace","replaceWittgenstein",220,"LocalVarDeclaration","replaceWittgenstein",460,"MethodCallDelete","delete",460,"BlockDelete","delete",637,"MethodCallReplace","replaceWittgenstein",637,"BlockReplace","replaceWittgenstein",637,"LocalVarDeclaration","replaceWittgenstein",731,"MethodCallReplace","replaceWittgenstein",731,"BlockReplace","replaceWittgenstein",685,"ReturnReplace","replaceRandom",685,"Fake","replaceRandom",106,"ReturnReplace","replaceWittgenstein",106,"MethodCallReplace","replaceWittgenstein",144,"ReturnReplace","replaceReaction",144,"MethodCallReplace","replaceReaction",636,"ReturnReplace","replaceWittgenstein",636,"MethodCallReplace","replaceWittgenstein",732,"ReturnReplace","replaceWittgenstein",732,"MethodCallReplace","replaceWittgenstein",423,"MethodCallReplace","replaceWittgenstein",423,"BlockReplace","replaceWittgenstein",409,"MethodCallReplace","replaceWittgenstein",409,"BlockReplace","replaceWittgenstein",409,"FieldAssignmentReplace","replaceWittgenstein",579,"MethodCallReplace","replaceWittgenstein",579,"BlockReplace","replaceWittgenstein",579,"FieldAssignmentReplace","replaceWittgenstein",629,"MethodCallReplace","replaceRandom",629,"BlockReplace","replaceRandom",629,"FieldAssignmentReplace","replaceRandom",717,"MethodCallDelete","delete",717,"BlockDelete","delete",717,"FieldAssignmentDelete","delete",16,"ExceptionByException","replaceWittgenstein",34,"ExceptionByException","replaceWittgenstein",81,"ExceptionByException","replaceWittgenstein",91,"ExceptionByException","replaceWittgenstein",137,"ExceptionByException","replaceWittgenstein",176,"ExceptionByException","replaceWittgenstein",203,"ExceptionByException","replaceWittgenstein",269,"ExceptionByException","replaceWittgenstein",275,"ExceptionByException","replaceWittgenstein",384,"ExceptionByException","replaceWittgenstein",399,"ExceptionByException","replaceWittgenstein",508,"ExceptionByException","replace",581,"ExceptionByException","replaceWittgenstein",626,"ExceptionByException","replaceWittgenstein",711,"ExceptionByException","replaceWittgenstein",803,"ExceptionByException","replaceWittgenstein",608,"MethodCallReplace","replaceRandom",608,"Fake","replaceRandom",41,"MethodCallReplace","replaceRandom",96,"MethodCallReplace","replaceRandom",96,"LocalVarDeclaration","replaceRandom",135,"MethodCallDelete","delete",236,"MethodCallReplace","replace",364,"MethodCallReplace","replaceReaction",390,"MethodCallReplace","replace",780,"MethodCallReplace","replaceRandom",70,"MethodCallReplace","replaceRandom",70,"BlockReplace","replaceRandom",277,"ReturnReplace","replace",458,"ReturnReplace","replace",855,"ReturnReplace","replaceWittgenstein",855,"MethodCallReplace","replaceWittgenstein",196,"ReturnReplace","replaceWittgenstein",196,"MethodCallReplace","replaceWittgenstein",196,"BlockReplace","replaceWittgenstein",254,"ReturnReplace","replaceWittgenstein",254,"MethodCallReplace","replaceWittgenstein",97,"ReturnReplace","replaceWittgenstein",97,"MethodCallReplace","replaceWittgenstein",121,"ReturnReplace","replaceWittgenstein",121,"MethodCallReplace","replaceWittgenstein",138,"ReturnReplace","replaceWittgenstein",138,"MethodCallReplace","replaceWittgenstein",182,"ReturnReplace","replaceWittgenstein",182,"MethodCallReplace","replaceWittgenstein",307,"ReturnReplace","replaceWittgenstein",307,"MethodCallReplace","replaceWittgenstein",311,"ReturnReplace","replaceWittgenstein",311,"MethodCallReplace","replaceWittgenstein",360,"ReturnReplace","replaceWittgenstein",360,"MethodCallReplace","replaceWittgenstein",366,"ReturnReplace","replaceWittgenstein",366,"MethodCallReplace","replaceWittgenstein",441,"ReturnReplace","replaceWittgenstein",441,"MethodCallReplace","replaceWittgenstein",480,"ReturnReplace","replace",480,"MethodCallReplace","replace",530,"ReturnReplace","replace",530,"MethodCallReplace","replace",546,"ReturnReplace","replaceWittgenstein",546,"MethodCallReplace","replaceWittgenstein",574,"ReturnReplace","replaceWittgenstein",574,"MethodCallReplace","replaceWittgenstein",604,"ReturnReplace","replaceWittgenstein",604,"MethodCallReplace","replaceWittgenstein",625,"ReturnReplace","replaceWittgenstein",625,"MethodCallReplace","replaceWittgenstein",674,"ReturnReplace","replaceWittgenstein",674,"MethodCallReplace","replaceWittgenstein",130,"ReturnReplace","replaceWittgenstein",130,"MethodCallReplace","replaceWittgenstein",149,"ReturnReplace","replaceWittgenstein",149,"MethodCallReplace","replaceWittgenstein",198,"ReturnReplace","replaceWittgenstein",198,"MethodCallReplace","replaceWittgenstein",457,"ReturnReplace","replace",457,"MethodCallReplace","replace",467,"ReturnReplace","replaceReaction",467,"MethodCallReplace","replaceReaction",524,"ReturnReplace","replaceReaction",524,"MethodCallReplace","replaceReaction",557,"ReturnReplace","replaceWittgenstein",557,"MethodCallReplace","replaceWittgenstein",702,"ReturnReplace","replaceWittgenstein",702,"MethodCallReplace","replaceWittgenstein",712,"ReturnReplace","replaceWittgenstein",712,"MethodCallReplace","replaceWittgenstein",785,"ReturnReplace","replaceWittgenstein",785,"MethodCallReplace","replaceWittgenstein",847,"ReturnReplace","replaceWittgenstein",847,"MethodCallReplace","replaceWittgenstein",59,"ExceptionByException","replaceWittgenstein",133,"ExceptionByException","replaceWittgenstein",152,"ExceptionByException","replaceWittgenstein",158,"ExceptionByException","replaceWittgenstein",178,"ExceptionByException","replaceWittgenstein",187,"ExceptionByException","replaceWittgenstein",272,"ExceptionByException","replaceWittgenstein",309,"ExceptionByException","replaceWittgenstein",313,"ExceptionByException","replaceWittgenstein",363,"ExceptionByException","replaceWittgenstein",431,"ExceptionByException","replace",486,"ExceptionByException","replace",766,"ReturnReplace","replaceWittgenstein",766,"MethodCallReplace","replaceWittgenstein",766,"BlockReplace","replaceWittgenstein",632,"ReturnReplace","replace",18,"ReturnReplace","replaceWittgenstein",50,"ReturnReplace","replace",327,"ReturnReplace","replaceWittgenstein",410,"ReturnReplace","replaceWittgenstein",687,"ReturnReplace","replaceWittgenstein",705,"ReturnReplace","replaceWittgenstein",804,"ReturnReplace","replaceRandom",559,"LocalVarDeclaration","replace",148,"BlockReplace","replaceRandom",148,"LocalVarDeclaration","replaceRandom",169,"BlockReplace","replaceRandom",169,"LocalVarDeclaration","replaceRandom",585,"BlockDelete","delete",609,"BlockReplace","replaceRandom",609,"LocalVarDeclaration","replaceRandom",696,"BlockReplace","replaceWittgenstein",696,"LocalVarDeclaration","replaceWittgenstein",218,"MethodCallReplace","replace",218,"BlockReplace","replace",247,"MethodCallDelete","delete",282,"MethodCallReplace","replaceRandom",282,"LocalVarDeclaration","replaceRandom",765,"MethodCallReplace","replaceRandom",765,"LocalVarDeclaration","replaceRandom",820,"MethodCallReplace","replaceRandom",820,"LocalVarDeclaration","replaceRandom",52,"LocalVarDeclaration","replaceRandom",136,"LocalVarDeclaration","replaceWittgenstein",166,"LocalVarDeclaration","replaceRandom",810,"LocalVarDeclaration","replaceRandom",348,"LocalVarDeclaration","replaceRandom",420,"LocalVarDeclaration","replaceRandom",495,"LocalVarDeclaration","replaceRandom",17,"MethodCallReplace","replaceWittgenstein",17,"ExceptionByException","replaceWittgenstein",19,"MethodCallReplace","replaceReaction",19,"ExceptionByException","replaceReaction",20,"MethodCallReplace","replaceReaction",20,"ExceptionByException","replaceReaction",30,"MethodCallReplace","replaceWittgenstein",30,"ExceptionByException","replaceWittgenstein",57,"MethodCallReplace","replace",57,"ExceptionByException","replace",72,"MethodCallReplace","replace",72,"ExceptionByException","replace",139,"MethodCallReplace","replaceWittgenstein",139,"ExceptionByException","replaceWittgenstein",156,"MethodCallReplace","replace",156,"ExceptionByException","replace",165,"MethodCallReplace","replaceReaction",165,"ExceptionByException","replaceReaction",235,"MethodCallReplace","replaceWittgenstein",235,"ExceptionByException","replaceWittgenstein",250,"ReturnReplace","replaceRandom",250,"MethodCallReplace","replaceRandom",312,"MethodCallReplace","replaceReaction",312,"ExceptionByException","replaceReaction",378,"MethodCallReplace","replace",378,"ExceptionByException","replace",413,"MethodCallReplace","replace",413,"ExceptionByException","replace",417,"ReturnReplace","replaceRandom",417,"MethodCallReplace","replaceRandom",445,"MethodCallReplace","replaceWittgenstein",445,"ExceptionByException","replaceWittgenstein",548,"MethodCallReplace","replace",548,"ExceptionByException","replace",563,"MethodCallReplace","replaceWittgenstein",563,"ExceptionByException","replaceWittgenstein",654,"MethodCallDelete","delete",750,"MethodCallReplace","replaceRandom",750,"LocalVarDeclaration","replaceRandom",795,"MethodCallReplace","replace",795,"ExceptionByException","replace",554,"ReturnReplace","replaceWittgenstein",554,"BlockReplace","replaceWittgenstein",554,"FieldAssignmentReplace","replaceWittgenstein",513,"ReturnReplace","replaceWittgenstein",513,"BlockReplace","replaceWittgenstein",101,"MethodCallReplace","replaceRandom",101,"ExceptionByException","replaceRandom",101,"Fake","replaceRandom",470,"MethodCallReplace","replaceReaction",470,"ExceptionByException","replaceReaction",525,"MethodCallReplace","replace",525,"ExceptionByException","replace",9,"ExceptionByException","replaceWittgenstein",191,"ExceptionByException","replace",281,"ExceptionByException","replaceReaction",398,"ExceptionByException","replace",655,"MethodCallReplace","replaceRandom",372,"MethodCallReplace","replaceWittgenstein",372,"LocalVarDeclaration","replaceWittgenstein",506,"MethodCallDelete","delete",526,"MethodCallReplace","replaceRandom",663,"MethodCallReplace","replaceWittgenstein",374,"MethodCallReplace","replaceWittgenstein",374,"BlockReplace","replaceWittgenstein",37,"ReturnReplace","replace",37,"MethodCallReplace","replace",85,"ReturnReplace","replaceReaction",85,"MethodCallReplace","replaceReaction",207,"ReturnReplace","replaceRandom",207,"MethodCallReplace","replaceRandom",274,"ReturnReplace","replaceReaction",274,"MethodCallReplace","replaceReaction",703,"ReturnReplace","replaceWittgenstein",703,"MethodCallReplace","replaceWittgenstein",818,"ReturnReplace","replace",818,"MethodCallReplace","replace",234,"MethodCallReplace","replaceWittgenstein",234,"BlockReplace","replaceWittgenstein",387,"MethodCallReplace","replaceRandom",387,"Fake","replaceRandom",276,"BlockReplace","replaceWittgenstein",345,"ReturnReplace","replace",345,"MethodCallReplace","replace",345,"BlockReplace","replace",416,"LocalVarDeclaration","replaceWittgenstein",590,"FieldAssignmentReplace","replaceRandom",590,"Fake","replaceRandom",66,"MethodCallReplace","replaceWittgenstein",111,"MethodCallReplace","replaceWittgenstein",111,"LocalVarDeclaration","replaceWittgenstein",488,"MethodCallDelete","delete",714,"ReturnReplace","replaceWittgenstein",714,"MethodCallReplace","replaceWittgenstein",761,"MethodCallReplace","replaceWittgenstein",811,"MethodCallReplace","replaceWittgenstein",811,"BlockReplace","replaceWittgenstein",290,"ReturnReplace","replaceWittgenstein",290,"MethodCallReplace","replaceWittgenstein",304,"ReturnReplace","replaceWittgenstein",304,"MethodCallReplace","replaceWittgenstein",550,"LocalVarDeclaration","replaceWittgenstein",693,"MethodCallReplace","replaceRandom",693,"Fake","replaceRandom",42,"MethodCallReplace","replace",233,"MethodCallReplace","replaceRandom",233,"Fake","replaceRandom",285,"MethodCallReplace","replaceRandom",652,"MethodCallReplace","replaceRandom",652,"Fake","replaceRandom",767,"MethodCallReplace","replaceRandom",767,"BlockReplace","replaceRandom",594,"ReturnReplace","replace",838,"MethodCallReplace","replaceRandom",838,"Fake","replaceRandom",53,"ReturnReplace","replaceRandom",53,"MethodCallReplace","replaceRandom",383,"MethodCallReplace","replaceWittgenstein",649,"MethodCallReplace","replaceWittgenstein",649,"LocalVarDeclaration","replaceWittgenstein",677,"MethodCallDelete","delete",294,"ReturnReplace","replace",294,"MethodCallReplace","replace",316,"ReturnReplace","replace",316,"MethodCallReplace","replace",680,"ReturnReplace","replace",680,"MethodCallReplace","replace",716,"ReturnReplace","replaceWittgenstein",716,"MethodCallReplace","replaceWittgenstein",734,"ReturnReplace","replaceWittgenstein",734,"MethodCallReplace","replaceWittgenstein",826,"ReturnReplace","replace",826,"MethodCallReplace","replace",323,"ReturnReplace","replaceWittgenstein",323,"BlockReplace","replaceWittgenstein",514,"ReturnReplace","replace",514,"MethodCallReplace","replace",658,"ReturnReplace","replaceWittgenstein",658,"MethodCallReplace","replaceWittgenstein",742,"ReturnReplace","replaceWittgenstein",742,"MethodCallReplace","replaceWittgenstein",792,"MethodCallReplace","replaceRandom",792,"ExceptionByException","replaceRandom",792,"Fake","replaceRandom",28,"MethodCallReplace","replaceWittgenstein",28,"ExceptionByException","replaceWittgenstein",104,"MethodCallReplace","replaceWittgenstein",104,"ExceptionByException","replaceWittgenstein",151,"MethodCallReplace","replaceWittgenstein",151,"ExceptionByException","replaceWittgenstein",219,"MethodCallReplace","replaceWittgenstein",219,"ExceptionByException","replaceWittgenstein",308,"MethodCallReplace","replaceWittgenstein",308,"ExceptionByException","replaceWittgenstein",318,"MethodCallReplace","replaceWittgenstein",318,"ExceptionByException","replaceWittgenstein",610,"MethodCallReplace","replaceWittgenstein",610,"ExceptionByException","replaceWittgenstein",679,"MethodCallReplace","replaceWittgenstein",679,"ExceptionByException","replaceWittgenstein",736,"MethodCallReplace","replaceWittgenstein",736,"ExceptionByException","replaceWittgenstein",478,"MethodCallDelete","delete",6,"ReturnReplace","replace",6,"MethodCallReplace","replace",51,"ReturnReplace","replaceReaction",51,"MethodCallReplace","replaceReaction",142,"ReturnReplace","replace",142,"MethodCallReplace","replace",479,"ReturnReplace","replaceRandom",479,"MethodCallReplace","replaceRandom",534,"ReturnReplace","replaceWittgenstein",534,"MethodCallReplace","replaceWittgenstein",553,"ReturnReplace","replaceRandom",553,"MethodCallReplace","replaceRandom",562,"ReturnReplace","replaceWittgenstein",562,"MethodCallReplace","replaceWittgenstein",768,"ReturnReplace","replace",768,"MethodCallReplace","replace",793,"ReturnReplace","replaceWittgenstein",793,"MethodCallReplace","replaceWittgenstein",201,"LocalVarDeclaration","replaceWittgenstein"],"transfomrationClass":[46,"VarDeclarationAndTPHasDelete",112,"DeleteSubstitution",240,"VarDeclarationAndTPHasDelete",347,"VarDeclarationAndTPHasDelete",789,"VarDeclarationAndTPHasDelete",174,"VarDeclarationAndTPHasDelete",419,"DeleteSubstitution",675,"VarDeclarationAndTPHasDelete",774,"ExceptionByException",774,"StatementByLiteral",774,"SingleStatementSubstitution",114,"SingleStatementSubstitution",454,"StatementByLiteral",454,"SingleStatementSubstitution",226,"VarDeclarationAndTPHasDelete",248,"VarDeclarationAndTPHasDelete",296,"VarDeclarationAndTPHasDelete",301,"VarDeclarationAndTPHasDelete",301,"StatementByLiteral",335,"SingleStatementSubstitution",343,"SingleStatementSubstitution",369,"SingleStatementSubstitution",377,"SingleStatementSubstitution",756,"DeleteSubstitution",485,"SingleStatementSubstitution",543,"StatementByLiteral",543,"SingleStatementSubstitution",98,"VarDeclarationAndTPHasDelete",319,"DeleteSubstitution",552,"VarDeclarationAndTPHasDelete",564,"StatementByLiteral",564,"SingleStatementSubstitution",573,"VarDeclarationAndTPHasDelete",634,"VarDeclarationAndTPHasDelete",825,"VarDeclarationAndTPHasDelete",12,"VarDeclarationAndTPHasDelete",23,"VarDeclarationAndTPHasDelete",73,"VarDeclarationAndTPHasDelete",86,"DeleteSubstitution",259,"VarDeclarationAndTPHasDelete",280,"SingleStatementSubstitution",338,"VarDeclarationAndTPHasDelete",338,"StatementByLiteral",667,"VarDeclarationAndTPHasDelete",760,"VarDeclarationAndTPHasDelete",817,"VarDeclarationAndTPHasDelete",817,"StatementByLiteral",55,"SingleStatementSubstitution",115,"SingleStatementSubstitution",134,"SingleStatementSubstitution",265,"SingleStatementSubstitution",288,"StatementByLiteral",288,"SingleStatementSubstitution",566,"SingleStatementSubstitution",678,"SingleStatementSubstitution",740,"SingleStatementSubstitution",40,"DeleteSubstitution",83,"VarDeclarationAndTPHasDelete",160,"StatementByLiteral",160,"SingleStatementSubstitution",664,"StatementByLiteral",664,"SingleStatementSubstitution",143,"SingleStatementSubstitution",456,"SingleStatementSubstitution",776,"SingleStatementSubstitution",63,"ExceptionByException",63,"StatementByLiteral",63,"SingleStatementSubstitution",87,"ExceptionByException",87,"StatementByLiteral",87,"SingleStatementSubstitution",88,"ExceptionByException",88,"StatementByLiteral",88,"SingleStatementSubstitution",120,"ExceptionByException",120,"StatementByLiteral",120,"SingleStatementSubstitution",141,"ExceptionByException",141,"StatementByLiteral",141,"SingleStatementSubstitution",146,"StatementByLiteral",146,"SingleStatementSubstitution",175,"ExceptionByException",175,"StatementByLiteral",175,"SingleStatementSubstitution",222,"ExceptionByException",222,"StatementByLiteral",222,"SingleStatementSubstitution",223,"ExceptionByException",223,"StatementByLiteral",223,"SingleStatementSubstitution",262,"ExceptionByException",262,"StatementByLiteral",262,"SingleStatementSubstitution",283,"ExceptionByException",283,"StatementByLiteral",283,"SingleStatementSubstitution",287,"ExceptionByException",287,"StatementByLiteral",287,"SingleStatementSubstitution",314,"ExceptionByException",314,"StatementByLiteral",314,"SingleStatementSubstitution",342,"ExceptionByException",342,"StatementByLiteral",342,"SingleStatementSubstitution",368,"ExceptionByException",368,"StatementByLiteral",368,"SingleStatementSubstitution",370,"ExceptionByException",370,"StatementByLiteral",370,"SingleStatementSubstitution",375,"ExceptionByException",375,"StatementByLiteral",375,"SingleStatementSubstitution",385,"ExceptionByException",385,"StatementByLiteral",385,"SingleStatementSubstitution",388,"ExceptionByException",388,"StatementByLiteral",388,"SingleStatementSubstitution",401,"ExceptionByException",401,"StatementByLiteral",401,"SingleStatementSubstitution",612,"StatementByLiteral",612,"SingleStatementSubstitution",642,"ExceptionByException",642,"StatementByLiteral",642,"SingleStatementSubstitution",646,"ExceptionByException",646,"SingleStatementSubstitution",715,"ExceptionByException",715,"StatementByLiteral",715,"SingleStatementSubstitution",260,"SingleStatementSubstitution",168,"ExceptionByException",168,"StatementByLiteral",168,"SingleStatementSubstitution",186,"ExceptionByException",186,"StatementByLiteral",186,"SingleStatementSubstitution",397,"ExceptionByException",397,"StatementByLiteral",397,"SingleStatementSubstitution",412,"ExceptionByException",412,"StatementByLiteral",412,"SingleStatementSubstitution",540,"SingleStatementSubstitution",544,"ExceptionByException",544,"StatementByLiteral",544,"SingleStatementSubstitution",38,"DeleteSubstitution",340,"VarDeclarationAndTPHasDelete",232,"StatementByLiteral",232,"SingleStatementSubstitution",498,"StatementByLiteral",498,"SingleStatementSubstitution",509,"StatementByLiteral",509,"SingleStatementSubstitution",744,"SingleStatementSubstitution",638,"StatementByLiteral",638,"SingleStatementSubstitution",93,"SingleStatementSubstitution",427,"DeleteSubstitution",823,"VarDeclarationAndTPHasDelete",502,"DeleteSubstitution",194,"StatementByLiteral",194,"SingleStatementSubstitution",213,"VarDeclarationAndTPHasDelete",472,"DeleteSubstitution",284,"StatementByLiteral",284,"SingleStatementSubstitution",334,"StatementByLiteral",334,"SingleStatementSubstitution",633,"StatementByLiteral",633,"SingleStatementSubstitution",777,"StatementByLiteral",777,"SingleStatementSubstitution",587,"VarDeclarationAndTPHasDelete",648,"DeleteSubstitution",35,"VarDeclarationAndTPHasDelete",43,"VarDeclarationAndTPHasDelete",49,"SingleStatementSubstitution",125,"VarDeclarationAndTPHasDelete",140,"SingleStatementSubstitution",184,"StatementByLiteral",184,"SingleStatementSubstitution",188,"VarDeclarationAndTPHasDelete",221,"StatementByLiteral",221,"SingleStatementSubstitution",297,"DeleteSubstitution",310,"StatementByLiteral",310,"SingleStatementSubstitution",635,"SingleStatementSubstitution",650,"SingleStatementSubstitution",672,"SingleStatementSubstitution",815,"VarDeclarationAndTPHasDelete",489,"DeleteSubstitution",778,"VarDeclarationAndTPHasDelete",153,"StatementByLiteral",490,"StatementByLiteral",490,"SingleStatementSubstitution",580,"StatementByLiteral",580,"SingleStatementSubstitution",651,"StatementByLiteral",651,"SingleStatementSubstitution",694,"DeleteSubstitution",145,"VarDeclarationAndTPHasDelete",200,"DeleteSubstitution",616,"VarDeclarationAndTPHasDelete",32,"StatementByLiteral",32,"SingleStatementSubstitution",113,"SingleStatementSubstitution",164,"SingleStatementSubstitution",192,"SingleStatementSubstitution",230,"SingleStatementSubstitution",303,"SingleStatementSubstitution",315,"SingleStatementSubstitution",469,"SingleStatementSubstitution",487,"SingleStatementSubstitution",516,"SingleStatementSubstitution",689,"SingleStatementSubstitution",723,"StatementByLiteral",723,"SingleStatementSubstitution",727,"SingleStatementSubstitution",733,"SingleStatementSubstitution",763,"SingleStatementSubstitution",769,"StatementByLiteral",769,"SingleStatementSubstitution",816,"StatementByLiteral",816,"SingleStatementSubstitution",830,"SingleStatementSubstitution",840,"StatementByLiteral",840,"SingleStatementSubstitution",841,"SingleStatementSubstitution",268,"SingleStatementSubstitution",560,"StatementByLiteral",560,"SingleStatementSubstitution",443,"SingleStatementSubstitution",507,"DeleteSubstitution",844,"StatementByLiteral",844,"SingleStatementSubstitution",128,"SingleStatementSubstitution",181,"VarDeclarationAndTPHasDelete",190,"DeleteSubstitution",302,"SingleStatementSubstitution",415,"SingleStatementSubstitution",61,"ExceptionByException",61,"StatementByLiteral",61,"SingleStatementSubstitution",76,"ExceptionByException",76,"StatementByLiteral",76,"SingleStatementSubstitution",116,"ExceptionByException",116,"StatementByLiteral",116,"SingleStatementSubstitution",267,"ExceptionByException",267,"StatementByLiteral",267,"SingleStatementSubstitution",373,"ExceptionByException",373,"StatementByLiteral",373,"SingleStatementSubstitution",391,"ExceptionByException",391,"StatementByLiteral",391,"SingleStatementSubstitution",407,"ExceptionByException",407,"StatementByLiteral",407,"SingleStatementSubstitution",414,"ExceptionByException",414,"StatementByLiteral",414,"SingleStatementSubstitution",451,"DeleteSubstitution",535,"ExceptionByException",535,"StatementByLiteral",535,"SingleStatementSubstitution",576,"ExceptionByException",576,"StatementByLiteral",576,"SingleStatementSubstitution",603,"ExceptionByException",603,"StatementByLiteral",603,"SingleStatementSubstitution",755,"ExceptionByException",755,"StatementByLiteral",755,"SingleStatementSubstitution",95,"SingleStatementSubstitution",647,"StatementByLiteral",647,"SingleStatementSubstitution",708,"SingleStatementSubstitution",105,"SingleStatementSubstitution",706,"VarDeclarationAndTPHasDelete",762,"VarDeclarationAndTPHasDelete",801,"DeleteSubstitution",819,"StatementByLiteral",819,"SingleStatementSubstitution",836,"VarDeclarationAndTPHasDelete",644,"SingleStatementSubstitution",123,"StatementByLiteral",123,"SingleStatementSubstitution",571,"VarDeclarationAndTPHasDelete",721,"StatementByLiteral",721,"SingleStatementSubstitution",822,"DeleteSubstitution",337,"SingleStatementSubstitution",463,"SingleStatementSubstitution",583,"StatementByLiteral",583,"SingleStatementSubstitution",602,"StatementByLiteral",602,"SingleStatementSubstitution",346,"StatementByLiteral",346,"SingleStatementSubstitution",643,"SingleStatementSubstitution",1,"ExceptionByException",1,"StatementByLiteral",1,"SingleStatementSubstitution",25,"ExceptionByException",25,"StatementByLiteral",25,"SingleStatementSubstitution",36,"ExceptionByException",36,"StatementByLiteral",36,"SingleStatementSubstitution",103,"ExceptionByException",103,"StatementByLiteral",103,"SingleStatementSubstitution",359,"ExceptionByException",359,"SingleStatementSubstitution",389,"ExceptionByException",389,"StatementByLiteral",389,"SingleStatementSubstitution",400,"ExceptionByException",400,"StatementByLiteral",400,"SingleStatementSubstitution",411,"ExceptionByException",411,"StatementByLiteral",411,"SingleStatementSubstitution",545,"StatementByLiteral",545,"SingleStatementSubstitution",599,"ExceptionByException",599,"StatementByLiteral",599,"SingleStatementSubstitution",741,"ExceptionByException",741,"StatementByLiteral",741,"SingleStatementSubstitution",791,"ExceptionByException",791,"StatementByLiteral",791,"SingleStatementSubstitution",829,"ExceptionByException",829,"StatementByLiteral",829,"SingleStatementSubstitution",845,"ExceptionByException",845,"StatementByLiteral",845,"SingleStatementSubstitution",2,"StatementByLiteral",2,"SingleStatementSubstitution",71,"StatementByLiteral",71,"SingleStatementSubstitution",100,"StatementByLiteral",100,"SingleStatementSubstitution",172,"StatementByLiteral",172,"SingleStatementSubstitution",292,"StatementByLiteral",292,"SingleStatementSubstitution",662,"SingleStatementSubstitution",722,"StatementByLiteral",722,"SingleStatementSubstitution",241,"StatementByLiteral",241,"SingleStatementSubstitution",58,"ExceptionByException",58,"StatementByLiteral",58,"SingleStatementSubstitution",89,"ExceptionByException",89,"SingleStatementSubstitution",124,"ExceptionByException",124,"StatementByLiteral",124,"SingleStatementSubstitution",129,"ExceptionByException",129,"StatementByLiteral",129,"SingleStatementSubstitution",215,"ExceptionByException",215,"StatementByLiteral",215,"SingleStatementSubstitution",256,"ExceptionByException",256,"StatementByLiteral",256,"SingleStatementSubstitution",266,"ExceptionByException",266,"StatementByLiteral",266,"SingleStatementSubstitution",293,"ExceptionByException",293,"StatementByLiteral",293,"SingleStatementSubstitution",306,"ExceptionByException",306,"StatementByLiteral",306,"SingleStatementSubstitution",351,"ExceptionByException",351,"StatementByLiteral",351,"SingleStatementSubstitution",449,"DeleteSubstitution",471,"VarDeclarationAndTPHasDelete",551,"ExceptionByException",551,"StatementByLiteral",551,"SingleStatementSubstitution",624,"ExceptionByException",624,"StatementByLiteral",624,"SingleStatementSubstitution",665,"ExceptionByException",665,"StatementByLiteral",665,"SingleStatementSubstitution",704,"ExceptionByException",704,"StatementByLiteral",704,"SingleStatementSubstitution",834,"ExceptionByException",834,"StatementByLiteral",834,"SingleStatementSubstitution",353,"StatementByLiteral",353,"SingleStatementSubstitution",376,"StatementByLiteral",376,"SingleStatementSubstitution",425,"DeleteSubstitution",659,"StatementByLiteral",659,"SingleStatementSubstitution",381,"StatementByLiteral",381,"SingleStatementSubstitution",775,"SingleStatementSubstitution",69,"VarDeclarationAndTPHasDelete",227,"SingleStatementSubstitution",258,"VarDeclarationAndTPHasDelete",273,"SingleStatementSubstitution",673,"SingleStatementSubstitution",683,"DeleteSubstitution",395,"StatementByLiteral",395,"SingleStatementSubstitution",39,"SingleStatementSubstitution",330,"StatementByLiteral",330,"SingleStatementSubstitution",464,"DeleteSubstitution",379,"VarDeclarationAndTPHasDelete",468,"DeleteSubstitution",102,"ExceptionByException",102,"StatementByLiteral",102,"SingleStatementSubstitution",344,"ExceptionByException",344,"StatementByLiteral",344,"SingleStatementSubstitution",491,"DeleteSubstitution",527,"ExceptionByException",527,"StatementByLiteral",527,"SingleStatementSubstitution",549,"ExceptionByException",549,"StatementByLiteral",549,"SingleStatementSubstitution",695,"ExceptionByException",695,"StatementByLiteral",695,"SingleStatementSubstitution",453,"DeleteSubstitution",473,"StatementByLiteral",473,"SingleStatementSubstitution",713,"StatementByLiteral",713,"SingleStatementSubstitution",92,"StatementByLiteral",92,"SingleStatementSubstitution",270,"SingleStatementSubstitution",707,"SingleStatementSubstitution",3,"SingleStatementSubstitution",48,"StatementByLiteral",48,"SingleStatementSubstitution",75,"StatementByLiteral",75,"SingleStatementSubstitution",108,"SingleStatementSubstitution",131,"SingleStatementSubstitution",161,"SingleStatementSubstitution",199,"SingleStatementSubstitution",237,"SingleStatementSubstitution",278,"SingleStatementSubstitution",279,"SingleStatementSubstitution",300,"SingleStatementSubstitution",459,"SingleStatementSubstitution",465,"SingleStatementSubstitution",497,"SingleStatementSubstitution",596,"SingleStatementSubstitution",611,"SingleStatementSubstitution",645,"SingleStatementSubstitution",681,"SingleStatementSubstitution",770,"StatementByLiteral",770,"SingleStatementSubstitution",799,"SingleStatementSubstitution",155,"StatementByLiteral",155,"SingleStatementSubstitution",382,"SingleStatementSubstitution",393,"SingleStatementSubstitution",403,"StatementByLiteral",403,"SingleStatementSubstitution",455,"SingleStatementSubstitution",539,"SingleStatementSubstitution",690,"SingleStatementSubstitution",724,"StatementByLiteral",724,"SingleStatementSubstitution",728,"SingleStatementSubstitution",853,"SingleStatementSubstitution",582,"StatementByLiteral",582,"SingleStatementSubstitution",700,"StatementByLiteral",700,"SingleStatementSubstitution",249,"StatementByLiteral",249,"SingleStatementSubstitution",90,"DeleteSubstitution",421,"SingleStatementSubstitution",668,"VarDeclarationAndTPHasDelete",738,"VarDeclarationAndTPHasDelete",738,"StatementByLiteral",533,"SingleStatementSubstitution",474,"StatementByLiteral",474,"SingleStatementSubstitution",225,"VarDeclarationAndTPHasDelete",515,"DeleteSubstitution",805,"VarDeclarationAndTPHasDelete",501,"StatementByLiteral",501,"SingleStatementSubstitution",492,"DeleteSubstitution",494,"StatementByLiteral",494,"SingleStatementSubstitution",78,"StatementByLiteral",547,"StatementByLiteral",547,"SingleStatementSubstitution",730,"StatementByLiteral",730,"SingleStatementSubstitution",150,"StatementByLiteral",150,"SingleStatementSubstitution",837,"StatementByLiteral",837,"SingleStatementSubstitution",386,"StatementByLiteral",386,"SingleStatementSubstitution",15,"StatementByLiteral",15,"SingleStatementSubstitution",110,"VarDeclarationAndTPHasDelete",418,"VarDeclarationAndTPHasDelete",435,"DeleteSubstitution",4,"DeleteSubstitution",243,"VarDeclarationAndTPHasDelete",843,"StatementByLiteral",843,"SingleStatementSubstitution",193,"StatementByLiteral",193,"SingleStatementSubstitution",440,"StatementByLiteral",440,"SingleStatementSubstitution",132,"ExceptionByException",132,"StatementByLiteral",132,"SingleStatementSubstitution",159,"ExceptionByException",159,"StatementByLiteral",159,"SingleStatementSubstitution",264,"ExceptionByException",264,"StatementByLiteral",264,"SingleStatementSubstitution",354,"StatementByLiteral",354,"SingleStatementSubstitution",517,"StatementByLiteral",517,"SingleStatementSubstitution",532,"DeleteSubstitution",684,"StatementByLiteral",684,"SingleStatementSubstitution",787,"StatementByLiteral",787,"SingleStatementSubstitution",10,"SingleStatementSubstitution",62,"SingleStatementSubstitution",157,"SingleStatementSubstitution",195,"SingleStatementSubstitution",204,"SingleStatementSubstitution",252,"SingleStatementSubstitution",355,"SingleStatementSubstitution",392,"SingleStatementSubstitution",405,"SingleStatementSubstitution",424,"SingleStatementSubstitution",429,"SingleStatementSubstitution",477,"SingleStatementSubstitution",484,"SingleStatementSubstitution",518,"SingleStatementSubstitution",567,"SingleStatementSubstitution",568,"SingleStatementSubstitution",598,"StatementByLiteral",598,"SingleStatementSubstitution",729,"SingleStatementSubstitution",743,"SingleStatementSubstitution",808,"SingleStatementSubstitution",824,"SingleStatementSubstitution",783,"ExceptionByException",783,"SingleStatementSubstitution",476,"DeleteSubstitution",522,"DeleteSubstitution",163,"DeleteSubstitution",356,"VarDeclarationAndTPHasDelete",109,"StatementByLiteral",109,"SingleStatementSubstitution",183,"ExceptionByException",183,"StatementByLiteral",183,"SingleStatementSubstitution",406,"ExceptionByException",406,"StatementByLiteral",406,"SingleStatementSubstitution",432,"ExceptionByException",432,"StatementByLiteral",432,"SingleStatementSubstitution",439,"ExceptionByException",439,"StatementByLiteral",439,"SingleStatementSubstitution",606,"ExceptionByException",606,"StatementByLiteral",606,"SingleStatementSubstitution",329,"StatementByLiteral",329,"SingleStatementSubstitution",814,"StatementByLiteral",814,"SingleStatementSubstitution",512,"StatementByLiteral",512,"SingleStatementSubstitution",578,"StatementByLiteral",578,"SingleStatementSubstitution",710,"StatementByLiteral",710,"SingleStatementSubstitution",718,"StatementByLiteral",718,"SingleStatementSubstitution",5,"StatementByLiteral",5,"SingleStatementSubstitution",202,"VarDeclarationAndTPHasDelete",202,"StatementByLiteral",244,"DeleteSubstitution",442,"VarDeclarationAndTPHasDelete",593,"VarDeclarationAndTPHasDelete",614,"StatementByLiteral",614,"SingleStatementSubstitution",631,"VarDeclarationAndTPHasDelete",14,"ExceptionByException",14,"StatementByLiteral",14,"SingleStatementSubstitution",27,"ExceptionByException",27,"StatementByLiteral",27,"SingleStatementSubstitution",185,"ExceptionByException",185,"StatementByLiteral",185,"SingleStatementSubstitution",209,"ExceptionByException",209,"StatementByLiteral",209,"SingleStatementSubstitution",350,"ExceptionByException",350,"StatementByLiteral",350,"SingleStatementSubstitution",365,"ExceptionByException",365,"StatementByLiteral",365,"SingleStatementSubstitution",367,"ExceptionByException",367,"StatementByLiteral",367,"SingleStatementSubstitution",519,"ExceptionByException",519,"StatementByLiteral",519,"SingleStatementSubstitution",577,"ExceptionByException",577,"SingleStatementSubstitution",588,"ExceptionByException",588,"StatementByLiteral",588,"SingleStatementSubstitution",592,"ExceptionByException",592,"StatementByLiteral",592,"SingleStatementSubstitution",601,"ExceptionByException",601,"StatementByLiteral",601,"SingleStatementSubstitution",749,"ExceptionByException",749,"StatementByLiteral",749,"SingleStatementSubstitution",759,"ExceptionByException",759,"StatementByLiteral",759,"SingleStatementSubstitution",827,"ExceptionByException",827,"StatementByLiteral",827,"SingleStatementSubstitution",850,"ExceptionByException",850,"StatementByLiteral",850,"SingleStatementSubstitution",154,"SingleStatementSubstitution",47,"StatementByLiteral",47,"SingleStatementSubstitution",99,"SingleStatementSubstitution",231,"StatementByLiteral",231,"SingleStatementSubstitution",299,"SingleStatementSubstitution",322,"SingleStatementSubstitution",362,"SingleStatementSubstitution",600,"SingleStatementSubstitution",691,"SingleStatementSubstitution",735,"StatementByLiteral",735,"SingleStatementSubstitution",788,"SingleStatementSubstitution",831,"StatementByLiteral",831,"SingleStatementSubstitution",295,"SingleStatementSubstitution",24,"SingleStatementSubstitution",94,"VarDeclarationAndTPHasDelete",147,"VarDeclarationAndTPHasDelete",147,"StatementByLiteral",821,"DeleteSubstitution",833,"VarDeclarationAndTPHasDelete",504,"SingleStatementSubstitution",170,"StatementByLiteral",170,"SingleStatementSubstitution",238,"SingleStatementSubstitution",289,"SingleStatementSubstitution",320,"StatementByLiteral",320,"SingleStatementSubstitution",538,"SingleStatementSubstitution",541,"SingleStatementSubstitution",641,"SingleStatementSubstitution",745,"SingleStatementSubstitution",839,"SingleStatementSubstitution",216,"ExceptionByException",216,"StatementByLiteral",216,"SingleStatementSubstitution",242,"ExceptionByException",242,"StatementByLiteral",242,"SingleStatementSubstitution",676,"ExceptionByException",676,"StatementByLiteral",676,"SingleStatementSubstitution",189,"StatementByLiteral",189,"SingleStatementSubstitution",575,"StatementByLiteral",575,"SingleStatementSubstitution",339,"DeleteSubstitution",669,"VarDeclarationAndTPHasDelete",462,"DeleteSubstitution",618,"SingleStatementSubstitution",11,"ExceptionByException",11,"StatementByLiteral",11,"SingleStatementSubstitution",54,"ExceptionByException",54,"StatementByLiteral",54,"SingleStatementSubstitution",127,"ExceptionByException",127,"StatementByLiteral",127,"SingleStatementSubstitution",197,"ExceptionByException",197,"StatementByLiteral",197,"SingleStatementSubstitution",208,"ExceptionByException",208,"StatementByLiteral",208,"SingleStatementSubstitution",212,"ExceptionByException",212,"StatementByLiteral",212,"SingleStatementSubstitution",229,"ExceptionByException",229,"StatementByLiteral",229,"SingleStatementSubstitution",291,"ExceptionByException",291,"StatementByLiteral",291,"SingleStatementSubstitution",328,"ExceptionByException",328,"StatementByLiteral",328,"SingleStatementSubstitution",510,"ExceptionByException",510,"StatementByLiteral",510,"SingleStatementSubstitution",628,"ExceptionByException",628,"StatementByLiteral",628,"SingleStatementSubstitution",726,"ExceptionByException",726,"SingleStatementSubstitution",746,"ExceptionByException",746,"StatementByLiteral",746,"SingleStatementSubstitution",758,"ExceptionByException",758,"StatementByLiteral",758,"SingleStatementSubstitution",584,"SingleStatementSubstitution",481,"DeleteSubstitution",511,"DeleteSubstitution",26,"StatementByLiteral",26,"SingleStatementSubstitution",79,"StatementByLiteral",79,"SingleStatementSubstitution",331,"StatementByLiteral",331,"SingleStatementSubstitution",380,"StatementByLiteral",380,"SingleStatementSubstitution",570,"StatementByLiteral",570,"SingleStatementSubstitution",660,"StatementByLiteral",660,"SingleStatementSubstitution",751,"StatementByLiteral",751,"SingleStatementSubstitution",206,"SingleStatementSubstitution",7,"StatementByLiteral",7,"SingleStatementSubstitution",13,"VarDeclarationAndTPHasDelete",173,"VarDeclarationAndTPHasDelete",332,"SingleStatementSubstitution",561,"VarDeclarationAndTPHasDelete",748,"VarDeclarationAndTPHasDelete",748,"StatementByLiteral",773,"VarDeclarationAndTPHasDelete",779,"DeleteSubstitution",107,"ExceptionByException",107,"SingleStatementSubstitution",44,"SingleStatementSubstitution",784,"SingleStatementSubstitution",56,"SingleStatementSubstitution",798,"StatementByLiteral",798,"SingleStatementSubstitution",812,"SingleStatementSubstitution",64,"SingleStatementSubstitution",211,"VarDeclarationAndTPHasDelete",211,"StatementByLiteral",305,"StatementByLiteral",305,"SingleStatementSubstitution",622,"VarDeclarationAndTPHasDelete",639,"StatementByLiteral",639,"SingleStatementSubstitution",656,"DeleteSubstitution",45,"VarDeclarationAndTPHasDelete",757,"DeleteSubstitution",565,"DeleteSubstitution",851,"SingleStatementSubstitution",179,"VarDeclarationAndTPHasDelete",591,"VarDeclarationAndTPHasDelete",661,"VarDeclarationAndTPHasDelete",670,"DeleteSubstitution",725,"VarDeclarationAndTPHasDelete",725,"StatementByLiteral",358,"DeleteSubstitution",621,"VarDeclarationAndTPHasDelete",686,"VarDeclarationAndTPHasDelete",796,"SingleStatementSubstitution",444,"SingleStatementSubstitution",210,"StatementByLiteral",210,"SingleStatementSubstitution",217,"SingleStatementSubstitution",261,"SingleStatementSubstitution",692,"SingleStatementSubstitution",849,"StatementByLiteral",849,"SingleStatementSubstitution",255,"DeleteSubstitution",450,"VarDeclarationAndTPHasDelete",698,"SingleStatementSubstitution",422,"DeleteSubstitution",31,"StatementByLiteral",31,"SingleStatementSubstitution",701,"StatementByLiteral",701,"SingleStatementSubstitution",854,"SingleStatementSubstitution",475,"DeleteSubstitution",627,"VarDeclarationAndTPHasDelete",84,"SingleStatementSubstitution",537,"DeleteSubstitution",82,"StatementByLiteral",82,"SingleStatementSubstitution",521,"SingleStatementSubstitution",556,"StatementByLiteral",556,"SingleStatementSubstitution",8,"SingleStatementSubstitution",317,"VarDeclarationAndTPHasDelete",317,"StatementByLiteral",357,"SingleStatementSubstitution",396,"VarDeclarationAndTPHasDelete",396,"StatementByLiteral",630,"SingleStatementSubstitution",720,"VarDeclarationAndTPHasDelete",739,"DeleteSubstitution",781,"StatementByLiteral",781,"SingleStatementSubstitution",832,"VarDeclarationAndTPHasDelete",832,"StatementByLiteral",119,"SingleStatementSubstitution",558,"SingleStatementSubstitution",572,"SingleStatementSubstitution",794,"StatementByLiteral",794,"SingleStatementSubstitution",688,"SingleStatementSubstitution",33,"SingleStatementSubstitution",520,"StatementByLiteral",520,"SingleStatementSubstitution",428,"ExceptionByException",428,"StatementByLiteral",428,"SingleStatementSubstitution",430,"ExceptionByException",430,"StatementByLiteral",430,"SingleStatementSubstitution",505,"ExceptionByException",505,"StatementByLiteral",505,"SingleStatementSubstitution",214,"VarDeclarationAndTPHasDelete",214,"StatementByLiteral",271,"VarDeclarationAndTPHasDelete",447,"DeleteSubstitution",426,"DeleteSubstitution",22,"ExceptionByException",22,"SingleStatementSubstitution",434,"DeleteSubstitution",371,"VarDeclarationAndTPHasDelete",790,"VarDeclarationAndTPHasDelete",797,"DeleteSubstitution",846,"VarDeclarationAndTPHasDelete",846,"StatementByLiteral",697,"StatementByLiteral",719,"StatementByLiteral",719,"SingleStatementSubstitution",65,"StatementByLiteral",65,"SingleStatementSubstitution",361,"StatementByLiteral",361,"SingleStatementSubstitution",771,"StatementByLiteral",771,"SingleStatementSubstitution",605,"StatementByLiteral",605,"SingleStatementSubstitution",126,"StatementByLiteral",126,"SingleStatementSubstitution",349,"StatementByLiteral",349,"SingleStatementSubstitution",446,"DeleteSubstitution",536,"StatementByLiteral",536,"SingleStatementSubstitution",754,"SingleStatementSubstitution",496,"DeleteSubstitution",589,"VarDeclarationAndTPHasDelete",597,"ExceptionByException",597,"StatementByLiteral",597,"SingleStatementSubstitution",171,"SingleStatementSubstitution",29,"ExceptionByException",29,"StatementByLiteral",29,"SingleStatementSubstitution",60,"ExceptionByException",60,"SingleStatementSubstitution",162,"ExceptionByException",162,"StatementByLiteral",162,"SingleStatementSubstitution",177,"ExceptionByException",177,"StatementByLiteral",177,"SingleStatementSubstitution",224,"ExceptionByException",224,"StatementByLiteral",224,"SingleStatementSubstitution",245,"ExceptionByException",245,"StatementByLiteral",245,"SingleStatementSubstitution",402,"StatementByLiteral",402,"SingleStatementSubstitution",483,"StatementByLiteral",483,"SingleStatementSubstitution",523,"StatementByLiteral",523,"SingleStatementSubstitution",620,"StatementByLiteral",620,"SingleStatementSubstitution",671,"StatementByLiteral",671,"SingleStatementSubstitution",753,"StatementByLiteral",753,"SingleStatementSubstitution",802,"StatementByLiteral",802,"SingleStatementSubstitution",807,"StatementByLiteral",807,"SingleStatementSubstitution",21,"StatementByLiteral",21,"SingleStatementSubstitution",228,"StatementByLiteral",228,"SingleStatementSubstitution",341,"StatementByLiteral",341,"SingleStatementSubstitution",394,"StatementByLiteral",394,"SingleStatementSubstitution",835,"StatementByLiteral",835,"SingleStatementSubstitution",253,"DeleteSubstitution",542,"VarDeclarationAndTPHasDelete",752,"StatementByLiteral",752,"SingleStatementSubstitution",809,"SingleStatementSubstitution",529,"DeleteSubstitution",666,"VarDeclarationAndTPHasDelete",772,"StatementByLiteral",772,"SingleStatementSubstitution",842,"StatementByLiteral",842,"SingleStatementSubstitution",828,"StatementByLiteral",828,"SingleStatementSubstitution",452,"SingleStatementSubstitution",786,"StatementByLiteral",786,"SingleStatementSubstitution",67,"SingleStatementSubstitution",80,"ExceptionByException",80,"StatementByLiteral",80,"SingleStatementSubstitution",239,"ExceptionByException",239,"StatementByLiteral",239,"SingleStatementSubstitution",466,"ExceptionByException",466,"StatementByLiteral",466,"SingleStatementSubstitution",586,"ExceptionByException",586,"StatementByLiteral",586,"SingleStatementSubstitution",764,"DeleteSubstitution",852,"VarDeclarationAndTPHasDelete",298,"ExceptionByException",298,"SingleStatementSubstitution",615,"StatementByLiteral",615,"SingleStatementSubstitution",617,"SingleStatementSubstitution",68,"StatementByLiteral",68,"SingleStatementSubstitution",286,"StatementByLiteral",286,"SingleStatementSubstitution",806,"StatementByLiteral",806,"SingleStatementSubstitution",257,"ExceptionByException",257,"StatementByLiteral",257,"SingleStatementSubstitution",74,"StatementByLiteral",74,"SingleStatementSubstitution",352,"StatementByLiteral",352,"SingleStatementSubstitution",709,"SingleStatementSubstitution",813,"SingleStatementSubstitution",848,"StatementByLiteral",848,"SingleStatementSubstitution",205,"StatementByLiteral",205,"SingleStatementSubstitution",251,"SingleStatementSubstitution",326,"StatementByLiteral",326,"SingleStatementSubstitution",333,"SingleStatementSubstitution",531,"StatementByLiteral",531,"SingleStatementSubstitution",569,"StatementByLiteral",569,"SingleStatementSubstitution",782,"SingleStatementSubstitution",433,"ExceptionByException",433,"StatementByLiteral",433,"SingleStatementSubstitution",436,"ExceptionByException",436,"StatementByLiteral",436,"SingleStatementSubstitution",500,"DeleteSubstitution",263,"SingleStatementSubstitution",117,"SingleStatementSubstitution",482,"SingleStatementSubstitution",619,"SingleStatementSubstitution",118,"VarDeclarationAndTPHasDelete",220,"VarDeclarationAndTPHasDelete",460,"DeleteSubstitution",637,"VarDeclarationAndTPHasDelete",731,"SingleStatementSubstitution",685,"StatementByLiteral",685,"SingleStatementSubstitution",106,"StatementByLiteral",106,"SingleStatementSubstitution",144,"StatementByLiteral",144,"SingleStatementSubstitution",636,"StatementByLiteral",636,"SingleStatementSubstitution",732,"StatementByLiteral",732,"SingleStatementSubstitution",423,"StatementByLiteral",423,"SingleStatementSubstitution",409,"StatementByLiteral",409,"SingleStatementSubstitution",579,"SingleStatementSubstitution",629,"StatementByLiteral",629,"SingleStatementSubstitution",717,"DeleteSubstitution",16,"ExceptionByException",16,"StatementByLiteral",16,"SingleStatementSubstitution",34,"ExceptionByException",34,"StatementByLiteral",34,"SingleStatementSubstitution",81,"ExceptionByException",81,"StatementByLiteral",81,"SingleStatementSubstitution",91,"ExceptionByException",91,"SingleStatementSubstitution",137,"ExceptionByException",137,"StatementByLiteral",137,"SingleStatementSubstitution",176,"ExceptionByException",176,"StatementByLiteral",176,"SingleStatementSubstitution",203,"ExceptionByException",203,"StatementByLiteral",203,"SingleStatementSubstitution",269,"ExceptionByException",269,"StatementByLiteral",269,"SingleStatementSubstitution",275,"ExceptionByException",275,"StatementByLiteral",275,"SingleStatementSubstitution",384,"ExceptionByException",384,"StatementByLiteral",384,"SingleStatementSubstitution",399,"ExceptionByException",399,"StatementByLiteral",399,"SingleStatementSubstitution",508,"ExceptionByException",508,"StatementByLiteral",508,"SingleStatementSubstitution",581,"ExceptionByException",581,"StatementByLiteral",581,"SingleStatementSubstitution",626,"ExceptionByException",626,"StatementByLiteral",626,"SingleStatementSubstitution",711,"ExceptionByException",711,"StatementByLiteral",711,"SingleStatementSubstitution",803,"ExceptionByException",803,"StatementByLiteral",803,"SingleStatementSubstitution",608,"SingleStatementSubstitution",41,"SingleStatementSubstitution",96,"VarDeclarationAndTPHasDelete",135,"DeleteSubstitution",236,"SingleStatementSubstitution",364,"SingleStatementSubstitution",390,"SingleStatementSubstitution",780,"StatementByLiteral",780,"SingleStatementSubstitution",70,"SingleStatementSubstitution",277,"StatementByLiteral",277,"SingleStatementSubstitution",458,"StatementByLiteral",458,"SingleStatementSubstitution",855,"StatementByLiteral",855,"SingleStatementSubstitution",196,"StatementByLiteral",196,"SingleStatementSubstitution",254,"SingleStatementSubstitution",97,"StatementByLiteral",97,"SingleStatementSubstitution",121,"SingleStatementSubstitution",138,"SingleStatementSubstitution",182,"SingleStatementSubstitution",307,"SingleStatementSubstitution",311,"StatementByLiteral",311,"SingleStatementSubstitution",360,"SingleStatementSubstitution",366,"SingleStatementSubstitution",441,"SingleStatementSubstitution",480,"SingleStatementSubstitution",530,"SingleStatementSubstitution",546,"SingleStatementSubstitution",574,"SingleStatementSubstitution",604,"SingleStatementSubstitution",625,"StatementByLiteral",625,"SingleStatementSubstitution",674,"StatementByLiteral",674,"SingleStatementSubstitution",130,"StatementByLiteral",130,"SingleStatementSubstitution",149,"SingleStatementSubstitution",198,"StatementByLiteral",198,"SingleStatementSubstitution",457,"SingleStatementSubstitution",467,"SingleStatementSubstitution",524,"SingleStatementSubstitution",557,"SingleStatementSubstitution",702,"SingleStatementSubstitution",712,"StatementByLiteral",712,"SingleStatementSubstitution",785,"SingleStatementSubstitution",847,"SingleStatementSubstitution",59,"ExceptionByException",59,"StatementByLiteral",59,"SingleStatementSubstitution",133,"ExceptionByException",133,"SingleStatementSubstitution",152,"ExceptionByException",152,"StatementByLiteral",152,"SingleStatementSubstitution",158,"ExceptionByException",158,"StatementByLiteral",158,"SingleStatementSubstitution",178,"ExceptionByException",178,"StatementByLiteral",178,"SingleStatementSubstitution",187,"ExceptionByException",187,"StatementByLiteral",187,"SingleStatementSubstitution",272,"ExceptionByException",272,"StatementByLiteral",272,"SingleStatementSubstitution",309,"ExceptionByException",309,"StatementByLiteral",309,"SingleStatementSubstitution",313,"ExceptionByException",313,"StatementByLiteral",313,"SingleStatementSubstitution",363,"ExceptionByException",363,"StatementByLiteral",363,"SingleStatementSubstitution",431,"ExceptionByException",431,"StatementByLiteral",431,"SingleStatementSubstitution",486,"ExceptionByException",486,"StatementByLiteral",486,"SingleStatementSubstitution",766,"StatementByLiteral",766,"SingleStatementSubstitution",632,"StatementByLiteral",632,"SingleStatementSubstitution",18,"StatementByLiteral",18,"SingleStatementSubstitution",50,"StatementByLiteral",50,"SingleStatementSubstitution",327,"StatementByLiteral",327,"SingleStatementSubstitution",410,"StatementByLiteral",410,"SingleStatementSubstitution",687,"StatementByLiteral",687,"SingleStatementSubstitution",705,"StatementByLiteral",705,"SingleStatementSubstitution",804,"StatementByLiteral",804,"SingleStatementSubstitution",438,"DeleteSubstitution",148,"VarDeclarationAndTPHasDelete",169,"VarDeclarationAndTPHasDelete",585,"DeleteSubstitution",609,"VarDeclarationAndTPHasDelete",609,"StatementByLiteral",696,"VarDeclarationAndTPHasDelete",696,"StatementByLiteral",218,"StatementByLiteral",218,"SingleStatementSubstitution",247,"DeleteSubstitution",282,"VarDeclarationAndTPHasDelete",765,"VarDeclarationAndTPHasDelete",820,"VarDeclarationAndTPHasDelete",52,"VarDeclarationAndTPHasDelete",136,"VarDeclarationAndTPHasDelete",136,"StatementByLiteral",166,"VarDeclarationAndTPHasDelete",324,"SingleStatementSubstitution",613,"DeleteSubstitution",810,"VarDeclarationAndTPHasDelete",348,"VarDeclarationAndTPHasDelete",420,"VarDeclarationAndTPHasDelete",420,"StatementByLiteral",495,"VarDeclarationAndTPHasDelete",495,"StatementByLiteral",640,"DeleteSubstitution",17,"ExceptionByException",17,"StatementByLiteral",17,"SingleStatementSubstitution",19,"ExceptionByException",19,"StatementByLiteral",19,"SingleStatementSubstitution",20,"ExceptionByException",20,"StatementByLiteral",20,"SingleStatementSubstitution",30,"ExceptionByException",30,"StatementByLiteral",30,"SingleStatementSubstitution",57,"ExceptionByException",57,"StatementByLiteral",57,"SingleStatementSubstitution",72,"ExceptionByException",72,"StatementByLiteral",72,"SingleStatementSubstitution",139,"ExceptionByException",139,"StatementByLiteral",139,"SingleStatementSubstitution",156,"ExceptionByException",156,"StatementByLiteral",156,"SingleStatementSubstitution",165,"ExceptionByException",165,"StatementByLiteral",165,"SingleStatementSubstitution",235,"ExceptionByException",235,"StatementByLiteral",235,"SingleStatementSubstitution",250,"StatementByLiteral",250,"SingleStatementSubstitution",312,"ExceptionByException",312,"StatementByLiteral",312,"SingleStatementSubstitution",378,"ExceptionByException",378,"StatementByLiteral",378,"SingleStatementSubstitution",413,"ExceptionByException",413,"StatementByLiteral",413,"SingleStatementSubstitution",417,"StatementByLiteral",417,"SingleStatementSubstitution",445,"ExceptionByException",445,"StatementByLiteral",445,"SingleStatementSubstitution",548,"ExceptionByException",548,"StatementByLiteral",548,"SingleStatementSubstitution",563,"ExceptionByException",563,"StatementByLiteral",563,"SingleStatementSubstitution",654,"DeleteSubstitution",750,"VarDeclarationAndTPHasDelete",795,"ExceptionByException",795,"StatementByLiteral",795,"SingleStatementSubstitution",554,"StatementByLiteral",554,"SingleStatementSubstitution",513,"StatementByLiteral",513,"SingleStatementSubstitution",101,"ExceptionByException",101,"StatementByLiteral",101,"SingleStatementSubstitution",470,"ExceptionByException",470,"StatementByLiteral",470,"SingleStatementSubstitution",525,"ExceptionByException",525,"StatementByLiteral",525,"SingleStatementSubstitution",9,"ExceptionByException",9,"StatementByLiteral",9,"SingleStatementSubstitution",191,"ExceptionByException",191,"StatementByLiteral",191,"SingleStatementSubstitution",281,"ExceptionByException",281,"StatementByLiteral",281,"SingleStatementSubstitution",398,"ExceptionByException",398,"StatementByLiteral",398,"SingleStatementSubstitution",655,"SingleStatementSubstitution",372,"VarDeclarationAndTPHasDelete",372,"StatementByLiteral",506,"DeleteSubstitution",526,"SingleStatementSubstitution",663,"SingleStatementSubstitution",374,"SingleStatementSubstitution",37,"SingleStatementSubstitution",85,"StatementByLiteral",85,"SingleStatementSubstitution",207,"StatementByLiteral",207,"SingleStatementSubstitution",274,"StatementByLiteral",274,"SingleStatementSubstitution",703,"StatementByLiteral",703,"SingleStatementSubstitution",818,"SingleStatementSubstitution",234,"StatementByLiteral",234,"SingleStatementSubstitution",387,"SingleStatementSubstitution",276,"StatementByLiteral",276,"SingleStatementSubstitution",345,"StatementByLiteral",345,"SingleStatementSubstitution",416,"VarDeclarationAndTPHasDelete",461,"DeleteSubstitution",590,"SingleStatementSubstitution",66,"SingleStatementSubstitution",111,"VarDeclarationAndTPHasDelete",488,"DeleteSubstitution",714,"StatementByLiteral",714,"SingleStatementSubstitution",761,"StatementByLiteral",761,"SingleStatementSubstitution",811,"SingleStatementSubstitution",290,"StatementByLiteral",290,"SingleStatementSubstitution",304,"StatementByLiteral",304,"SingleStatementSubstitution",550,"StatementByLiteral",693,"SingleStatementSubstitution",42,"SingleStatementSubstitution",233,"SingleStatementSubstitution",285,"SingleStatementSubstitution",652,"SingleStatementSubstitution",767,"StatementByLiteral",767,"SingleStatementSubstitution",594,"SingleStatementSubstitution",838,"SingleStatementSubstitution",53,"SingleStatementSubstitution",383,"SingleStatementSubstitution",649,"VarDeclarationAndTPHasDelete",677,"DeleteSubstitution",294,"StatementByLiteral",294,"SingleStatementSubstitution",316,"StatementByLiteral",316,"SingleStatementSubstitution",680,"SingleStatementSubstitution",716,"StatementByLiteral",716,"SingleStatementSubstitution",734,"StatementByLiteral",734,"SingleStatementSubstitution",826,"SingleStatementSubstitution",323,"StatementByLiteral",323,"SingleStatementSubstitution",493,"DeleteSubstitution",514,"SingleStatementSubstitution",658,"StatementByLiteral",658,"SingleStatementSubstitution",742,"SingleStatementSubstitution",792,"ExceptionByException",792,"StatementByLiteral",792,"SingleStatementSubstitution",28,"ExceptionByException",28,"StatementByLiteral",28,"SingleStatementSubstitution",104,"ExceptionByException",104,"StatementByLiteral",104,"SingleStatementSubstitution",151,"ExceptionByException",151,"StatementByLiteral",151,"SingleStatementSubstitution",219,"ExceptionByException",219,"StatementByLiteral",219,"SingleStatementSubstitution",308,"ExceptionByException",308,"StatementByLiteral",308,"SingleStatementSubstitution",318,"ExceptionByException",318,"StatementByLiteral",318,"SingleStatementSubstitution",610,"ExceptionByException",610,"StatementByLiteral",610,"SingleStatementSubstitution",679,"ExceptionByException",679,"StatementByLiteral",679,"SingleStatementSubstitution",736,"ExceptionByException",736,"StatementByLiteral",736,"SingleStatementSubstitution",478,"DeleteSubstitution",6,"SingleStatementSubstitution",51,"StatementByLiteral",51,"SingleStatementSubstitution",142,"StatementByLiteral",142,"SingleStatementSubstitution",479,"StatementByLiteral",479,"SingleStatementSubstitution",534,"StatementByLiteral",534,"SingleStatementSubstitution",553,"StatementByLiteral",553,"SingleStatementSubstitution",562,"StatementByLiteral",562,"SingleStatementSubstitution",768,"SingleStatementSubstitution",793,"StatementByLiteral",793,"SingleStatementSubstitution",201,"VarDeclarationAndTPHasDelete",503,"DeleteSubstitution"],"transformations":[{"failures":[],"variableMapping":{},"tindex":1,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","position":"org.easymock.internal.MockBuilder:226","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","position":"org.easymock.internal.DefaultClassInstantiator:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":2,"name":"replaceRandom","transplant":{"sourceCode":"return \"geq\"","position":"org.easymock.internal.matchers.GreaterOrEqual:32","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","position":"org.easymock.internal.ClassInstantiatorFactory:48","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":3,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:316","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":4,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\r\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\r\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\r\n    if (java.lang.Class<?>.isArray()) {\r\n        final java.lang.reflect.Type java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n        if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\r\n            if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\r\n                return false;\r\n            } \r\n            break;\r\n        } \r\n    } \r\n    if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\r\n        return false;\r\n    } \r\n}","position":"org.easymock.internal.BridgeMethodResolver:182","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":5,"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","position":"org.easymock.internal.ErrorMessage:54","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","position":"org.easymock.internal.matchers.InstanceOf:40","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"actual":"expected","expected":"expected"},"tindex":6,"name":"replace","transplant":{"sourceCode":"return java.lang.Object.equals(java.lang.Object)","position":"org.easymock.internal.matchers.Equals:40","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:43","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":7,"name":"replaceRandom","transplant":{"sourceCode":"return 0","position":"org.easymock.EasyMock:978","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.easymock.EasyMock:978","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"behavior":"behavior","value":"threadSafe"},"tindex":8,"name":"replace","transplant":{"sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","position":"org.easymock.internal.RecordState:332","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","position":"org.easymock.internal.RecordState:336","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":9,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","position":"org.easymock.internal.RecordState:91","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","position":"org.easymock.internal.RecordState:86","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":10,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:281","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":11,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","position":"org.easymock.ConstructorArgs:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.ObjectMethodsFilter:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":12,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","position":"org.easymock.internal.MockInvocationHandler:41","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:249","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":13,"name":"replaceRandom","transplant":{"sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResult>()","position":"org.easymock.internal.MocksBehavior:33","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","position":"org.easymock.internal.MethodSerializationWrapper:40","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":14,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","position":"org.easymock.EasyMock:1875","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","position":"org.easymock.internal.AndroidClassProxyFactory:55","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":15,"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\r\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\r\n} ","position":"org.easymock.internal.EasyMockProperties:47","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","position":"org.easymock.internal.EasyMockProperties:49","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":16,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","position":"org.easymock.internal.Range:37","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":17,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":18,"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.internal.ReflectionUtils:165","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.AndroidSupport.boolean","position":"org.easymock.internal.AndroidSupport:35","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":19,"name":"replaceReaction","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","position":"org.easymock.internal.Range:41","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":20,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","position":"org.easymock.internal.matchers.Equals:62","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":21,"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.easymock.EasyMock:602","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.easymock.EasyMock:602","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":22,"name":"replaceRandom","transplant":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:115","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:224","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":23,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Exception java.lang.Exception","position":"org.easymock.ConstructorArgs:69","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:249","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":24,"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\r\n    return java.lang.Number.doubleValue();\r\n} else {\r\n    return java.lang.Number;\r\n}","position":"org.easymock.internal.RecordState:207","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Number.shortValue()","position":"org.easymock.internal.RecordState:196","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":25,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","position":"org.easymock.Capture:76","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","position":"org.easymock.internal.DefaultClassInstantiator:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":26,"name":"replaceReaction","transplant":{"sourceCode":"return \"geq\"","position":"org.easymock.internal.matchers.GreaterOrEqual:32","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.easymock.LogicalOperator:62","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":27,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","position":"org.easymock.internal.RecordState:294","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","position":"org.easymock.internal.AndroidClassProxyFactory:55","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":28,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","position":"org.easymock.internal.RecordState:284","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","position":"org.easymock.internal.ClassProxyFactory:220","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":29,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","position":"org.easymock.EasyMock:1875","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:115","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":30,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","position":"org.easymock.internal.Range:37","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":31,"name":"replaceReaction","transplant":{"sourceCode":"try {\r\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\r\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\r\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\r\n}","position":"org.easymock.internal.MocksControl:140","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.IProxyFactory","position":"org.easymock.internal.MocksControl:131","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":32,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","position":"org.easymock.internal.MocksControl:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"searchType":"searchType","paramTypes":"paramTypes","name":"name","this":"this"},"tindex":33,"name":"replace","transplant":{"sourceCode":"continue","position":"org.easymock.internal.ReflectionUtils:93","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:412","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":34,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:126","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":35,"name":"replaceRandom","transplant":{"sourceCode":"new org.easymock.internal.JavaProxyFactory()","position":"org.easymock.internal.MocksControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":36,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","position":"org.easymock.internal.ReplayState:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","position":"org.easymock.internal.DefaultClassInstantiator:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"actual":"actual","expected":"actual"},"tindex":37,"name":"replace","transplant":{"sourceCode":"return java.lang.Object.equals(java.lang.Object)","position":"org.easymock.internal.matchers.Equals:40","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:52","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":38,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:384","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","name":"name","this":"this"},"tindex":39,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:163","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:334","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":40,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","position":"org.easymock.internal.matchers.Compare:45","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":41,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","position":"org.easymock.internal.RecordState:59","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:136","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"tindex":42,"name":"replace","transplant":{"sourceCode":"org.easymock.internal.RecordState.closeMethod()","position":"org.easymock.internal.RecordState:76","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:117","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":43,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Exception java.lang.Exception","position":"org.easymock.ConstructorArgs:69","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{"number":"number"},"tindex":44,"name":"replace","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\r\n    return java.lang.Number.doubleValue();\r\n} else {\r\n    return java.lang.Number;\r\n}","position":"org.easymock.internal.RecordState:207","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Number.floatValue()","position":"org.easymock.internal.RecordState:205","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":45,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","position":"org.easymock.internal.MocksControl:114","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","position":"org.easymock.internal.MethodSerializationWrapper:39","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":46,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","position":"org.easymock.internal.MockInvocationHandler:43","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","position":"org.easymock.internal.LastControl:85","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":47,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:91","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:87","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":48,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","position":"org.easymock.internal.MocksControl:86","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"typeVariableMap":"typeVariableMap","this":"this","cls":"type"},"tindex":49,"name":"replace","transplant":{"sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:249","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":50,"name":"replace","transplant":{"sourceCode":"return false","position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.AndroidSupport.boolean","position":"org.easymock.internal.AndroidSupport:35","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":51,"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.Object != null","position":"org.easymock.internal.matchers.NotNull:36","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:43","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":52,"name":"replaceRandom","transplant":{"sourceCode":"final java.io.IOException java.io.IOException","position":"org.easymock.internal.EasyMockProperties:66","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = java.lang.Object","position":"org.easymock.internal.DefaultClassInstantiator:124","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":53,"name":"replaceRandom","transplant":{"sourceCode":"return ","position":"org.easymock.internal.RecordState:226","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType())","position":"org.easymock.internal.BridgeMethodResolver:318","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":54,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.ObjectMethodsFilter:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":55,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:163","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:155","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"bridgeMethod":"method"},"tindex":56,"name":"replace","transplant":{"sourceCode":"return java.lang.reflect.Method","position":"org.easymock.internal.BridgeMethodResolver:71","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\r\n    return java.lang.reflect.Method;\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:408","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":57,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","position":"org.easymock.internal.Range:45","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":58,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":59,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","position":"org.easymock.internal.MockBuilder:65","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","position":"org.easymock.internal.ClassProxyFactory:202","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":60,"name":"replaceRandom","transplant":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:115","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:115","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":61,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","position":"org.easymock.internal.MockBuilder:156","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","position":"org.easymock.internal.DefaultClassInstantiator:164","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":62,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:334","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":63,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","position":"org.easymock.internal.ReplayState:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":64,"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\r\n    return java.lang.Number.doubleValue();\r\n} else {\r\n    return java.lang.Number;\r\n}","position":"org.easymock.internal.RecordState:207","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\r\n    return java.lang.Number.longValue();\r\n} else {\r\n    if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\r\n        return java.lang.Number.floatValue();\r\n    } else {\r\n        if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\r\n            return java.lang.Number.doubleValue();\r\n        } else {\r\n            return java.lang.Number;\r\n        }\r\n    }\r\n}","position":"org.easymock.internal.RecordState:201","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":65,"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\r\n    return java.lang.reflect.Method;\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:150","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.easymock.internal.ObjectMethodsFilter:92","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":66,"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","position":"org.easymock.internal.DefaultClassInstantiator:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","position":"org.easymock.internal.DefaultClassInstantiator:118","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":67,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","position":"org.easymock.internal.matchers.Captures:50","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","position":"org.easymock.ConstructorArgs:70","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":68,"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.easymock.internal.Invocation:94","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.internal.ReflectionUtils:165","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":69,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.easymock.internal.Invocation:186","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:163","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":70,"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\r\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\r\n} ","position":"org.easymock.internal.ReflectionUtils:177","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","position":"org.easymock.internal.ReflectionUtils:178","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":71,"name":"replaceWittgenstein","transplant":{"sourceCode":"return \"cmpEq\"","position":"org.easymock.internal.matchers.CompareEqual:32","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","position":"org.easymock.internal.ClassInstantiatorFactory:48","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":72,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","position":"org.easymock.internal.ReplayState:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":73,"name":"replaceRandom","transplant":{"sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","position":"org.easymock.internal.LastControl:35","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:249","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":74,"name":"replace","transplant":{"sourceCode":"return true","position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:37","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":75,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":76,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","position":"org.easymock.internal.Range:37","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","position":"org.easymock.internal.DefaultClassInstantiator:164","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":77,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","position":"org.easymock.internal.RecordState:55","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>)","position":"org.easymock.internal.BridgeMethodResolver:381","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":78,"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","position":"org.easymock.internal.MocksControl:380","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-551735356674347591L","position":"org.easymock.internal.matchers.InstanceOf:27","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":79,"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.easymock.EasyMock:602","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.easymock.LogicalOperator:62","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":80,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","position":"org.easymock.ConstructorArgs:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","position":"org.easymock.ConstructorArgs:70","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":81,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","position":"org.easymock.internal.MockBuilder:65","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":82,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.RecordState:315","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Object == null","position":"org.easymock.internal.matchers.Equals:38","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":83,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.concurrent.locks.ReentrantLock()","position":"org.easymock.internal.ReplayState:32","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","position":"org.easymock.internal.matchers.Compare:45","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":84,"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.StringBuffer.toString()","position":"org.easymock.internal.ArgumentToString:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.StringBuffer.toString()","position":"org.easymock.internal.ArgumentToString:74","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":85,"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:52","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":86,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:249","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":87,"name":"replaceReaction","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":88,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","position":"org.easymock.internal.Range:45","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":89,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","position":"org.easymock.internal.ReflectionUtils:214","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"tindex":90,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","position":"org.easymock.internal.MockBuilder:117","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":91,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","position":"org.easymock.internal.ReflectionUtils:214","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":92,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","position":"org.easymock.EasyMock:1875","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)))","position":"org.easymock.internal.BridgeMethodResolver:354","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":93,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","position":"org.easymock.internal.matchers.Captures:50","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","position":"org.easymock.internal.LastControl:91","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":94,"name":"replaceRandom","transplant":{"sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","position":"org.easymock.internal.MocksBehavior:119","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","position":"org.easymock.internal.ClassProxyFactory:197","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"result":"result","method":"bridgeMethod"},"tindex":95,"name":"replace","transplant":{"sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","position":"org.easymock.internal.ReflectionUtils:104","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","position":"org.easymock.internal.BridgeMethodResolver:88","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":96,"name":"replaceRandom","transplant":{"sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","position":"org.easymock.internal.AndroidClassProxyFactory:49","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:136","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":97,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:225","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":98,"name":"replaceRandom","transplant":{"sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","position":"org.easymock.internal.RecordState:55","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","position":"org.easymock.internal.DefaultClassInstantiator:191","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":99,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:247","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:87","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":100,"name":"replaceReaction","transplant":{"sourceCode":"return \"leq\"","position":"org.easymock.internal.matchers.LessOrEqual:32","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","position":"org.easymock.internal.ClassInstantiatorFactory:48","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":101,"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","position":"org.easymock.internal.ReflectionUtils:142","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","position":"org.easymock.internal.ReflectionUtils:142","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":102,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","position":"org.easymock.ConstructorArgs:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"))","position":"org.easymock.internal.BridgeMethodResolver:92","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":103,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","position":"org.easymock.internal.DefaultClassInstantiator:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":104,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","position":"org.easymock.ConstructorArgs:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","position":"org.easymock.internal.ClassProxyFactory:220","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":105,"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\r\n    continue;\r\n} ","position":"org.easymock.internal.ReflectionUtils:92","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\r\n    continue;\r\n} ","position":"org.easymock.internal.ReflectionUtils:92","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":106,"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.internal.ReflectionUtils:165","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","position":"org.easymock.internal.ClassInstantiatorFactory:52","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"state":"state","value":"threadSafe"},"tindex":107,"name":"replace","transplant":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:232","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:240","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":108,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:163","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":109,"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","position":"org.easymock.internal.ArgumentToString:38","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","position":"org.easymock.internal.ArgumentToString:38","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":110,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","position":"org.easymock.internal.LastControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-3018631689416120154L","position":"org.easymock.internal.matchers.EqualsWithDelta:27","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":111,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","position":"org.easymock.internal.LastControl:39","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","position":"org.easymock.internal.DefaultClassInstantiator:118","type":"CtAssignmentImpl"},"status":0},{"failures":[],"tindex":112,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","position":"org.easymock.internal.LastControl:85","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":113,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:163","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":114,"name":"replaceReaction","transplant":{"sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\r\n    return ;\r\n} ","position":"org.easymock.internal.RecordState:291","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\r\n    return ;\r\n} ","position":"org.easymock.internal.RecordState:298","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":115,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:316","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:155","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":116,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","position":"org.easymock.internal.ReplayState:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","position":"org.easymock.internal.DefaultClassInstantiator:164","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":117,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","position":"org.easymock.internal.MockBuilder:215","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>)","position":"org.easymock.internal.BridgeMethodResolver:326","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":118,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","position":"org.easymock.EasyMockSupport:388","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == null) {\r\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:325","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":119,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:196","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":120,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","position":"org.easymock.internal.MockBuilder:65","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":121,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:148","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:225","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":122,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","position":"org.easymock.internal.DefaultClassInstantiator:162","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.IProxyFactory","position":"org.easymock.internal.MocksControl:131","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":123,"name":"replaceWittgenstein","transplant":{"sourceCode":"try {\r\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\r\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\r\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\r\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\r\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\r\n}","position":"org.easymock.internal.MocksControl:148","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","position":"org.easymock.EasyMock:1861","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":124,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:126","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":125,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.easymock.internal.ObjectMethodsFilter:60","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":126,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.BridgeMethodResolver:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\r\n    if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\r\n        return false;\r\n    } \r\n    break;\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:188","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":127,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.ObjectMethodsFilter:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"tindex":128,"name":"replace","transplant":{"sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","position":"org.easymock.internal.RecordState:181","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:153","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":129,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","position":"org.easymock.internal.Range:45","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":130,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:104","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":131,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":132,"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:126","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:126","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":133,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","position":"org.easymock.internal.ReflectionUtils:214","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","position":"org.easymock.internal.ClassProxyFactory:202","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":134,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:247","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:155","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":135,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:136","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":136,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","position":"org.easymock.internal.MethodSerializationWrapper:30","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = java.lang.Object","position":"org.easymock.internal.DefaultClassInstantiator:124","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":137,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","position":"org.easymock.internal.MockBuilder:226","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":138,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:225","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":139,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","position":"org.easymock.internal.MockBuilder:159","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":140,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","position":"org.easymock.internal.MockBuilder:220","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":141,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","position":"org.easymock.EasyMock:1875","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":142,"name":"replace","transplant":{"sourceCode":"return true","position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:43","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"isThreadSafe":"shouldFillInStackTrace"},"tindex":143,"name":"replace","transplant":{"sourceCode":"return this.boolean","position":"org.easymock.internal.MocksBehavior:186","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.easymock.internal.Result:109","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":144,"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","position":"org.easymock.internal.ClassInstantiatorFactory:52","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":145,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.easymock.internal.ObjectMethodsFilter:60","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.easymock.internal.BridgeMethodResolver:259","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":146,"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.easymock.EasyMock:602","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":147,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","position":"org.easymock.internal.MethodSerializationWrapper:30","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","position":"org.easymock.internal.ClassProxyFactory:197","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":148,"name":"replaceRandom","transplant":{"sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","position":"org.easymock.internal.RecordState:55","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\r\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\r\n} ","position":"org.easymock.ConstructorArgs:58","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":149,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:104","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":150,"name":"replaceReaction","transplant":{"sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\r\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\r\n} ","position":"org.easymock.internal.EasyMockProperties:47","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\r\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\r\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\r\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\r\n        } \r\n    }\r\n} ","position":"org.easymock.internal.EasyMockProperties:44","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":151,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","position":"org.easymock.internal.Range:37","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","position":"org.easymock.internal.ClassProxyFactory:220","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":152,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","position":"org.easymock.internal.RecordState:278","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","position":"org.easymock.internal.ClassProxyFactory:202","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":153,"name":"replaceRandom","transplant":{"sourceCode":"java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = null","position":"org.easymock.internal.ReflectionUtils:137","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = null","position":"org.easymock.internal.ReflectionUtils:137","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":154,"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\r\n    return java.lang.Number.doubleValue();\r\n} else {\r\n    return java.lang.Number;\r\n}","position":"org.easymock.internal.RecordState:207","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Number.intValue()","position":"org.easymock.internal.RecordState:199","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":155,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:243","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":156,"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","position":"org.easymock.internal.MockBuilder:226","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":157,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":158,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","position":"org.easymock.internal.Range:45","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","position":"org.easymock.internal.ClassProxyFactory:202","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":159,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","position":"org.easymock.ConstructorArgs:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:126","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":160,"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","position":"org.easymock.internal.ErrorMessage:54","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","position":"org.easymock.internal.matchers.Compare:45","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":161,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":162,"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","position":"org.easymock.internal.MockBuilder:156","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:115","type":"CtThrowImpl"},"status":0},{"failures":[],"tindex":163,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","position":"org.easymock.internal.MockBuilder:122","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":164,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":165,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","position":"org.easymock.internal.MockBuilder:156","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":166,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.easymock.internal.ObjectMethodsFilter:60","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = java.lang.Object","position":"org.easymock.internal.DefaultClassInstantiator:124","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":167,"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","position":"org.easymock.internal.ClassInstantiatorFactory:25","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-1726286682930686024L","position":"org.easymock.internal.ObjectMethodsFilter:29","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":168,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","position":"org.easymock.EasyMock:1875","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)))","position":"org.easymock.Capture:119","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":169,"name":"replaceRandom","transplant":{"sourceCode":"new org.easymock.internal.JavaProxyFactory()","position":"org.easymock.internal.MocksControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\r\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\r\n} ","position":"org.easymock.ConstructorArgs:58","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":170,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:172","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":171,"name":"replaceRandom","transplant":{"sourceCode":"return org.easymock.internal.ExpectedInvocation","position":"org.easymock.internal.ExpectedInvocationAndResults:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.ExpectedInvocation","position":"org.easymock.internal.ExpectedInvocationAndResult:37","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":172,"name":"replaceWittgenstein","transplant":{"sourceCode":"return \"gt\"","position":"org.easymock.internal.matchers.GreaterThan:32","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","position":"org.easymock.internal.ClassInstantiatorFactory:48","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":173,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.easymock.internal.ObjectMethodsFilter:60","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","position":"org.easymock.internal.MethodSerializationWrapper:40","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":174,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.easymock.internal.Invocation:186","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\r\n    return true;\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:132","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":175,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","position":"org.easymock.internal.RecordState:267","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":176,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","position":"org.easymock.internal.RecordState:267","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":177,"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","position":"org.easymock.internal.MockBuilder:226","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:115","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":178,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","position":"org.easymock.internal.matchers.Equals:62","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","position":"org.easymock.internal.ClassProxyFactory:202","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":179,"name":"replaceRandom","transplant":{"sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","position":"org.easymock.internal.ReflectionUtils:30","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","position":"org.easymock.internal.MethodSerializationWrapper:33","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":180,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","position":"org.easymock.internal.LastControl:35","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-7104607303959381785L","position":"org.easymock.internal.matchers.Find:28","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":181,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Exception java.lang.Exception","position":"org.easymock.ConstructorArgs:69","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:153","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":182,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:225","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":183,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","position":"org.easymock.internal.ReflectionUtils:214","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"result":"genericType","bound":"genericType","this":"this"},"tindex":184,"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\r\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:353","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":185,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:126","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","position":"org.easymock.internal.AndroidClassProxyFactory:55","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":186,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)))","position":"org.easymock.Capture:119","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":187,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:126","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","position":"org.easymock.internal.ClassProxyFactory:202","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":188,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","position":"org.easymock.internal.MocksControl:215","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":189,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.BridgeMethodResolver:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","position":"org.easymock.internal.matchers.Equals:57","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":190,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:153","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":191,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","position":"org.easymock.internal.RecordState:86","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":192,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:334","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":193,"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.easymock.internal.ReflectionUtils:117","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.easymock.internal.LastControl:117","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"this":"actual","o":"actual"},"tindex":194,"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\r\n    return false;\r\n} ","position":"org.easymock.internal.matchers.Equals:53","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\r\n    return false;\r\n} ","position":"org.easymock.internal.matchers.Compare:50","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":195,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:264","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":196,"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\r\n} else {\r\n    return java.lang.reflect.Type;\r\n}","position":"org.easymock.internal.BridgeMethodResolver:212","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","position":"org.easymock.internal.BridgeMethodResolver:213","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":197,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","position":"org.easymock.internal.matchers.Equals:62","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.ObjectMethodsFilter:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":198,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","position":"org.easymock.internal.MocksControl:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:104","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":199,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:334","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":200,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.easymock.internal.BridgeMethodResolver:259","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":201,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.concurrent.locks.ReentrantLock()","position":"org.easymock.internal.ReplayState:32","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-3743894206806704049L","position":"org.easymock.internal.matchers.Any:27","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":202,"name":"replaceRandom","transplant":{"sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","position":"org.easymock.internal.MocksControl:375","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","position":"org.easymock.internal.matchers.InstanceOf:40","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":203,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","position":"org.easymock.internal.RecordState:86","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":204,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:163","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":205,"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\r\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\r\n} ","position":"org.easymock.internal.MockInvocationHandler:37","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","position":"org.easymock.internal.MockInvocationHandler:38","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":206,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.RecordState.closeMethod()","position":"org.easymock.internal.RecordState:84","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.closeMethod()","position":"org.easymock.internal.RecordState:331","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":207,"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.easymock.internal.RecordState:315","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:52","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":208,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","position":"org.easymock.internal.RecordState:267","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.ObjectMethodsFilter:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":209,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","position":"org.easymock.internal.RecordState:91","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","position":"org.easymock.internal.AndroidClassProxyFactory:55","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":210,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:70","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":211,"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","position":"org.easymock.internal.MocksControl:380","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","position":"org.easymock.internal.MethodSerializationWrapper:36","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":212,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","position":"org.easymock.internal.RecordState:91","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.ObjectMethodsFilter:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":213,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","position":"org.easymock.internal.LastControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.matchers.Captures<?>.setPotentialValue(null)","position":"org.easymock.internal.Invocation:173","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":214,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","position":"org.easymock.internal.MethodSerializationWrapper:30","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-1951159588262854559L","position":"org.easymock.internal.ExpectedInvocationAndResult:25","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":215,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","position":"org.easymock.internal.Range:41","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":216,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","position":"org.easymock.internal.MockBuilder:65","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:149","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":217,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:148","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:70","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"arg":"mock"},"tindex":218,"name":"replace","transplant":{"sourceCode":"if (java.lang.Object == null) {\r\n    continue;\r\n} ","position":"org.easymock.ConstructorArgs:75","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","position":"org.easymock.internal.DefaultClassInstantiator:123","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":219,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","position":"org.easymock.internal.RecordState:86","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","position":"org.easymock.internal.ClassProxyFactory:220","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":220,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","position":"org.easymock.internal.ReflectionUtils:30","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == null) {\r\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:325","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":221,"name":"replaceReaction","transplant":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":222,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","position":"org.easymock.internal.RecordState:91","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":223,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","position":"org.easymock.internal.matchers.Equals:62","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":224,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","position":"org.easymock.internal.MockBuilder:159","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:115","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":225,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","position":"org.easymock.internal.LastControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.Invocation.clearCaptures()","position":"org.easymock.internal.MocksBehavior:106","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":226,"name":"replaceRandom","transplant":{"sourceCode":"final java.io.IOException java.io.IOException","position":"org.easymock.internal.EasyMockProperties:66","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:173","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"tindex":227,"name":"replace","transplant":{"sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","position":"org.easymock.internal.RecordState:181","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:163","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":228,"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.easymock.internal.LastControl:117","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.easymock.EasyMock:602","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":229,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:126","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.ObjectMethodsFilter:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":230,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:352","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":231,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:87","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":232,"name":"replaceRandom","transplant":{"sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\r\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\r\n} ","position":"org.easymock.internal.EasyMockProperties:110","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\r\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\r\n} ","position":"org.easymock.internal.EasyMockProperties:110","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":233,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:153","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:117","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":234,"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.ClassLoader == null) {\r\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\r\n} ","position":"org.easymock.internal.EasyMockProperties:127","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","position":"org.easymock.internal.EasyMockProperties:129","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":235,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","position":"org.easymock.EasyMock:1875","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"tindex":236,"name":"replace","transplant":{"sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","position":"org.easymock.internal.RecordState:181","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:136","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":237,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:196","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":238,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:247","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:172","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":239,"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","position":"org.easymock.internal.MockBuilder:65","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","position":"org.easymock.ConstructorArgs:70","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":240,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","position":"org.easymock.internal.ClassProxyFactory:208","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","position":"org.easymock.internal.LastControl:85","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":241,"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Object == null","position":"org.easymock.internal.matchers.Equals:38","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Object == null","position":"org.easymock.internal.matchers.Null:35","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":242,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","position":"org.easymock.ConstructorArgs:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:149","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":243,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","position":"org.easymock.internal.ExpectedInvocation:90","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\r\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\r\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\r\n    if (java.lang.Class<?>.isArray()) {\r\n        final java.lang.reflect.Type java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n        if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\r\n            if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\r\n                return false;\r\n            } \r\n            break;\r\n        } \r\n    } \r\n    if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\r\n        return false;\r\n    } \r\n}","position":"org.easymock.internal.BridgeMethodResolver:182","type":"CtForImpl"},"status":0},{"failures":[],"tindex":244,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","position":"org.easymock.internal.matchers.InstanceOf:40","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":245,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","position":"org.easymock.internal.RecordState:86","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:115","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":246,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","position":"org.easymock.internal.BridgeMethodResolver:183","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","position":"org.easymock.internal.BridgeMethodResolver:183","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"tindex":247,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","position":"org.easymock.internal.DefaultClassInstantiator:123","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":248,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","position":"org.easymock.internal.MockInvocationHandler:41","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:173","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":249,"name":"replaceReaction","transplant":{"sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","position":"org.easymock.internal.MockBuilder:185","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","position":"org.easymock.internal.MockBuilder:181","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":250,"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.easymock.EasyMock:602","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","name":"name","this":"this"},"tindex":251,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:264","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":252,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:316","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":253,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","position":"org.easymock.internal.EasyMockProperties:63","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":254,"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.lang.reflect.Type","position":"org.easymock.internal.BridgeMethodResolver:215","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","position":"org.easymock.internal.BridgeMethodResolver:213","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":255,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","position":"org.easymock.internal.MethodSerializationWrapper:35","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":256,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","position":"org.easymock.internal.Range:37","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":257,"name":"replaceRandom","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","position":"org.easymock.internal.ReplayState:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","position":"org.easymock.internal.ReplayState:149","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":258,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","position":"org.easymock.internal.MocksControl:114","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:163","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":259,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","position":"org.easymock.internal.MocksControl:215","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:249","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":260,"name":"replaceRandom","transplant":{"sourceCode":"return org.easymock.internal.Result","position":"org.easymock.internal.UnorderedBehavior:63","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.List<org.easymock.IArgumentMatcher>","position":"org.easymock.internal.LastControl:98","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":261,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:70","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":262,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","position":"org.easymock.internal.DefaultClassInstantiator:164","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":263,"name":"replaceReaction","transplant":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","position":"org.easymock.internal.MockInvocationHandler:38","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\r\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\r\n} ","position":"org.easymock.internal.MockInvocationHandler:37","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":264,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","position":"org.easymock.internal.MockBuilder:65","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:126","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":265,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:155","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":266,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","position":"org.easymock.EasyMock:1875","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":267,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","position":"org.easymock.EasyMock:1875","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","position":"org.easymock.internal.DefaultClassInstantiator:164","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":268,"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.reflect.Constructor<?>.newInstance(java.lang.Object[])","position":"org.easymock.internal.DefaultClassInstantiator:54","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Constructor<?>.newInstance(java.lang.Object[])","position":"org.easymock.internal.DefaultClassInstantiator:54","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":269,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","position":"org.easymock.internal.MockBuilder:159","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":270,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","position":"org.easymock.internal.MockBuilder:220","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)))","position":"org.easymock.internal.BridgeMethodResolver:354","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":271,"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.easymock.internal.JavaProxyFactory()","position":"org.easymock.internal.MocksControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-1951159588262854559L","position":"org.easymock.internal.ExpectedInvocationAndResult:25","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":272,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","position":"org.easymock.internal.ClassProxyFactory:202","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"tindex":273,"name":"replace","transplant":{"sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","position":"org.easymock.internal.RecordState:115","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:163","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":274,"name":"replaceReaction","transplant":{"sourceCode":"return java.lang.Object != null","position":"org.easymock.internal.matchers.NotNull:36","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:52","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":275,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","position":"org.easymock.internal.Range:41","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":276,"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Object[] == null) {\r\n    java.lang.Object[] = new java.lang.Object[0];\r\n} ","position":"org.easymock.internal.ArgumentToString:87","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[] = new java.lang.Object[0]","position":"org.easymock.internal.ArgumentToString:88","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"result":"candidateMethod"},"tindex":277,"name":"replace","transplant":{"sourceCode":"return null","position":"org.easymock.internal.ReflectionUtils:117","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Method","position":"org.easymock.internal.BridgeMethodResolver:71","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":278,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":279,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:148","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"result":"genericType","bound":"genericType"},"tindex":280,"name":"replace","transplant":{"sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","position":"org.easymock.internal.BridgeMethodResolver:351","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:249","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":281,"name":"replaceReaction","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","position":"org.easymock.internal.ReplayState:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","position":"org.easymock.internal.RecordState:86","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":282,"name":"replaceRandom","transplant":{"sourceCode":"new org.easymock.internal.JavaProxyFactory()","position":"org.easymock.internal.MocksControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","position":"org.easymock.internal.DefaultClassInstantiator:123","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":283,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":284,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.RecordState:324","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Method != null ? org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>) : false","position":"org.easymock.internal.BridgeMethodResolver:136","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":285,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.RecordState.closeMethod()","position":"org.easymock.internal.RecordState:331","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:117","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":286,"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.easymock.internal.BridgeMethodResolver:180","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.internal.ReflectionUtils:165","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":287,"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","position":"org.easymock.internal.MockBuilder:226","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":288,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:91","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:155","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":289,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:148","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:172","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":290,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.matchers.Any:36","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(org.easymock.IArgumentMatcher.matches(java.lang.Object))","position":"org.easymock.internal.matchers.Not:36","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":291,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","position":"org.easymock.Capture:76","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.ObjectMethodsFilter:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":292,"name":"replace","transplant":{"sourceCode":"return \"lt\"","position":"org.easymock.internal.matchers.LessThan:32","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","position":"org.easymock.internal.ClassInstantiatorFactory:48","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":293,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","position":"org.easymock.internal.RecordState:91","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"actual":"actual"},"tindex":294,"name":"replace","transplant":{"sourceCode":"return java.lang.Object != null","position":"org.easymock.internal.matchers.NotNull:36","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:49","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"number":"number"},"tindex":295,"name":"replace","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\r\n    return java.lang.Number.doubleValue();\r\n} else {\r\n    return java.lang.Number;\r\n}","position":"org.easymock.internal.RecordState:207","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\r\n    return java.lang.Number.shortValue();\r\n} else {\r\n    if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\r\n        return java.lang.Number.intValue();\r\n    } else {\r\n        if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\r\n            return java.lang.Number.longValue();\r\n        } else {\r\n            if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\r\n                return java.lang.Number.floatValue();\r\n            } else {\r\n                if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\r\n                    return java.lang.Number.doubleValue();\r\n                } else {\r\n                    return java.lang.Number;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","position":"org.easymock.internal.RecordState:195","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":296,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","position":"org.easymock.internal.MocksControl:114","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:173","type":"CtInvocationImpl"},"status":0},{"failures":[],"tindex":297,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":298,"name":"replaceRandom","transplant":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:286","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:286","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":299,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:163","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:87","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":300,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":301,"name":"replaceRandom","transplant":{"sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","position":"org.easymock.internal.MethodSerializationWrapper:30","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:173","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"tindex":302,"name":"replace","transplant":{"sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","position":"org.easymock.internal.RecordState:106","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:153","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":303,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:196","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":304,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.matchers.Captures:51","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(org.easymock.IArgumentMatcher.matches(java.lang.Object))","position":"org.easymock.internal.matchers.Not:36","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":305,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","position":"org.easymock.internal.ReflectionUtils:49","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","position":"org.easymock.internal.MethodSerializationWrapper:36","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":306,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","position":"org.easymock.internal.MockBuilder:159","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":307,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:225","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":308,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","position":"org.easymock.internal.RecordState:278","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","position":"org.easymock.internal.ClassProxyFactory:220","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":309,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","position":"org.easymock.internal.Range:41","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","position":"org.easymock.internal.ClassProxyFactory:202","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"},"tindex":310,"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\r\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:276","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":311,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","position":"org.easymock.internal.MocksControl:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:225","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":312,"name":"replaceReaction","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","position":"org.easymock.internal.RecordState:284","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":313,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","position":"org.easymock.internal.ReplayState:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","position":"org.easymock.internal.ClassProxyFactory:202","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":314,"name":"replaceReaction","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","position":"org.easymock.internal.Range:37","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":315,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":316,"name":"replace","transplant":{"sourceCode":"return true","position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:49","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":317,"name":"replaceRandom","transplant":{"sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","position":"org.easymock.internal.EasyMockProperties:120","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","position":"org.easymock.internal.RecordState:336","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":318,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","position":"org.easymock.internal.MockBuilder:159","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","position":"org.easymock.internal.ClassProxyFactory:220","type":"CtThrowImpl"},"status":0},{"failures":[],"tindex":319,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","position":"org.easymock.internal.DefaultClassInstantiator:191","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":320,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","position":"org.easymock.internal.MocksControl:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:172","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":321,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","position":"org.easymock.internal.LastControl:39","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-1726286682930686024L","position":"org.easymock.internal.ObjectMethodsFilter:29","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":322,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:87","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":323,"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\r\n    return java.lang.reflect.Constructor<T>;\r\n} ","position":"org.easymock.internal.ReflectionUtils:150","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Constructor<T>","position":"org.easymock.internal.ReflectionUtils:151","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":324,"name":"replaceRandom","transplant":{"sourceCode":"break","position":"org.easymock.Capture:102","type":"CtBreakImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = java.lang.Object","position":"org.easymock.internal.DefaultClassInstantiator:124","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":325,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","position":"org.easymock.internal.LastControl:39","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-2087349195182278608L","position":"org.easymock.internal.AssertionErrorWrapper:23","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":326,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:91","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:264","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":327,"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.internal.matchers.Equals:54","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.AndroidSupport.boolean","position":"org.easymock.internal.AndroidSupport:35","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":328,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","position":"org.easymock.internal.Range:41","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.ObjectMethodsFilter:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":329,"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\r\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\r\n} ","position":"org.easymock.internal.ObjectMethodsFilter:82","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","position":"org.easymock.internal.ObjectMethodsFilter:83","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":330,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:213","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"mockName":"symbol","methodName":"symbol"},"tindex":331,"name":"replace","transplant":{"sourceCode":"return (java.lang.String + \".\") + java.lang.String","position":"org.easymock.internal.Invocation:153","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.easymock.LogicalOperator:62","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":332,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","position":"org.easymock.internal.MethodSerializationWrapper:34","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","position":"org.easymock.internal.MethodSerializationWrapper:40","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":333,"name":"replaceReaction","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:163","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:264","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":334,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.RecordState:315","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Method != null ? org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>) : false","position":"org.easymock.internal.BridgeMethodResolver:136","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"tindex":335,"name":"replace","transplant":{"sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","position":"org.easymock.internal.RecordState:181","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:173","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"},"tindex":336,"name":"replace","transplant":{"sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","position":"org.easymock.internal.BridgeMethodResolver:324","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","position":"org.easymock.internal.BridgeMethodResolver:209","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":337,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:138","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":338,"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.easymock.internal.Results:48","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:249","type":"CtAssignmentImpl"},"status":0},{"failures":[],"tindex":339,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\r\n    java.util.concurrent.locks.ReentrantLock.lock();\r\n    try {\r\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\r\n    } finally {\r\n        java.util.concurrent.locks.ReentrantLock.unlock();\r\n    }\r\n} ","position":"org.easymock.internal.ReplayState:42","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":340,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","position":"org.easymock.internal.LastControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:384","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":341,"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.easymock.internal.MocksBehavior:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.easymock.EasyMock:602","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":342,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","position":"org.easymock.internal.RecordState:284","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":343,"name":"replaceReaction","transplant":{"sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","position":"org.easymock.internal.RecordState:124","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:173","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":344,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","position":"org.easymock.Capture:76","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"))","position":"org.easymock.internal.BridgeMethodResolver:92","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"clazz":"clazz"},"tindex":345,"name":"replace","transplant":{"sourceCode":"return java.lang.Class<?>.getConstructors()[0]","position":"org.easymock.internal.DefaultClassInstantiator:93","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\r\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\r\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\r\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\r\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\r\n    } \r\n    return java.lang.Class<?>.getConstructors()[0];\r\n}","position":"org.easymock.internal.DefaultClassInstantiator:86","type":"CtTryImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":346,"name":"replaceRandom","transplant":{"sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","position":"org.easymock.internal.MockBuilder:177","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","position":"org.easymock.internal.MockBuilder:177","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":347,"name":"replaceRandom","transplant":{"sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","position":"org.easymock.internal.LastControl:35","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","position":"org.easymock.internal.LastControl:85","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":348,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.easymock.internal.Invocation:186","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","position":"org.easymock.ConstructorArgs:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":349,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\r\n    if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\r\n        return false;\r\n    } \r\n    break;\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:188","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":350,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","position":"org.easymock.internal.Range:45","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","position":"org.easymock.internal.AndroidClassProxyFactory:55","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":351,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","position":"org.easymock.ConstructorArgs:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"actual":"actual"},"tindex":352,"name":"replace","transplant":{"sourceCode":"return java.lang.Object != null","position":"org.easymock.internal.matchers.NotNull:36","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:37","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":353,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","position":"org.easymock.internal.MockBuilder:185","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","position":"org.easymock.internal.MockBuilder:189","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":354,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.BridgeMethodResolver:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.internal.Invocation:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":355,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:196","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":356,"name":"replaceRandom","transplant":{"sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","position":"org.easymock.internal.ClassInstantiatorFactory:25","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","position":"org.easymock.internal.MockBuilder:122","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":357,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","position":"org.easymock.internal.ReplayState:40","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","position":"org.easymock.internal.RecordState:336","type":"CtInvocationImpl"},"status":0},{"failures":[],"tindex":358,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","position":"org.easymock.internal.MocksControl:136","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":359,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","position":"org.easymock.internal.ReflectionUtils:214","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","position":"org.easymock.internal.DefaultClassInstantiator:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":360,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:316","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:225","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":361,"name":"replaceRandom","transplant":{"sourceCode":"return 0","position":"org.easymock.EasyMock:978","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.easymock.internal.ObjectMethodsFilter:92","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":362,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:87","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":363,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","position":"org.easymock.internal.MockBuilder:156","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","position":"org.easymock.internal.ClassProxyFactory:202","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":364,"name":"replaceReaction","transplant":{"sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","position":"org.easymock.internal.RecordState:96","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:136","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":365,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","position":"org.easymock.internal.MockBuilder:65","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","position":"org.easymock.internal.AndroidClassProxyFactory:55","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":366,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:163","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:225","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":367,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","position":"org.easymock.internal.AndroidClassProxyFactory:55","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":368,"name":"replaceReaction","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","position":"org.easymock.internal.Results:40","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":369,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","position":"org.easymock.internal.ReplayState:40","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:173","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":370,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:126","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":371,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","position":"org.easymock.internal.MockInvocationHandler:45","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","position":"org.easymock.internal.RecordState:44","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":372,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","position":"org.easymock.internal.MethodSerializationWrapper:30","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int)","position":"org.easymock.internal.Invocation:74","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":373,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","position":"org.easymock.internal.Range:45","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","position":"org.easymock.internal.DefaultClassInstantiator:164","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":374,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","position":"org.easymock.internal.MockBuilder:220","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\r\n    java.lang.Object[][int] = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int);\r\n}","position":"org.easymock.internal.Invocation:73","type":"CtForImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":375,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","position":"org.easymock.internal.Range:41","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"tindex":376,"name":"replace","transplant":{"sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","position":"org.easymock.internal.MockBuilder:181","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","position":"org.easymock.internal.MockBuilder:189","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"tindex":377,"name":"replace","transplant":{"sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","position":"org.easymock.internal.RecordState:171","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:173","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":378,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","position":"org.easymock.internal.Results:40","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":379,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.Properties()","position":"org.easymock.internal.EasyMockProperties:41","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Method == null) {\r\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:91","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":380,"name":"replaceReaction","transplant":{"sourceCode":"return \"leq\"","position":"org.easymock.internal.matchers.LessOrEqual:32","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.easymock.LogicalOperator:62","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":381,"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.util.List<T>.size()) == 1) {\r\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\r\n} ","position":"org.easymock.Capture:129","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","position":"org.easymock.Capture:130","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":382,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:247","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:243","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":383,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","position":"org.easymock.internal.matchers.Captures:50","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType())","position":"org.easymock.internal.BridgeMethodResolver:318","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":384,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":385,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","position":"org.easymock.internal.MockBuilder:156","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":386,"name":"replaceRandom","transplant":{"sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\r\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\r\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\r\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\r\n        } \r\n    }\r\n} ","position":"org.easymock.internal.EasyMockProperties:44","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\r\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\r\n} ","position":"org.easymock.internal.EasyMockProperties:47","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":387,"name":"replaceRandom","transplant":{"sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","position":"org.easymock.internal.EasyMockProperties:129","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","position":"org.easymock.internal.EasyMockProperties:129","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":388,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","position":"org.easymock.ConstructorArgs:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":389,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","position":"org.easymock.ConstructorArgs:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","position":"org.easymock.internal.DefaultClassInstantiator:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"tindex":390,"name":"replace","transplant":{"sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","position":"org.easymock.internal.RecordState:133","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:136","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":391,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","position":"org.easymock.internal.RecordState:267","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","position":"org.easymock.internal.DefaultClassInstantiator:164","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":392,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:213","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":393,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:316","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:243","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":394,"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.easymock.internal.LastControl:71","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.easymock.EasyMock:602","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":395,"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.easymock.EasyMock:602","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.easymock.internal.LastControl:71","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":396,"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.easymock.internal.Results:48","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","position":"org.easymock.internal.RecordState:336","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":397,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","position":"org.easymock.internal.RecordState:284","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)))","position":"org.easymock.Capture:119","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":398,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","position":"org.easymock.internal.Results:40","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","position":"org.easymock.internal.RecordState:86","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":399,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":400,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","position":"org.easymock.internal.Range:45","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","position":"org.easymock.internal.DefaultClassInstantiator:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":401,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","position":"org.easymock.internal.MockBuilder:159","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":402,"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.easymock.internal.Results:59","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.EasyMock:966","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":403,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:243","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":404,"name":"replaceRandom","transplant":{"sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","position":"org.easymock.internal.MocksBehavior:119","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.easymock.internal.BridgeMethodResolver:133","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":405,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:148","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":406,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:126","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","position":"org.easymock.internal.ReflectionUtils:214","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":407,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","position":"org.easymock.internal.matchers.Equals:62","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","position":"org.easymock.internal.DefaultClassInstantiator:164","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":408,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.easymock.internal.ObjectMethodsFilter:60","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.easymock.internal.BridgeMethodResolver:133","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":409,"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\r\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\r\n} ","position":"org.easymock.internal.RecordState:85","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\r\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\r\n    org.easymock.internal.AndroidSupport.boolean = true;\r\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\r\n    org.easymock.internal.AndroidSupport.boolean = false;\r\n}","position":"org.easymock.internal.AndroidSupport:26","type":"CtTryImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":410,"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.internal.RecordState:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.AndroidSupport.boolean","position":"org.easymock.internal.AndroidSupport:35","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":411,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","position":"org.easymock.internal.Range:41","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","position":"org.easymock.internal.DefaultClassInstantiator:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":412,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","position":"org.easymock.internal.RecordState:86","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)))","position":"org.easymock.Capture:119","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":413,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","position":"org.easymock.internal.RecordState:91","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":414,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","position":"org.easymock.internal.DefaultClassInstantiator:164","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":415,"name":"replaceReaction","transplant":{"sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","position":"org.easymock.internal.RecordState:151","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:153","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":416,"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.easymock.internal.JavaProxyFactory()","position":"org.easymock.internal.MocksControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-5554816464613350531L","position":"org.easymock.internal.ExpectedInvocation:32","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":417,"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Class<?>.getConstructors()[0]","position":"org.easymock.internal.DefaultClassInstantiator:93","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":418,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.concurrent.locks.ReentrantLock()","position":"org.easymock.internal.ReplayState:32","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-3018631689416120154L","position":"org.easymock.internal.matchers.EqualsWithDelta:27","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"tindex":419,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\r\n    return true;\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:132","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":420,"name":"replaceRandom","transplant":{"sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","position":"org.easymock.internal.MocksControl:380","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","position":"org.easymock.ConstructorArgs:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":421,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","position":"org.easymock.internal.MockBuilder:210","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","position":"org.easymock.internal.MockBuilder:117","type":"CtAssignmentImpl"},"status":0},{"failures":[],"tindex":422,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","position":"org.easymock.internal.MethodSerializationWrapper:34","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":423,"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.lang.Thread) != java.lang.Thread.(java.lang.Thread.currentThread())) {\r\n    throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))));\r\n} ","position":"org.easymock.internal.MocksBehavior:196","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))","position":"org.easymock.internal.MocksBehavior:197","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":424,"name":"replaceReaction","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:104","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":425,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","position":"org.easymock.internal.LastControl:79","type":"CtInvocationImpl"},"status":0},{"failures":[],"tindex":426,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.IMocksControl.verify()","position":"org.easymock.EasyMockSupport:468","type":"CtInvocationImpl"},"status":0},{"failures":[],"tindex":427,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","position":"org.easymock.internal.LastControl:91","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":428,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","position":"org.easymock.internal.MockBuilder:226","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","position":"org.easymock.internal.Invocation:211","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","name":"name","this":"this"},"tindex":429,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMockSupport:379","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":430,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","position":"org.easymock.internal.RecordState:284","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","position":"org.easymock.internal.Invocation:211","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":431,"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","position":"org.easymock.EasyMock:1875","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","position":"org.easymock.internal.ClassProxyFactory:202","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":432,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","position":"org.easymock.internal.ClassProxyFactory:202","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","position":"org.easymock.internal.ReflectionUtils:214","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":433,"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","position":"org.easymock.internal.MockBuilder:159","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","position":"org.easymock.internal.ObjectMethodsFilter:114","type":"CtThrowImpl"},"status":0},{"failures":[],"tindex":434,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.internal.BridgeMethodResolver:190","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":435,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"-3018631689416120154L","position":"org.easymock.internal.matchers.EqualsWithDelta:27","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":436,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","position":"org.easymock.internal.RecordState:284","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","position":"org.easymock.internal.ObjectMethodsFilter:114","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":437,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Exception java.lang.Exception","position":"org.easymock.ConstructorArgs:69","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.easymock.internal.BridgeMethodResolver:192","type":"CtBreakImpl"},"status":0},{"failures":[],"tindex":438,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"-5048595127450771363L","position":"org.easymock.internal.matchers.Captures:30","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":439,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","position":"org.easymock.internal.ReflectionUtils:214","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":440,"name":"replace","transplant":{"sourceCode":"return true","position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.internal.BridgeMethodResolver:180","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":441,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:207","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:225","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":442,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","position":"org.easymock.internal.Result:85","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","position":"org.easymock.internal.matchers.InstanceOf:40","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"result":"result","bound":"bound"},"tindex":443,"name":"replace","transplant":{"sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","position":"org.easymock.internal.BridgeMethodResolver:348","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","position":"org.easymock.internal.BridgeMethodResolver:351","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"c":"c"},"tindex":444,"name":"replace","transplant":{"sourceCode":"org.easymock.IMocksControl.resetToStrict()","position":"org.easymock.EasyMockSupport:501","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.IMocksControl.reset()","position":"org.easymock.EasyMockSupport:458","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":445,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","position":"org.easymock.internal.RecordState:86","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"tindex":446,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\r\n    if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\r\n        return false;\r\n    } \r\n    break;\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:188","type":"CtIfImpl"},"status":0},{"failures":[],"tindex":447,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"-1951159588262854559L","position":"org.easymock.internal.ExpectedInvocationAndResult:25","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":448,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.easymock.internal.ObjectMethodsFilter:60","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.internal.BridgeMethodResolver:180","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":449,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":450,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","position":"org.easymock.internal.ArgumentToString:72","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","position":"org.easymock.internal.MethodSerializationWrapper:35","type":"CtInvocationImpl"},"status":0},{"failures":[],"tindex":451,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","position":"org.easymock.internal.DefaultClassInstantiator:164","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"matching":"isThreadSafe"},"tindex":452,"name":"replace","transplant":{"sourceCode":"return boolean","position":"org.easymock.internal.ErrorMessage:36","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.boolean","position":"org.easymock.internal.MocksBehavior:186","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":453,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.internal.Invocation:195","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":454,"name":"replaceRandom","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","position":"org.easymock.internal.RecordState:284","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()","position":"org.easymock.internal.ReplayState:109","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","this":"this","mockedMethods":"mockedMethods"},"tindex":455,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:138","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:243","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":456,"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:384","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>)","position":"org.easymock.internal.BridgeMethodResolver:381","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","this":"this"},"tindex":457,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMockSupport:363","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:104","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":458,"name":"replace","transplant":{"sourceCode":"return null","position":"org.easymock.internal.BridgeMethodResolver:165","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Method","position":"org.easymock.internal.BridgeMethodResolver:71","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","this":"this"},"tindex":459,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMockSupport:363","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":460,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == null) {\r\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:325","type":"CtIfImpl"},"status":0},{"failures":[],"tindex":461,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"-5554816464613350531L","position":"org.easymock.internal.ExpectedInvocation:32","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"tindex":462,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"-3483500330975410177L","position":"org.easymock.internal.RuntimeExceptionWrapper:23","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","this":"this"},"tindex":463,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMockSupport:363","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:138","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":464,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"-4859402739599754147L","position":"org.easymock.internal.matchers.Compare:30","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","name":"name","this":"this"},"tindex":465,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMockSupport:349","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"clazz":"paramType"},"tindex":466,"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","position":"org.easymock.ConstructorArgs:70","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":467,"name":"replaceReaction","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:207","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:104","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":468,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Method == null) {\r\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:91","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","this":"this","mockedMethods":"mockedMethods"},"tindex":469,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:138","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":470,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","position":"org.easymock.internal.ClassProxyFactory:117","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":471,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.easymock.internal.Invocation:186","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"tindex":472,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.matchers.Captures<?>.setPotentialValue(null)","position":"org.easymock.internal.Invocation:173","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":473,"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.internal.Invocation:199","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.internal.Invocation:195","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":474,"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.internal.Invocation:114","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":475,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"-6657694947057597484L","position":"org.easymock.internal.matchers.Matches:27","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"tindex":476,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method.setAccessible(true)","position":"org.easymock.internal.Result:83","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":477,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:172","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":478,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","position":"org.easymock.internal.BridgeMethodResolver:312","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":479,"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.easymock.internal.matchers.Any:36","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:43","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","this":"this"},"tindex":480,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMockSupport:363","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:225","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":481,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","position":"org.easymock.EasyMock:1890","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"result":"resolvedType","bound":"resolvedType"},"tindex":482,"name":"replace","transplant":{"sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","position":"org.easymock.internal.BridgeMethodResolver:348","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>)","position":"org.easymock.internal.BridgeMethodResolver:326","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":483,"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.easymock.internal.Invocation:94","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.EasyMock:966","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":484,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:243","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":485,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","position":"org.easymock.internal.ReplayState:68","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","position":"org.easymock.internal.AndroidClassProxyFactory:75","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":486,"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","position":"org.easymock.ConstructorArgs:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","position":"org.easymock.internal.ClassProxyFactory:202","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":487,"name":"replaceReaction","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:207","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":488,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","position":"org.easymock.internal.DefaultClassInstantiator:118","type":"CtAssignmentImpl"},"status":0},{"failures":[],"tindex":489,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Collection<org.easymock.internal.matchers.Captures<?>>.clear()","position":"org.easymock.internal.Invocation:175","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":490,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","position":"org.easymock.internal.ReflectionUtils:45","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>","position":"org.easymock.internal.BridgeMethodResolver:254","type":"CtAssignmentImpl"},"status":0},{"failures":[],"tindex":491,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"))","position":"org.easymock.internal.BridgeMethodResolver:92","type":"CtThrowImpl"},"status":0},{"failures":[],"tindex":492,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"-6785245714002503134L","position":"org.easymock.internal.matchers.Contains:27","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"tindex":493,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"-5160559075998939348L","position":"org.easymock.internal.matchers.Not:27","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":494,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","position":"org.easymock.internal.ReflectionUtils:43","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-6785245714002503134L","position":"org.easymock.internal.matchers.Contains:27","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":495,"name":"replaceRandom","transplant":{"sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","position":"org.easymock.internal.EasyMockProperties:120","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","position":"org.easymock.ConstructorArgs:59","type":"CtThrowImpl"},"status":0},{"failures":[],"tindex":496,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"-6743402320315331536L","position":"org.easymock.internal.Range:25","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":497,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:138","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":498,"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.internal.Invocation:94","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.Set<java.lang.reflect.Method>) != null) && (!(java.util.Set<java.lang.reflect.Method>.contains(java.lang.reflect.Method)))","position":"org.easymock.internal.AndroidClassProxyFactory:89","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":499,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","position":"org.easymock.internal.UnorderedBehavior:44","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.Invocation.clearCaptures()","position":"org.easymock.internal.UnorderedBehavior:67","type":"CtInvocationImpl"},"status":0},{"failures":[],"tindex":500,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","position":"org.easymock.internal.ObjectMethodsFilter:114","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":501,"name":"replaceRandom","transplant":{"sourceCode":"return \"lt\"","position":"org.easymock.internal.matchers.LessThan:32","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return \"lt\"","position":"org.easymock.internal.matchers.LessThan:32","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":502,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof java.lang.Object[]) {\r\n    return ((java.lang.Object[])(java.lang.Object));\r\n} ","position":"org.easymock.internal.Invocation:69","type":"CtIfImpl"},"status":0},{"failures":[],"tindex":503,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"-3743894206806704049L","position":"org.easymock.internal.matchers.Any:27","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":504,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","position":"org.easymock.internal.MockBuilder:215","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-2485406702001842607L","position":"org.easymock.internal.matchers.LessOrEqual:24","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{"e":"e"},"tindex":505,"name":"replace","transplant":{"sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.ObjectMethodsFilter:62","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","position":"org.easymock.internal.Invocation:211","type":"CtThrowImpl"},"status":0},{"failures":[],"tindex":506,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int)","position":"org.easymock.internal.Invocation:74","type":"CtAssignmentImpl"},"status":0},{"failures":[],"tindex":507,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","position":"org.easymock.internal.BridgeMethodResolver:351","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":508,"name":"replace","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","position":"org.easymock.internal.matchers.Equals:62","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":509,"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.Set<java.lang.reflect.Method>) != null) && (!(java.util.Set<java.lang.reflect.Method>.contains(java.lang.reflect.Method)))","position":"org.easymock.internal.AndroidClassProxyFactory:89","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":510,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","position":"org.easymock.internal.MockBuilder:226","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.ObjectMethodsFilter:62","type":"CtThrowImpl"},"status":0},{"failures":[],"tindex":511,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"-9054190871232972342L","position":"org.easymock.internal.ClassProxyFactory:53","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{"result":"parameterPosition"},"tindex":512,"name":"replace","transplant":{"sourceCode":"return int < 0","position":"org.easymock.internal.matchers.LessThan:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>[][int].isPrimitive()","position":"org.easymock.internal.Invocation:138","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":513,"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Object instanceof java.lang.Object[]) {\r\n    return ((java.lang.Object[])(java.lang.Object));\r\n} ","position":"org.easymock.internal.Invocation:69","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.lang.Object[])(java.lang.Object))","position":"org.easymock.internal.Invocation:70","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","this":"this"},"tindex":514,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMockSupport:306","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:207","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":515,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.Invocation.clearCaptures()","position":"org.easymock.internal.MocksBehavior:106","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":516,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMockSupport:349","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":517,"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.internal.Invocation:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.internal.Invocation:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":518,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMockSupport:349","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":519,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","position":"org.easymock.internal.Range:37","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","position":"org.easymock.internal.AndroidClassProxyFactory:55","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"value":"obj"},"tindex":520,"name":"replace","transplant":{"sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\r\n    return java.lang.Object;\r\n} ","position":"org.easymock.internal.RecordState:188","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Object","position":"org.easymock.internal.ClassProxyFactory:76","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":521,"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:49","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Object == null","position":"org.easymock.internal.matchers.Equals:38","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":522,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"-5699326678580460103L","position":"org.easymock.internal.Result:77","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":523,"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.EasyMock:966","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":524,"name":"replaceReaction","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:138","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:104","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":525,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","position":"org.easymock.internal.RecordState:267","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","position":"org.easymock.internal.ClassProxyFactory:117","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":526,"name":"replaceRandom","transplant":{"sourceCode":"continue","position":"org.easymock.internal.UnorderedBehavior:90","type":"CtContinueImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int)","position":"org.easymock.internal.Invocation:74","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":527,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","position":"org.easymock.internal.ReplayState:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"))","position":"org.easymock.internal.BridgeMethodResolver:92","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":528,"name":"replaceRandom","transplant":{"sourceCode":"new java.util.concurrent.locks.ReentrantLock()","position":"org.easymock.internal.ReplayState:32","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.easymock.internal.BridgeMethodResolver:246","type":"CtInvocationImpl"},"status":0},{"failures":[],"tindex":529,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"-7799769066534714634L","position":"org.easymock.internal.MockInvocationHandler:27","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","this":"this"},"tindex":530,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMockSupport:306","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:225","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":531,"name":"replaceRandom","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","position":"org.easymock.internal.RecordState:278","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()","position":"org.easymock.internal.ReplayState:141","type":"CtInvocationImpl"},"status":0},{"failures":[],"tindex":532,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.internal.Invocation:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"controls":"controls"},"tindex":533,"name":"replace","transplant":{"sourceCode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\r\n    org.easymock.IMocksControl.resetToStrict();\r\n}","position":"org.easymock.EasyMockSupport:500","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\r\n    org.easymock.IMocksControl.resetToDefault();\r\n}","position":"org.easymock.EasyMockSupport:489","type":"CtForEachImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":534,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.RecordState:315","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:43","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":535,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","position":"org.easymock.internal.RecordState:284","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","position":"org.easymock.internal.DefaultClassInstantiator:164","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"rawType":"rawType","typeVariableMap":"typeVariableMap","this":"this","candidateParameter":"candidateParameter"},"tindex":536,"name":"replace","transplant":{"sourceCode":"return true","position":"org.easymock.internal.BridgeMethodResolver:200","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\r\n    if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\r\n        return false;\r\n    } \r\n    break;\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:188","type":"CtIfImpl"},"status":0},{"failures":[],"tindex":537,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"-5418279681566430252L","position":"org.easymock.internal.RecordState:31","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","this":"this","mockedMethods":"mockedMethods"},"tindex":538,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:70","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:172","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","this":"this","mockedMethods":"mockedMethods"},"tindex":539,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:207","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:243","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":540,"name":"replace","transplant":{"sourceCode":"return ","position":"org.easymock.internal.RecordState:292","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)))","position":"org.easymock.Capture:119","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","this":"this"},"tindex":541,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMockSupport:306","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:172","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":542,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","position":"org.easymock.internal.MockInvocationHandler:45","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","position":"org.easymock.internal.EasyMockProperties:63","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":543,"name":"replaceRandom","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","position":"org.easymock.internal.RecordState:284","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","position":"org.easymock.internal.AndroidClassProxyFactory:75","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":544,"name":"replace","transplant":{"sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","position":"org.easymock.Capture:76","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)))","position":"org.easymock.Capture:119","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":545,"name":"replaceRandom","transplant":{"sourceCode":"return 0","position":"org.easymock.EasyMock:978","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","position":"org.easymock.internal.DefaultClassInstantiator:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":546,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMockSupport:349","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:225","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":547,"name":"replaceReaction","transplant":{"sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\r\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\r\n} ","position":"org.easymock.internal.EasyMockProperties:47","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\r\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\r\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\r\n    } \r\n}","position":"org.easymock.internal.EasyMockProperties:45","type":"CtSynchronizedImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":548,"name":"replace","transplant":{"sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","position":"org.easymock.internal.DefaultClassInstantiator:164","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":549,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","position":"org.easymock.internal.RecordState:91","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"))","position":"org.easymock.internal.BridgeMethodResolver:92","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":550,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","position":"org.easymock.internal.MethodSerializationWrapper:30","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-4214363692271370781L","position":"org.easymock.Capture:31","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":551,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":552,"name":"replaceRandom","transplant":{"sourceCode":"final java.io.IOException java.io.IOException","position":"org.easymock.internal.EasyMockProperties:71","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","position":"org.easymock.internal.DefaultClassInstantiator:191","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":553,"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.easymock.internal.Invocation:130","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:43","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":554,"name":"replaceWittgenstein","transplant":{"sourceCode":"try {\r\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\r\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\r\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\r\n}","position":"org.easymock.internal.MocksControl:140","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","position":"org.easymock.internal.MocksControl:141","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":555,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","position":"org.easymock.internal.LastControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-551735356674347591L","position":"org.easymock.internal.matchers.InstanceOf:27","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":556,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.matchers.Any:36","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Object == null","position":"org.easymock.internal.matchers.Equals:38","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":557,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:104","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","name":"name","this":"this"},"tindex":558,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:196","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"parameterTypes":"paramTypes","i":"i"},"tindex":559,"name":"replace","transplant":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","position":"org.easymock.internal.ReflectionUtils:174","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","position":"org.easymock.ConstructorArgs:54","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":560,"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","position":"org.easymock.internal.matchers.Contains:40","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","position":"org.easymock.internal.matchers.Contains:40","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":561,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","position":"org.easymock.internal.LastControl:35","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","position":"org.easymock.internal.MethodSerializationWrapper:40","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":562,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.RecordState:324","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:43","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":563,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","position":"org.easymock.internal.RecordState:278","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"result":"method","bridgeMethod":"method"},"tindex":564,"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Method == null) {\r\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:91","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","position":"org.easymock.internal.DefaultClassInstantiator:191","type":"CtInvocationImpl"},"status":0},{"failures":[],"tindex":565,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","position":"org.easymock.internal.MethodSerializationWrapper:38","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":566,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:155","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":567,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":568,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":569,"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.easymock.internal.MocksControl != null) {\r\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\r\n} else {\r\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\r\n}","position":"org.easymock.internal.LastControl:48","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","position":"org.easymock.internal.LastControl:49","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":570,"name":"replaceReaction","transplant":{"sourceCode":"return \"gt\"","position":"org.easymock.internal.matchers.GreaterThan:32","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.easymock.LogicalOperator:62","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":571,"name":"replaceRandom","transplant":{"sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","position":"org.easymock.internal.LastControl:35","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","position":"org.easymock.internal.ReflectionUtils:102","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"toMock":"toMock","name":"name","this":"this"},"tindex":572,"name":"replace","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:163","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:196","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":573,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","position":"org.easymock.internal.MocksControl:114","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","position":"org.easymock.internal.DefaultClassInstantiator:191","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":574,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:225","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":575,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.RecordState:315","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","position":"org.easymock.internal.matchers.Equals:57","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":576,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","position":"org.easymock.internal.MockBuilder:159","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","position":"org.easymock.internal.DefaultClassInstantiator:164","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":577,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","position":"org.easymock.internal.ReflectionUtils:214","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","position":"org.easymock.internal.AndroidClassProxyFactory:55","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":578,"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.internal.ReflectionUtils:165","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>[][int].isPrimitive()","position":"org.easymock.internal.Invocation:138","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":579,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","position":"org.easymock.internal.ClassInstantiatorFactory:52","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\r\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\r\n    org.easymock.internal.AndroidSupport.boolean = true;\r\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\r\n    org.easymock.internal.AndroidSupport.boolean = false;\r\n}","position":"org.easymock.internal.AndroidSupport:26","type":"CtTryImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":580,"name":"replaceReaction","transplant":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>","position":"org.easymock.internal.BridgeMethodResolver:254","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":581,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","position":"org.easymock.internal.RecordState:91","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":582,"name":"replaceWittgenstein","transplant":{"sourceCode":"return null","position":"org.easymock.EasyMock:1420","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Type instanceof java.lang.Class<?> ? ((java.lang.Class<?>)(java.lang.reflect.Type)) : null","position":"org.easymock.internal.BridgeMethodResolver:359","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":583,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","position":"org.easymock.internal.MocksControl:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:138","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":584,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","position":"org.easymock.internal.MockBuilder:210","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","position":"org.easymock.internal.ReplayState:46","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":585,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\r\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\r\n} ","position":"org.easymock.ConstructorArgs:58","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"mock":"arg"},"tindex":586,"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","position":"org.easymock.internal.MocksControl:153","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","position":"org.easymock.ConstructorArgs:70","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":587,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Exception java.lang.Exception","position":"org.easymock.ConstructorArgs:69","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:257","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":588,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","position":"org.easymock.Capture:76","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","position":"org.easymock.internal.AndroidClassProxyFactory:55","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":589,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","position":"org.easymock.internal.LastControl:35","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-6743402320315331536L","position":"org.easymock.internal.Range:25","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":590,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","position":"org.easymock.internal.ClassInstantiatorFactory:78","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","position":"org.easymock.internal.ClassInstantiatorFactory:78","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":591,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.SecurityException java.lang.SecurityException","position":"org.easymock.internal.Invocation:182","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","position":"org.easymock.internal.MethodSerializationWrapper:33","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":592,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","position":"org.easymock.internal.MockBuilder:156","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","position":"org.easymock.internal.AndroidClassProxyFactory:55","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":593,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","position":"org.easymock.internal.LastControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","position":"org.easymock.internal.matchers.InstanceOf:40","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"java.lang.Integer.MAX_VALUE":"minimum","maximum":"maximum"},"tindex":594,"name":"replace","transplant":{"sourceCode":"return (int) == (java.lang.Integer.int)","position":"org.easymock.internal.Range:85","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) == (int)","position":"org.easymock.internal.Range:52","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":595,"name":"replaceRandom","transplant":{"sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","position":"org.easymock.internal.LastControl:93","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","position":"org.easymock.internal.LastControl:93","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":596,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:352","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":597,"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","position":"org.easymock.internal.MockBuilder:226","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","position":"org.easymock.internal.MockBuilder:226","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":598,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","position":"org.easymock.internal.MocksControl:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":599,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","position":"org.easymock.internal.RecordState:294","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","position":"org.easymock.internal.DefaultClassInstantiator:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":600,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:87","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":601,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","position":"org.easymock.internal.Range:41","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","position":"org.easymock.internal.AndroidClassProxyFactory:55","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":602,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:138","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":603,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","position":"org.easymock.internal.RecordState:91","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","position":"org.easymock.internal.DefaultClassInstantiator:164","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":604,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:225","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":605,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:281","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":606,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.ObjectMethodsFilter:62","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","position":"org.easymock.internal.ReflectionUtils:214","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":607,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","position":"org.easymock.internal.MocksControl:114","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.easymock.internal.BridgeMethodResolver:133","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":608,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.RecordState.closeMethod()","position":"org.easymock.internal.RecordState:84","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.closeMethod()","position":"org.easymock.internal.RecordState:76","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":609,"name":"replaceRandom","transplant":{"sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","position":"org.easymock.internal.MocksControl:375","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\r\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\r\n} ","position":"org.easymock.ConstructorArgs:58","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":610,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","position":"org.easymock.internal.ClassProxyFactory:220","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":611,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:213","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":612,"name":"replaceRandom","transplant":{"sourceCode":"return 0","position":"org.easymock.EasyMock:978","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"tindex":613,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = java.lang.Object","position":"org.easymock.internal.DefaultClassInstantiator:124","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":614,"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","position":"org.easymock.internal.ErrorMessage:48","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","position":"org.easymock.internal.matchers.InstanceOf:40","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":615,"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.easymock.internal.Invocation:114","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.internal.matchers.CompareTo:40","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":616,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","position":"org.easymock.internal.ClassProxyFactory:204","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.easymock.internal.BridgeMethodResolver:259","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":617,"name":"replaceRandom","transplant":{"sourceCode":"return (java.lang.Object) == java.lang.Object","position":"org.easymock.internal.matchers.Same:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.internal.matchers.CompareTo:40","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":618,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","position":"org.easymock.internal.MockBuilder:210","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.easymock.internal.BridgeMethodResolver:277","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":619,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","position":"org.easymock.internal.ClassInstantiatorFactory:52","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>)","position":"org.easymock.internal.BridgeMethodResolver:326","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":620,"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.easymock.internal.UnorderedBehavior:102","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.EasyMock:966","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":621,"name":"replaceRandom","transplant":{"sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","position":"org.easymock.internal.ClassProxyFactory:185","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","position":"org.easymock.internal.MocksControl:136","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":622,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.easymock.internal.ObjectMethodsFilter:60","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","position":"org.easymock.internal.MethodSerializationWrapper:36","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":623,"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","position":"org.easymock.internal.ClassInstantiatorFactory:25","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-658998692584342514L","position":"org.easymock.internal.matchers.StartsWith:27","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":624,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","position":"org.easymock.internal.MockBuilder:156","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":625,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:91","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:225","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":626,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","position":"org.easymock.ConstructorArgs:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":627,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","position":"org.easymock.internal.LastControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-6657694947057597484L","position":"org.easymock.internal.matchers.Matches:27","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":628,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","position":"org.easymock.internal.Range:37","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.ObjectMethodsFilter:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":629,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","position":"org.easymock.internal.ReflectionUtils:45","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\r\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\r\n    org.easymock.internal.AndroidSupport.boolean = true;\r\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\r\n    org.easymock.internal.AndroidSupport.boolean = false;\r\n}","position":"org.easymock.internal.AndroidSupport:26","type":"CtTryImpl"},"status":0},{"failures":[],"variableMapping":{"shouldBeUsedInOneThread":"threadSafe","behavior":"behavior"},"tindex":630,"name":"replace","transplant":{"sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","position":"org.easymock.internal.RecordState:340","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","position":"org.easymock.internal.RecordState:336","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":631,"name":"replaceRandom","transplant":{"sourceCode":"new org.easymock.internal.JavaProxyFactory()","position":"org.easymock.internal.MocksControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","position":"org.easymock.internal.matchers.InstanceOf:40","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"args":"methodArgs","org.easymock.internal.Invocation.NO_ARGS":"methodArgs"},"tindex":632,"name":"replace","transplant":{"sourceCode":"return java.lang.Object[] == null ? org.easymock.internal.Invocation.java.lang.Object[] : java.lang.Object[]","position":"org.easymock.internal.Invocation:54","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Object[]","position":"org.easymock.internal.DefaultClassInstantiator:128","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":633,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.BridgeMethodResolver:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Method != null ? org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>) : false","position":"org.easymock.internal.BridgeMethodResolver:136","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":634,"name":"replaceRandom","transplant":{"sourceCode":"new java.util.Properties()","position":"org.easymock.internal.EasyMockProperties:41","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","position":"org.easymock.internal.DefaultClassInstantiator:191","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":635,"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","position":"org.easymock.internal.BridgeMethodResolver:261","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":636,"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.EasyMock:966","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","position":"org.easymock.internal.ClassInstantiatorFactory:52","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":637,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","position":"org.easymock.internal.LastControl:35","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == null) {\r\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:325","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":638,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","position":"org.easymock.internal.MocksControl:86","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:109","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":639,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","position":"org.easymock.internal.ReflectionUtils:47","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","position":"org.easymock.internal.MethodSerializationWrapper:36","type":"CtInvocationImpl"},"status":0},{"failures":[],"tindex":640,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","position":"org.easymock.ConstructorArgs:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":641,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:172","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":642,"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","position":"org.easymock.internal.RecordState:86","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":643,"name":"replaceRandom","transplant":{"sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","position":"org.easymock.internal.ReflectionUtils:104","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Method","position":"org.easymock.internal.ReflectionUtils:107","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matching"},"tindex":644,"name":"replace","transplant":{"sourceCode":"return org.easymock.internal.AndroidSupport.boolean","position":"org.easymock.internal.AndroidSupport:35","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.easymock.internal.ErrorMessage:36","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":645,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:281","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":646,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","position":"org.easymock.internal.ReflectionUtils:214","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":647,"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\r\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\r\n} else {\r\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\r\n}","position":"org.easymock.internal.BridgeMethodResolver:85","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","position":"org.easymock.internal.BridgeMethodResolver:88","type":"CtAssignmentImpl"},"status":0},{"failures":[],"tindex":648,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:257","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":649,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","position":"org.easymock.internal.RecordState:55","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType())","position":"org.easymock.internal.BridgeMethodResolver:318","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"},"tindex":650,"name":"replace","transplant":{"sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","position":"org.easymock.internal.BridgeMethodResolver:277","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":651,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","position":"org.easymock.internal.ReflectionUtils:43","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>","position":"org.easymock.internal.BridgeMethodResolver:254","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":652,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:117","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:117","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"clazz":"cls"},"tindex":653,"name":"replace","transplant":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","position":"org.easymock.internal.BridgeMethodResolver:404","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:242","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"tindex":654,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":655,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:117","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","position":"org.easymock.internal.RecordState:86","type":"CtThrowImpl"},"status":0},{"failures":[],"tindex":656,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","position":"org.easymock.internal.MethodSerializationWrapper:36","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":657,"name":"replaceRandom","transplant":{"sourceCode":"new java.util.concurrent.locks.ReentrantLock()","position":"org.easymock.internal.ReplayState:32","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","position":"org.easymock.internal.ReplayState:46","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":658,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:207","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":659,"name":"replaceRandom","transplant":{"sourceCode":"boolean = true","position":"org.easymock.internal.RecordState:166","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.easymock.internal.RecordState:166","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":660,"name":"replaceReaction","transplant":{"sourceCode":"return \"lt\"","position":"org.easymock.internal.matchers.LessThan:32","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.easymock.LogicalOperator:62","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":661,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","position":"org.easymock.internal.MocksControl:114","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","position":"org.easymock.internal.MethodSerializationWrapper:33","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"},"tindex":662,"name":"replace","transplant":{"sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","position":"org.easymock.internal.ObjectMethodsFilter:50","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","position":"org.easymock.internal.ReflectionUtils:104","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":663,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","position":"org.easymock.internal.MockBuilder:220","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int)","position":"org.easymock.internal.Invocation:74","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":664,"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","position":"org.easymock.internal.ErrorMessage:48","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","position":"org.easymock.internal.matchers.Compare:45","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":665,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","position":"org.easymock.internal.MockBuilder:226","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":666,"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.easymock.internal.JavaProxyFactory()","position":"org.easymock.internal.MocksControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-7799769066534714634L","position":"org.easymock.internal.MockInvocationHandler:27","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":667,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","position":"org.easymock.internal.MocksControl:114","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:249","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":668,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","position":"org.easymock.internal.MocksControl:114","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","position":"org.easymock.internal.MockBuilder:117","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":669,"name":"replaceRandom","transplant":{"sourceCode":"final java.io.IOException java.io.IOException","position":"org.easymock.internal.EasyMockProperties:71","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\r\n    java.util.concurrent.locks.ReentrantLock.lock();\r\n    try {\r\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\r\n    } finally {\r\n        java.util.concurrent.locks.ReentrantLock.unlock();\r\n    }\r\n} ","position":"org.easymock.internal.ReplayState:42","type":"CtIfImpl"},"status":0},{"failures":[],"tindex":670,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","position":"org.easymock.internal.MethodSerializationWrapper:33","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":671,"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.easymock.internal.Invocation:130","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.EasyMock:966","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":672,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","position":"org.easymock.internal.matchers.Captures:50","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":673,"name":"replaceReaction","transplant":{"sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","position":"org.easymock.internal.RecordState:161","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:163","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":674,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","position":"org.easymock.internal.MocksControl:86","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:225","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":675,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","position":"org.easymock.internal.ArgumentToString:72","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\r\n    return true;\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:132","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":676,"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:126","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:149","type":"CtThrowImpl"},"status":0},{"failures":[],"tindex":677,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType())","position":"org.easymock.internal.BridgeMethodResolver:318","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":678,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:155","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":679,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","position":"org.easymock.internal.RecordState:267","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","position":"org.easymock.internal.ClassProxyFactory:220","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"actual":"actual","expected":"actual"},"tindex":680,"name":"replace","transplant":{"sourceCode":"return java.lang.Object.equals(java.lang.Object)","position":"org.easymock.internal.matchers.Equals:40","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:49","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":681,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:247","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":682,"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Stack<org.easymock.internal.Invocation> java.util.Stack<org.easymock.internal.Invocation> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.get()","position":"org.easymock.internal.LastControl:132","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Stack<org.easymock.internal.Invocation> java.util.Stack<org.easymock.internal.Invocation> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.get()","position":"org.easymock.internal.LastControl:132","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"tindex":683,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:163","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":684,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.RecordState:315","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.internal.Invocation:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":685,"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.easymock.internal.ExpectedInvocation:85","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.easymock.internal.matchers.Any:36","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":686,"name":"replaceRandom","transplant":{"sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","position":"org.easymock.internal.LastControl:93","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","position":"org.easymock.internal.MocksControl:136","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":687,"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.EasyMock:966","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.AndroidSupport.boolean","position":"org.easymock.internal.AndroidSupport:35","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":688,"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:61","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:61","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":689,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:264","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":690,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:243","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":691,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:87","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":692,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:70","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":693,"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","position":"org.easymock.internal.DefaultClassInstantiator:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","position":"org.easymock.internal.DefaultClassInstantiator:111","type":"CtAssignmentImpl"},"status":0},{"failures":[],"tindex":694,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Class<?> = java.lang.Class<?>","position":"org.easymock.internal.BridgeMethodResolver:254","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":695,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"))","position":"org.easymock.internal.BridgeMethodResolver:92","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":696,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","position":"org.easymock.internal.MethodSerializationWrapper:30","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\r\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\r\n} ","position":"org.easymock.ConstructorArgs:58","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":697,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","position":"org.easymock.internal.MethodSerializationWrapper:30","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-8447010713532143168L","position":"org.easymock.internal.matchers.CompareTo:28","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{"expected":"o"},"tindex":698,"name":"replace","transplant":{"sourceCode":"return java.lang.Object","position":"org.easymock.internal.matchers.Equals:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","position":"org.easymock.internal.RecordState:221","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":699,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Constructor<?>.getParameterTypes()","position":"org.easymock.internal.ReflectionUtils:168","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Constructor<?>.getParameterTypes()","position":"org.easymock.internal.ReflectionUtils:168","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":700,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","position":"org.easymock.EasyMock:1875","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Type instanceof java.lang.Class<?> ? ((java.lang.Class<?>)(java.lang.reflect.Type)) : null","position":"org.easymock.internal.BridgeMethodResolver:359","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":701,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","position":"org.easymock.internal.ReflectionUtils:47","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.IProxyFactory","position":"org.easymock.internal.MocksControl:131","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":702,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:104","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":703,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.matchers.Captures:51","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:52","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":704,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","position":"org.easymock.internal.RecordState:278","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":705,"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.internal.matchers.CompareTo:40","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.AndroidSupport.boolean","position":"org.easymock.internal.AndroidSupport:35","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":706,"name":"replaceReaction","transplant":{"sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","position":"org.easymock.internal.DefaultClassInstantiator:186","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\r\n    continue;\r\n} ","position":"org.easymock.internal.ReflectionUtils:92","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":707,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","position":"org.easymock.internal.MockBuilder:210","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)))","position":"org.easymock.internal.BridgeMethodResolver:354","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":708,"name":"replaceWittgenstein","transplant":{"sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","position":"org.easymock.internal.BridgeMethodResolver:88","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","position":"org.easymock.internal.BridgeMethodResolver:88","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"actual":"expected","expected":"expected"},"tindex":709,"name":"replace","transplant":{"sourceCode":"return (java.lang.Object) == java.lang.Object","position":"org.easymock.internal.matchers.Same:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:37","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":710,"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.EasyMock:966","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>[][int].isPrimitive()","position":"org.easymock.internal.Invocation:138","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":711,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","position":"org.easymock.internal.RecordState:294","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":712,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:104","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"result":"bridgeMethod"},"tindex":713,"name":"replace","transplant":{"sourceCode":"return null","position":"org.easymock.internal.ReflectionUtils:117","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.easymock.internal.BridgeMethodResolver:113","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":714,"name":"replaceWittgenstein","transplant":{"sourceCode":"return null","position":"org.easymock.EasyMock:602","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","position":"org.easymock.internal.DefaultClassInstantiator:118","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":715,"name":"replaceReaction","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","position":"org.easymock.internal.RecordState:278","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","position":"org.easymock.internal.DefaultClassInstantiator:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":716,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.RecordState:324","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:49","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":717,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"try {\r\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\r\n    org.easymock.internal.AndroidSupport.boolean = true;\r\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\r\n    org.easymock.internal.AndroidSupport.boolean = false;\r\n}","position":"org.easymock.internal.AndroidSupport:26","type":"CtTryImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":718,"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.internal.RecordState:327","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>[][int].isPrimitive()","position":"org.easymock.internal.Invocation:138","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":719,"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.io.InputStream != null) {\r\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\r\n    try {\r\n        java.util.Properties.load(java.io.InputStream);\r\n    } catch (final java.io.IOException java.io.IOException) {\r\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\r\n    } finally {\r\n        try {\r\n            java.io.InputStream.close();\r\n        } catch (final java.io.IOException java.io.IOException) {\r\n        }\r\n    }\r\n} ","position":"org.easymock.internal.EasyMockProperties:62","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\r\n    java.util.Properties.load(java.io.InputStream);\r\n} catch (final java.io.IOException java.io.IOException) {\r\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\r\n} finally {\r\n    try {\r\n        java.io.InputStream.close();\r\n    } catch (final java.io.IOException java.io.IOException) {\r\n    }\r\n}","position":"org.easymock.internal.EasyMockProperties:64","type":"CtTryImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":720,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","position":"org.easymock.internal.ReflectionUtils:30","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","position":"org.easymock.internal.RecordState:336","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":721,"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.easymock.EasyMock:602","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","position":"org.easymock.internal.ReflectionUtils:102","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":722,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","position":"org.easymock.EasyMock:1875","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","position":"org.easymock.internal.BridgeMethodResolver:348","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":723,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":724,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","position":"org.easymock.internal.MocksControl:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:243","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":725,"name":"replaceRandom","transplant":{"sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","position":"org.easymock.internal.ReflectionUtils:89","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","position":"org.easymock.internal.MethodSerializationWrapper:33","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":726,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","position":"org.easymock.internal.ReflectionUtils:214","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.ObjectMethodsFilter:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":727,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:316","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":728,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:243","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":729,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":730,"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\r\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\r\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\r\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\r\n        } \r\n    }\r\n} ","position":"org.easymock.internal.EasyMockProperties:44","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\r\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\r\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\r\n    } \r\n}","position":"org.easymock.internal.EasyMockProperties:45","type":"CtSynchronizedImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":731,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","position":"org.easymock.internal.MockBuilder:220","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type == null) {\r\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:325","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":732,"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.internal.matchers.CompareTo:40","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","position":"org.easymock.internal.ClassInstantiatorFactory:52","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":733,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:148","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":734,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.matchers.Any:36","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:49","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":735,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","position":"org.easymock.internal.MocksControl:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:87","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":736,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","position":"org.easymock.internal.Range:41","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","position":"org.easymock.internal.ClassProxyFactory:220","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":737,"name":"replaceRandom","transplant":{"sourceCode":"new java.util.concurrent.locks.ReentrantLock()","position":"org.easymock.internal.ReplayState:32","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.IProxyFactory","position":"org.easymock.internal.MocksControl:131","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":738,"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","position":"org.easymock.internal.MocksControl:380","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","position":"org.easymock.internal.MockBuilder:117","type":"CtAssignmentImpl"},"status":0},{"failures":[],"tindex":739,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","position":"org.easymock.internal.RecordState:336","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":740,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:155","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":741,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","position":"org.easymock.internal.RecordState:284","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","position":"org.easymock.internal.DefaultClassInstantiator:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":742,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:148","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:207","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":743,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":744,"name":"replaceRandom","transplant":{"sourceCode":"return ","position":"org.easymock.internal.UnorderedBehavior:41","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"break","position":"org.easymock.Capture:110","type":"CtBreakImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":745,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:172","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":746,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","position":"org.easymock.internal.ReplayState:149","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.ObjectMethodsFilter:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":747,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","position":"org.easymock.internal.LastControl:35","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-8447010713532143168L","position":"org.easymock.internal.matchers.CompareTo:28","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":748,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","position":"org.easymock.internal.MethodSerializationWrapper:30","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","position":"org.easymock.internal.MethodSerializationWrapper:40","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":749,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","position":"org.easymock.internal.AndroidClassProxyFactory:55","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":750,"name":"replaceRandom","transplant":{"sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","position":"org.easymock.internal.LastControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":751,"name":"replace","transplant":{"sourceCode":"return \"cmpEq\"","position":"org.easymock.internal.matchers.CompareEqual:32","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.String","position":"org.easymock.LogicalOperator:62","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":752,"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.easymock.internal.Results:52","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.easymock.internal.RecordState:315","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":753,"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.easymock.internal.BridgeMethodResolver:180","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.EasyMock:966","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":754,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","position":"org.easymock.internal.ClassInstantiatorFactory:52","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\r\n    if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\r\n        return false;\r\n    } \r\n    break;\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:188","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":755,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","position":"org.easymock.internal.MockBuilder:226","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","position":"org.easymock.internal.DefaultClassInstantiator:164","type":"CtThrowImpl"},"status":0},{"failures":[],"tindex":756,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:173","type":"CtInvocationImpl"},"status":0},{"failures":[],"tindex":757,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","position":"org.easymock.internal.MethodSerializationWrapper:39","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":758,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","position":"org.easymock.internal.MockBuilder:65","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.ObjectMethodsFilter:62","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":759,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","position":"org.easymock.internal.MockBuilder:226","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","position":"org.easymock.internal.AndroidClassProxyFactory:55","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":760,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Throwable java.lang.Throwable","position":"org.easymock.internal.ReplayState:61","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:249","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":761,"name":"replaceWittgenstein","transplant":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","position":"org.easymock.EasyMock:1134","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","position":"org.easymock.internal.DefaultClassInstantiator:118","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":762,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.SecurityException java.lang.SecurityException","position":"org.easymock.internal.Invocation:182","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\r\n    continue;\r\n} ","position":"org.easymock.internal.ReflectionUtils:92","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":763,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:281","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":764,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","position":"org.easymock.ConstructorArgs:70","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":765,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","position":"org.easymock.internal.MocksControl:223","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","position":"org.easymock.internal.DefaultClassInstantiator:123","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":766,"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\r\n} else {\r\n    return java.lang.reflect.Type;\r\n}","position":"org.easymock.internal.BridgeMethodResolver:212","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Type","position":"org.easymock.internal.BridgeMethodResolver:215","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":767,"name":"replaceRandom","transplant":{"sourceCode":"if ((org.easymock.internal.Result) != null) {\r\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\r\n} ","position":"org.easymock.internal.RecordState:116","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:117","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"actual":"expected","expected":"actual"},"tindex":768,"name":"replace","transplant":{"sourceCode":"return (java.lang.Object) == java.lang.Object","position":"org.easymock.internal.matchers.Same:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:43","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":769,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":770,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:91","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":771,"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.easymock.internal.ObjectMethodsFilter:92","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":772,"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.easymock.internal.Results:52","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":773,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","position":"org.easymock.internal.MocksControl:114","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","position":"org.easymock.internal.MethodSerializationWrapper:40","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":774,"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","position":"org.easymock.internal.MockBuilder:156","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","position":"org.easymock.internal.MockBuilder:156","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":775,"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","position":"org.easymock.internal.LastControl:96","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","position":"org.easymock.internal.LastControl:133","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":776,"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","position":"org.easymock.internal.LastControl:133","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","position":"org.easymock.internal.LastControl:96","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":777,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Method != null ? org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>) : false","position":"org.easymock.internal.BridgeMethodResolver:136","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":778,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","position":"org.easymock.internal.LastControl:37","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Collection<org.easymock.internal.matchers.Captures<?>>.clear()","position":"org.easymock.internal.Invocation:175","type":"CtInvocationImpl"},"status":0},{"failures":[],"tindex":779,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","position":"org.easymock.internal.MethodSerializationWrapper:40","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":780,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","position":"org.easymock.internal.ReflectionUtils:45","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:136","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":781,"name":"replaceRandom","transplant":{"sourceCode":"boolean = true","position":"org.easymock.internal.RecordState:166","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","position":"org.easymock.internal.RecordState:336","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":782,"name":"replaceReaction","transplant":{"sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","position":"org.easymock.internal.LastControl:49","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.easymock.internal.MocksControl != null) {\r\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\r\n} else {\r\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\r\n}","position":"org.easymock.internal.LastControl:48","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":783,"name":"replaceRandom","transplant":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:345","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","position":"org.easymock.internal.MocksControl:214","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":784,"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\r\n    return java.lang.Number.intValue();\r\n} else {\r\n    if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\r\n        return java.lang.Number.longValue();\r\n    } else {\r\n        if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\r\n            return java.lang.Number.floatValue();\r\n        } else {\r\n            if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\r\n                return java.lang.Number.doubleValue();\r\n            } else {\r\n                return java.lang.Number;\r\n            }\r\n        }\r\n    }\r\n}","position":"org.easymock.internal.RecordState:198","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Number.floatValue()","position":"org.easymock.internal.RecordState:205","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":785,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:316","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:104","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":786,"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.easymock.internal.ReflectionUtils:165","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.boolean","position":"org.easymock.internal.MocksBehavior:186","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":787,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.RecordState:324","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.internal.Invocation:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":788,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:316","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:87","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":789,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","position":"org.easymock.internal.MocksControl:114","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","position":"org.easymock.internal.LastControl:85","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":790,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","position":"org.easymock.internal.DefaultClassInstantiator:162","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","position":"org.easymock.internal.RecordState:44","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":791,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","position":"org.easymock.internal.MockBuilder:126","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","position":"org.easymock.internal.DefaultClassInstantiator:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":792,"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","position":"org.easymock.internal.ReflectionUtils:155","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","position":"org.easymock.internal.ReflectionUtils:155","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":793,"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.easymock.internal.BridgeMethodResolver:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:43","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":794,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:91","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:196","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":795,"name":"replace","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","position":"org.easymock.internal.RecordState:267","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","position":"org.easymock.internal.DefaultClassInstantiator:91","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":796,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","position":"org.easymock.internal.ClassInstantiatorFactory:52","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","position":"org.easymock.internal.MocksControl:136","type":"CtReturnImpl"},"status":0},{"failures":[],"tindex":797,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","position":"org.easymock.internal.RecordState:44","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":798,"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\r\n    return java.lang.reflect.Method;\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:150","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\r\n    return java.lang.reflect.Method;\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:408","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":799,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:264","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:122","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":800,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","position":"org.easymock.internal.LastControl:35","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"-1726286682930686024L","position":"org.easymock.internal.ObjectMethodsFilter:29","type":"CtUnaryOperatorImpl"},"status":0},{"failures":[],"tindex":801,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\r\n    continue;\r\n} ","position":"org.easymock.internal.ReflectionUtils:92","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":802,"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.easymock.internal.matchers.CompareTo:40","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.EasyMock:966","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":803,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","position":"org.easymock.EasyMock:1875","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","position":"org.easymock.internal.ClassProxyFactory:206","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":804,"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.easymock.internal.Invocation:94","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.AndroidSupport.boolean","position":"org.easymock.internal.AndroidSupport:35","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":805,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.concurrent.locks.ReentrantLock()","position":"org.easymock.internal.ReplayState:32","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.Invocation.clearCaptures()","position":"org.easymock.internal.MocksBehavior:106","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":806,"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.easymock.EasyMock:966","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.internal.ReflectionUtils:165","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":807,"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.easymock.EasyMock:966","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.easymock.EasyMock:966","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":808,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:352","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":809,"name":"replaceRandom","transplant":{"sourceCode":"return org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","position":"org.easymock.internal.ReflectionUtils:198","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","position":"org.easymock.internal.ReflectionUtils:198","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":810,"name":"replaceRandom","transplant":{"sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","position":"org.easymock.internal.MocksControl:114","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = java.lang.Object","position":"org.easymock.internal.DefaultClassInstantiator:124","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":811,"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\r\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\r\n} else {\r\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\r\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\r\n    java.lang.Object[][int] = java.lang.Object;\r\n}","position":"org.easymock.internal.DefaultClassInstantiator:114","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","position":"org.easymock.internal.DefaultClassInstantiator:118","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":812,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","position":"org.easymock.EasyMock:1248","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","position":"org.easymock.EasyMock:1204","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"actual":"actual","expected":"actual"},"tindex":813,"name":"replace","transplant":{"sourceCode":"return java.lang.Object.equals(java.lang.Object)","position":"org.easymock.internal.matchers.Equals:40","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:37","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":814,"name":"replaceRandom","transplant":{"sourceCode":"return 0","position":"org.easymock.EasyMock:978","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","position":"org.easymock.internal.ObjectMethodsFilter:86","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":815,"name":"replaceRandom","transplant":{"sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","position":"org.easymock.internal.RecordState:55","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\r\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\r\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\r\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\r\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\r\n    } \r\n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\r\n}","position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":816,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","position":"org.easymock.internal.MocksControl:91","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":817,"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","position":"org.easymock.internal.MethodSerializationWrapper:30","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","position":"org.easymock.internal.BridgeMethodResolver:249","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"actual":"expected","expected":"expected"},"tindex":818,"name":"replace","transplant":{"sourceCode":"return (java.lang.Object) == java.lang.Object","position":"org.easymock.internal.matchers.Same:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:52","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"result":"method","bridgeMethod":"method"},"tindex":819,"name":"replace","transplant":{"sourceCode":"if (java.lang.reflect.Method == null) {\r\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\r\n} ","position":"org.easymock.internal.BridgeMethodResolver:91","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\r\n    continue;\r\n} ","position":"org.easymock.internal.ReflectionUtils:92","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":820,"name":"replaceRandom","transplant":{"sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","position":"org.easymock.internal.LastControl:93","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","position":"org.easymock.internal.DefaultClassInstantiator:123","type":"CtInvocationImpl"},"status":0},{"failures":[],"tindex":821,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","position":"org.easymock.internal.ClassProxyFactory:197","type":"CtInvocationImpl"},"status":0},{"failures":[],"tindex":822,"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","position":"org.easymock.internal.ReflectionUtils:102","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":823,"name":"replaceWittgenstein","transplant":{"sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","position":"org.easymock.internal.ClassInstantiatorFactory:25","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","position":"org.easymock.internal.LastControl:91","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":824,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:247","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:190","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":825,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","position":"org.easymock.internal.Invocation:186","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","position":"org.easymock.internal.DefaultClassInstantiator:191","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"actual":"expected","expected":"expected"},"tindex":826,"name":"replace","transplant":{"sourceCode":"return (java.lang.Object) == java.lang.Object","position":"org.easymock.internal.matchers.Same:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:49","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":827,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","position":"org.easymock.internal.RecordState:284","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","position":"org.easymock.internal.AndroidClassProxyFactory:55","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":828,"name":"replaceRandom","transplant":{"sourceCode":"return new org.easymock.internal.Result(new DelegatingAnswer() , false)","position":"org.easymock.internal.Result:97","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.easymock.internal.Result(new DelegatingAnswer() , false)","position":"org.easymock.internal.Result:97","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":829,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","position":"org.easymock.internal.Range:37","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","position":"org.easymock.internal.DefaultClassInstantiator:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":830,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMock:109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":831,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","position":"org.easymock.internal.MocksControl:86","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:87","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":832,"name":"replaceRandom","transplant":{"sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","position":"org.easymock.internal.Invocation:44","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","position":"org.easymock.internal.RecordState:336","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":833,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","position":"org.easymock.internal.ClassProxyFactory:200","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","position":"org.easymock.internal.ClassProxyFactory:197","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":834,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","position":"org.easymock.Capture:76","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":835,"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.easymock.internal.ObjectMethodsFilter:92","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return null","position":"org.easymock.EasyMock:602","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":836,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.String java.lang.String = java.lang.reflect.Method.getName()","position":"org.easymock.internal.Invocation:142","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\r\n    continue;\r\n} ","position":"org.easymock.internal.ReflectionUtils:92","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":837,"name":"replaceReaction","transplant":{"sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\r\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\r\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\r\n    } \r\n}","position":"org.easymock.internal.EasyMockProperties:45","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\r\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\r\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\r\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\r\n        } \r\n    }\r\n} ","position":"org.easymock.internal.EasyMockProperties:44","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":838,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:153","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","position":"org.easymock.internal.RecordState:99","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":839,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:172","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":840,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","position":"org.easymock.internal.MocksControl:86","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":841,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:213","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:262","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":842,"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.easymock.internal.ExpectedInvocation:85","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":843,"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\r\n    return null;\r\n} ","position":"org.easymock.internal.LastControl:116","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\r\n    return null;\r\n} ","position":"org.easymock.internal.LastControl:116","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":844,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","position":"org.easymock.EasyMock:1875","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","position":"org.easymock.internal.BridgeMethodResolver:351","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":845,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","position":"org.easymock.internal.MockBuilder:156","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalAccessException)","position":"org.easymock.internal.DefaultClassInstantiator:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":846,"name":"replaceRandom","transplant":{"sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","position":"org.easymock.internal.MocksControl:380","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","position":"org.easymock.internal.RecordState:44","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":847,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMock:247","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:104","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":848,"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.easymock.internal.Invocation:130","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","position":"org.easymock.internal.matchers.ArrayEquals:37","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":849,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","position":"org.easymock.internal.MocksControl:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:70","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":850,"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","position":"org.easymock.ConstructorArgs:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException)","position":"org.easymock.internal.AndroidClassProxyFactory:55","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":851,"name":"replaceRandom","transplant":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","position":"org.easymock.internal.ReplayState:56","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","position":"org.easymock.internal.ReplayState:56","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":852,"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Throwable java.lang.Throwable","position":"org.easymock.internal.ReplayState:61","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","position":"org.easymock.ConstructorArgs:70","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":853,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","position":"org.easymock.EasyMock:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","position":"org.easymock.EasyMockSupport:243","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":854,"name":"replaceReaction","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","position":"org.easymock.internal.MocksControl:141","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.internal.IProxyFactory","position":"org.easymock.internal.MocksControl:131","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"tindex":855,"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","position":"org.easymock.internal.MocksControl:86","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>)","position":"org.easymock.EasyMockSupport:349","type":"CtReturnImpl"},"status":0}],"tags":{"819":"strong","46":"weak","358":"medium","744":"strong","90":"medium","205":"strong"}}